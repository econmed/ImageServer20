/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Xian.Common.DICOM {

using System;
using System.Text;

public class DcmInputFilter : DcmProducer {
  private IntPtr swigCPtr;

  internal DcmInputFilter(IntPtr cPtr, bool cMemoryOwn) : base(DCMTKPINVOKE.DcmInputFilterUpcast(cPtr), cMemoryOwn) {
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(DcmInputFilter obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected DcmInputFilter() : this(IntPtr.Zero, false) {
  }

  ~DcmInputFilter() {
    Dispose();
  }

  public override void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_DcmInputFilter(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
    base.Dispose();
  }

  public virtual void append(DcmProducer producer) {
    DCMTKPINVOKE.DcmInputFilter_append(swigCPtr, DcmProducer.getCPtr(producer));
  }

}

}
