/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Xian.Common.DICOM {

using System;
using System.Text;

public class LST_HEAD : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal LST_HEAD(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(LST_HEAD obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~LST_HEAD() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_LST_HEAD(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public LST_HEAD() : this(DCMTKPINVOKE.new_LST_HEAD(), true) {
  }

  public void push_back(SWIGTYPE_p_void node) {
    DCMTKPINVOKE.LST_HEAD_push_back(swigCPtr, SWIGTYPE_p_void.getCPtr(node));
  }

  public SWIGTYPE_p_void dequeue() {
    IntPtr cPtr = DCMTKPINVOKE.LST_HEAD_dequeue(swigCPtr);
    return (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public uint size() {
    return DCMTKPINVOKE.LST_HEAD_size(swigCPtr);
  }

  public SWIGTYPE_p_void front() {
    IntPtr cPtr = DCMTKPINVOKE.LST_HEAD_front(swigCPtr);
    return (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void position(SWIGTYPE_p_void node) {
    IntPtr cPtr = DCMTKPINVOKE.LST_HEAD_position(swigCPtr, SWIGTYPE_p_void.getCPtr(node));
    return (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void next() {
    IntPtr cPtr = DCMTKPINVOKE.LST_HEAD_next(swigCPtr);
    return (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public SWIGTYPE_p_void current() {
    IntPtr cPtr = DCMTKPINVOKE.LST_HEAD_current(swigCPtr);
    return (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

}

}
