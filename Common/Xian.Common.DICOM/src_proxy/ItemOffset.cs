/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Xian.Common.DICOM {

using System;
using System.Text;

public class ItemOffset : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal ItemOffset(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(ItemOffset obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~ItemOffset() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_ItemOffset(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public DcmItem item {
    set {
      DCMTKPINVOKE.set_ItemOffset_item(swigCPtr, DcmItem.getCPtr(value));
    } 
    get {
      IntPtr cPtr = DCMTKPINVOKE.get_ItemOffset_item(swigCPtr);
      return (cPtr == IntPtr.Zero) ? null : new DcmItem(cPtr, false);
    } 
  }

  public uint fileOffset {
    set {
      DCMTKPINVOKE.set_ItemOffset_fileOffset(swigCPtr, value);
    } 
    get {
      return DCMTKPINVOKE.get_ItemOffset_fileOffset(swigCPtr);
    } 
  }

  public ItemOffset() : this(DCMTKPINVOKE.new_ItemOffset(), true) {
  }

}

}
