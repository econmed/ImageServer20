/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;
using System.Runtime.InteropServices;

public class DcmTagKey : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DcmTagKey(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DcmTagKey obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DcmTagKey() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_DcmTagKey(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public DcmTagKey() : this(DCMTKPINVOKE.new_DcmTagKey__SWIG_0(), true) {
  }

  public DcmTagKey(DcmTagKey key) : this(DCMTKPINVOKE.new_DcmTagKey__SWIG_1(DcmTagKey.getCPtr(key)), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public DcmTagKey(ushort g, ushort e) : this(DCMTKPINVOKE.new_DcmTagKey__SWIG_2(g, e), true) {
  }

  public void set(DcmTagKey key) {
    DCMTKPINVOKE.DcmTagKey_set__SWIG_0(swigCPtr, DcmTagKey.getCPtr(key));
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set(ushort g, ushort e) {
    DCMTKPINVOKE.DcmTagKey_set__SWIG_1(swigCPtr, g, e);
  }

  public void setGroup(ushort g) {
    DCMTKPINVOKE.DcmTagKey_setGroup(swigCPtr, g);
  }

  public void setElement(ushort e) {
    DCMTKPINVOKE.DcmTagKey_setElement(swigCPtr, e);
  }

  public ushort getGroup() {
    ushort ret = DCMTKPINVOKE.DcmTagKey_getGroup(swigCPtr);
    return ret;
  }

  public ushort getElement() {
    ushort ret = DCMTKPINVOKE.DcmTagKey_getElement(swigCPtr);
    return ret;
  }

  public uint hash() {
    uint ret = DCMTKPINVOKE.DcmTagKey_hash(swigCPtr);
    return ret;
  }

  public string toString() {
    string ret = DCMTKPINVOKE.DcmTagKey_toString(swigCPtr);
    return ret;
  }

  public bool isSignableTag() {
    bool ret = DCMTKPINVOKE.DcmTagKey_isSignableTag(swigCPtr);
    return ret;
  }

}

}
