/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;

public class DcmDataDictionary : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal DcmDataDictionary(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(DcmDataDictionary obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected DcmDataDictionary() : this(IntPtr.Zero, false) {
  }

  ~DcmDataDictionary() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_DcmDataDictionary(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public DcmDataDictionary(bool loadBuiltin, bool loadExternal) : this(DCMTKPINVOKE.new_DcmDataDictionary(loadBuiltin, loadExternal), true) {
  }

  public bool isDictionaryLoaded() {
    return DCMTKPINVOKE.DcmDataDictionary_isDictionaryLoaded(swigCPtr);
  }

  public int numberOfNormalTagEntries() {
    return DCMTKPINVOKE.DcmDataDictionary_numberOfNormalTagEntries(swigCPtr);
  }

  public int numberOfRepeatingTagEntries() {
    return DCMTKPINVOKE.DcmDataDictionary_numberOfRepeatingTagEntries(swigCPtr);
  }

  public int numberOfEntries() {
    return DCMTKPINVOKE.DcmDataDictionary_numberOfEntries(swigCPtr);
  }

  public int numberOfSkeletonEntries() {
    return DCMTKPINVOKE.DcmDataDictionary_numberOfSkeletonEntries(swigCPtr);
  }

  public bool loadDictionary(string fileName, bool errorIfAbsent) {
    return DCMTKPINVOKE.DcmDataDictionary_loadDictionary__SWIG_0(swigCPtr, fileName, errorIfAbsent);
  }

  public bool loadDictionary(string fileName) {
    return DCMTKPINVOKE.DcmDataDictionary_loadDictionary__SWIG_1(swigCPtr, fileName);
  }

  public DcmDictEntry findEntry(DcmTagKey key, string privCreator) {
    IntPtr cPtr = DCMTKPINVOKE.DcmDataDictionary_findEntry__SWIG_0(swigCPtr, DcmTagKey.getCPtr(key), privCreator);
    return (cPtr == IntPtr.Zero) ? null : new DcmDictEntry(cPtr, false);
  }

  public DcmDictEntry findEntry(string name) {
    IntPtr cPtr = DCMTKPINVOKE.DcmDataDictionary_findEntry__SWIG_1(swigCPtr, name);
    return (cPtr == IntPtr.Zero) ? null : new DcmDictEntry(cPtr, false);
  }

  public void clear() {
    DCMTKPINVOKE.DcmDataDictionary_clear(swigCPtr);
  }

  public void addEntry(DcmDictEntry entry) {
    DCMTKPINVOKE.DcmDataDictionary_addEntry(swigCPtr, DcmDictEntry.getCPtr(entry));
  }

  public DcmHashDictIterator normalBegin() {
    return new DcmHashDictIterator(DCMTKPINVOKE.DcmDataDictionary_normalBegin(swigCPtr), true);
  }

  public DcmHashDictIterator normalEnd() {
    return new DcmHashDictIterator(DCMTKPINVOKE.DcmDataDictionary_normalEnd(swigCPtr), true);
  }

  public DcmDictEntryListIterator repeatingBegin() {
    return new DcmDictEntryListIterator(DCMTKPINVOKE.DcmDataDictionary_repeatingBegin(swigCPtr), true);
  }

  public DcmDictEntryListIterator repeatingEnd() {
    return new DcmDictEntryListIterator(DCMTKPINVOKE.DcmDataDictionary_repeatingEnd(swigCPtr), true);
  }

}

}
