/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.DICOM {

using System;
using System.Text;

public class DcmOtherByteOtherWord : DcmElement {
  private IntPtr swigCPtr;

  internal DcmOtherByteOtherWord(IntPtr cPtr, bool cMemoryOwn) : base(DCMTKPINVOKE.DcmOtherByteOtherWordUpcast(cPtr), cMemoryOwn) {
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(DcmOtherByteOtherWord obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  protected DcmOtherByteOtherWord() : this(IntPtr.Zero, false) {
  }

  ~DcmOtherByteOtherWord() {
    Dispose();
  }

  public override void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_DcmOtherByteOtherWord(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
    base.Dispose();
  }

  public DcmOtherByteOtherWord(DcmTag tag, uint len) : this(DCMTKPINVOKE.new_DcmOtherByteOtherWord__SWIG_0(DcmTag.getCPtr(tag), len), true) {
  }

  public DcmOtherByteOtherWord(DcmTag tag) : this(DCMTKPINVOKE.new_DcmOtherByteOtherWord__SWIG_1(DcmTag.getCPtr(tag)), true) {
  }

  public DcmOtherByteOtherWord(DcmOtherByteOtherWord old) : this(DCMTKPINVOKE.new_DcmOtherByteOtherWord__SWIG_2(DcmOtherByteOtherWord.getCPtr(old)), true) {
  }

  public override DcmEVR ident() {
    return (DcmEVR)DCMTKPINVOKE.DcmOtherByteOtherWord_ident(swigCPtr);
  }

  public override uint getVM() {
    return DCMTKPINVOKE.DcmOtherByteOtherWord_getVM(swigCPtr);
  }

  public override OFCondition setVR(DcmEVR vr) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_setVR(swigCPtr, (int)vr), true);
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags, int level, string pixelFileName, SWIGTYPE_p_size_t pixelCounter) {
    DCMTKPINVOKE.DcmOtherByteOtherWord_print__SWIG_0(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags, level, pixelFileName, SWIGTYPE_p_size_t.getCPtr(pixelCounter));
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags, int level, string pixelFileName) {
    DCMTKPINVOKE.DcmOtherByteOtherWord_print__SWIG_1(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags, level, pixelFileName);
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags, int level) {
    DCMTKPINVOKE.DcmOtherByteOtherWord_print__SWIG_2(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags, level);
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags) {
    DCMTKPINVOKE.DcmOtherByteOtherWord_print__SWIG_3(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags);
  }

  public override void print(SWIGTYPE_p_ostream outStream) {
    DCMTKPINVOKE.DcmOtherByteOtherWord_print__SWIG_4(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream));
  }

  public override bool canWriteXfer(E_TransferSyntax newXfer, E_TransferSyntax oldXfer) {
    return DCMTKPINVOKE.DcmOtherByteOtherWord_canWriteXfer(swigCPtr, (int)newXfer, (int)oldXfer);
  }

  public override OFCondition write(DcmOutputStream outStream, E_TransferSyntax oxfer, E_EncodingType enctype) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_write__SWIG_0(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer, (int)enctype), true);
  }

  public override OFCondition write(DcmOutputStream outStream, E_TransferSyntax oxfer) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_write__SWIG_1(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer), true);
  }

  public override OFCondition writeXML(SWIGTYPE_p_ostream outStream, uint flags) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_writeXML__SWIG_0(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags), true);
  }

  public override OFCondition writeXML(SWIGTYPE_p_ostream outStream) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_writeXML__SWIG_1(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream)), true);
  }

  public override OFCondition writeSignatureFormat(DcmOutputStream outStream, E_TransferSyntax oxfer, E_EncodingType enctype) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_writeSignatureFormat__SWIG_0(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer, (int)enctype), true);
  }

  public override OFCondition writeSignatureFormat(DcmOutputStream outStream, E_TransferSyntax oxfer) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_writeSignatureFormat__SWIG_1(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer), true);
  }

  public override OFCondition getUint8(out byte byteVal, uint pos) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getUint8__SWIG_0(swigCPtr, out byteVal, pos), true);
  }

  public override OFCondition getUint8(out byte byteVal) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getUint8__SWIG_1(swigCPtr, out byteVal), true);
  }

  public override OFCondition getUint16(out ushort wordVal, uint pos) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getUint16__SWIG_0(swigCPtr, out wordVal, pos), true);
  }

  public override OFCondition getUint16(out ushort wordVal) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getUint16__SWIG_1(swigCPtr, out wordVal), true);
  }

  public override OFCondition getUint8Array(ref IntPtr byteVals) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getUint8Array(swigCPtr, ref byteVals), true);
  }

  public override OFCondition getUint16Array(ref IntPtr wordVals) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getUint16Array(swigCPtr, ref wordVals), true);
  }

  public override OFCondition getOFString(StringBuilder stringVal, uint pos, bool normalize) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getOFString__SWIG_0(swigCPtr, stringVal, pos, normalize), true);
  }

  public override OFCondition getOFString(StringBuilder stringVal, uint pos) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getOFString__SWIG_1(swigCPtr, stringVal, pos), true);
  }

  public override OFCondition getOFStringArray(StringBuilder stringVal, bool normalize) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getOFStringArray__SWIG_0(swigCPtr, stringVal, normalize), true);
  }

  public override OFCondition getOFStringArray(StringBuilder stringVal) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_getOFStringArray__SWIG_1(swigCPtr, stringVal), true);
  }

  public override OFCondition putUint8Array(byte[] byteValue, uint numBytes) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_putUint8Array(swigCPtr, byteValue, numBytes), true);
  }

  public override OFCondition putUint16Array(ushort[] wordValue, uint numWords) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_putUint16Array(swigCPtr, wordValue, numWords), true);
  }

  public override OFCondition putString(string stringVal) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_putString(swigCPtr, stringVal), true);
  }

  public override OFCondition verify(bool autocorrect) {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_verify__SWIG_0(swigCPtr, autocorrect), true);
  }

  public override OFCondition verify() {
    return new OFCondition(DCMTKPINVOKE.DcmOtherByteOtherWord_verify__SWIG_1(swigCPtr), true);
  }

}

}
