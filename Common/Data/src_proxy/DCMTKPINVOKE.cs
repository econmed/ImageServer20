/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;
using System.Runtime.InteropServices;

class DCMTKPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="SWIGRegisterExceptionCallbacks_DCMTK")]
    public static extern void SWIGRegisterExceptionCallbacks_DCMTK(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_DCMTK")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_DCMTK(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_DCMTK(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_DCMTK(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(DCMTKPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(DCMTKPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="SWIGRegisterStringCallback_DCMTK")]
    public static extern void SWIGRegisterStringCallback_DCMTK(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_DCMTK(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_OFListLinkBase_next")]
  public static extern void set_OFListLinkBase_next(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFListLinkBase_next")]
  public static extern IntPtr get_OFListLinkBase_next(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_OFListLinkBase_prev")]
  public static extern void set_OFListLinkBase_prev(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFListLinkBase_prev")]
  public static extern IntPtr get_OFListLinkBase_prev(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_OFListLinkBase_dummy")]
  public static extern void set_OFListLinkBase_dummy(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFListLinkBase_dummy")]
  public static extern bool get_OFListLinkBase_dummy(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFListLinkBase")]
  public static extern IntPtr new_OFListLinkBase();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFListLinkBase")]
  public static extern void delete_OFListLinkBase(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFListBase")]
  public static extern IntPtr new_OFListBase();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFListBase")]
  public static extern void delete_OFListBase(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_begin")]
  public static extern IntPtr OFListBase_base_begin(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_end")]
  public static extern IntPtr OFListBase_base_end(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_empty")]
  public static extern bool OFListBase_base_empty(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_size")]
  public static extern uint OFListBase_base_size(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_insert")]
  public static extern IntPtr OFListBase_base_insert(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_erase")]
  public static extern IntPtr OFListBase_base_erase(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_splice")]
  public static extern void OFListBase_base_splice(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFListBase_base_clear")]
  public static extern void OFListBase_base_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFConditionBase")]
  public static extern void delete_OFConditionBase(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionBase_clone")]
  public static extern IntPtr OFConditionBase_clone(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionBase_codeAndModule")]
  public static extern uint OFConditionBase_codeAndModule(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionBase_status")]
  public static extern int OFConditionBase_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionBase_text")]
  public static extern string OFConditionBase_text(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionBase_deletable")]
  public static extern bool OFConditionBase_deletable(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionBase_module")]
  public static extern ushort OFConditionBase_module(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionBase_code")]
  public static extern ushort OFConditionBase_code(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFConditionConst__SWIG_0")]
  public static extern IntPtr new_OFConditionConst__SWIG_0(ushort jarg1, ushort jarg2, int jarg3, string jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFConditionConst__SWIG_1")]
  public static extern IntPtr new_OFConditionConst__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFConditionConst")]
  public static extern void delete_OFConditionConst(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionConst_clone")]
  public static extern IntPtr OFConditionConst_clone(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionConst_codeAndModule")]
  public static extern uint OFConditionConst_codeAndModule(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionConst_status")]
  public static extern int OFConditionConst_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionConst_text")]
  public static extern string OFConditionConst_text(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionConst_deletable")]
  public static extern bool OFConditionConst_deletable(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFConditionString__SWIG_0")]
  public static extern IntPtr new_OFConditionString__SWIG_0(ushort jarg1, ushort jarg2, int jarg3, string jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFConditionString__SWIG_1")]
  public static extern IntPtr new_OFConditionString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFConditionString")]
  public static extern void delete_OFConditionString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionString_clone")]
  public static extern IntPtr OFConditionString_clone(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionString_codeAndModule")]
  public static extern uint OFConditionString_codeAndModule(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionString_status")]
  public static extern int OFConditionString_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionString_text")]
  public static extern string OFConditionString_text(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionString_deletable")]
  public static extern bool OFConditionString_deletable(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ECC_Normal")]
  public static extern IntPtr get_ECC_Normal();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFCondition__SWIG_0")]
  public static extern IntPtr new_OFCondition__SWIG_0(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFCondition__SWIG_1")]
  public static extern IntPtr new_OFCondition__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFCondition__SWIG_2")]
  public static extern IntPtr new_OFCondition__SWIG_2();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFCondition__SWIG_3")]
  public static extern IntPtr new_OFCondition__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFCondition")]
  public static extern void delete_OFCondition(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFCondition_module")]
  public static extern ushort OFCondition_module(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFCondition_code")]
  public static extern ushort OFCondition_code(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFCondition_status")]
  public static extern int OFCondition_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFCondition_text")]
  public static extern string OFCondition_text(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFCondition_good")]
  public static extern bool OFCondition_good(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFCondition_bad")]
  public static extern bool OFCondition_bad(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_EC_Normal")]
  public static extern IntPtr get_EC_Normal();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_EC_IllegalParameter")]
  public static extern IntPtr get_EC_IllegalParameter();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_EC_MemoryExhausted")]
  public static extern IntPtr get_EC_MemoryExhausted();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFDate__SWIG_0")]
  public static extern IntPtr new_OFDate__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFDate__SWIG_1")]
  public static extern IntPtr new_OFDate__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFDate__SWIG_2")]
  public static extern IntPtr new_OFDate__SWIG_2(uint jarg1, uint jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFDate")]
  public static extern void delete_OFDate(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_clear")]
  public static extern void OFDate_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_isValid")]
  public static extern bool OFDate_isValid(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_setDate")]
  public static extern bool OFDate_setDate(HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_setYear")]
  public static extern bool OFDate_setYear(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_setMonth")]
  public static extern bool OFDate_setMonth(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_setDay")]
  public static extern bool OFDate_setDay(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_setCurrentDate")]
  public static extern bool OFDate_setCurrentDate(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_setISOFormattedDate")]
  public static extern bool OFDate_setISOFormattedDate(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_getYear")]
  public static extern uint OFDate_getYear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_getMonth")]
  public static extern uint OFDate_getMonth(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_getDay")]
  public static extern uint OFDate_getDay(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_getISOFormattedDate__SWIG_0")]
  public static extern bool OFDate_getISOFormattedDate__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_getISOFormattedDate__SWIG_1")]
  public static extern bool OFDate_getISOFormattedDate__SWIG_1(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDate_getCurrentDate")]
  public static extern IntPtr OFDate_getCurrentDate();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFDateTime__SWIG_0")]
  public static extern IntPtr new_OFDateTime__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFDateTime__SWIG_1")]
  public static extern IntPtr new_OFDateTime__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFDateTime__SWIG_2")]
  public static extern IntPtr new_OFDateTime__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFDateTime")]
  public static extern void delete_OFDateTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_clear")]
  public static extern void OFDateTime_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_isValid")]
  public static extern bool OFDateTime_isValid(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_setDateTime__SWIG_0")]
  public static extern bool OFDateTime_setDateTime__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4, uint jarg5, uint jarg6, double jarg7, double jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_setDateTime__SWIG_1")]
  public static extern bool OFDateTime_setDateTime__SWIG_1(HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4, uint jarg5, uint jarg6, double jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_setDate")]
  public static extern bool OFDateTime_setDate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_setTime")]
  public static extern bool OFDateTime_setTime(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_setCurrentDateTime")]
  public static extern bool OFDateTime_setCurrentDateTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_setISOFormattedDateTime")]
  public static extern bool OFDateTime_setISOFormattedDateTime(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getDate")]
  public static extern IntPtr OFDateTime_getDate(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getTime")]
  public static extern IntPtr OFDateTime_getTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getISOFormattedDateTime__SWIG_0")]
  public static extern bool OFDateTime_getISOFormattedDateTime__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getISOFormattedDateTime__SWIG_1")]
  public static extern bool OFDateTime_getISOFormattedDateTime__SWIG_1(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getISOFormattedDateTime__SWIG_2")]
  public static extern bool OFDateTime_getISOFormattedDateTime__SWIG_2(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getISOFormattedDateTime__SWIG_3")]
  public static extern bool OFDateTime_getISOFormattedDateTime__SWIG_3(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getISOFormattedDateTime__SWIG_4")]
  public static extern bool OFDateTime_getISOFormattedDateTime__SWIG_4(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getISOFormattedDateTime__SWIG_5")]
  public static extern bool OFDateTime_getISOFormattedDateTime__SWIG_5(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5, bool jarg6, string jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFDateTime_getCurrentDateTime")]
  public static extern IntPtr OFDateTime_getCurrentDateTime();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFTime__SWIG_0")]
  public static extern IntPtr new_OFTime__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFTime__SWIG_1")]
  public static extern IntPtr new_OFTime__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFTime__SWIG_2")]
  public static extern IntPtr new_OFTime__SWIG_2(uint jarg1, uint jarg2, double jarg3, double jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_OFTime__SWIG_3")]
  public static extern IntPtr new_OFTime__SWIG_3(uint jarg1, uint jarg2, double jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_OFTime")]
  public static extern void delete_OFTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_clear")]
  public static extern void OFTime_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_isValid")]
  public static extern bool OFTime_isValid(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTime__SWIG_0")]
  public static extern bool OFTime_setTime__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3, double jarg4, double jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTime__SWIG_1")]
  public static extern bool OFTime_setTime__SWIG_1(HandleRef jarg1, uint jarg2, uint jarg3, double jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setHour")]
  public static extern bool OFTime_setHour(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setMinute")]
  public static extern bool OFTime_setMinute(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setSecond")]
  public static extern bool OFTime_setSecond(HandleRef jarg1, double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeZone__SWIG_0")]
  public static extern bool OFTime_setTimeZone__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeZone__SWIG_1")]
  public static extern bool OFTime_setTimeZone__SWIG_1(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeInSeconds__SWIG_0")]
  public static extern bool OFTime_setTimeInSeconds__SWIG_0(HandleRef jarg1, double jarg2, double jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeInSeconds__SWIG_1")]
  public static extern bool OFTime_setTimeInSeconds__SWIG_1(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeInSeconds__SWIG_2")]
  public static extern bool OFTime_setTimeInSeconds__SWIG_2(HandleRef jarg1, double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeInHours__SWIG_0")]
  public static extern bool OFTime_setTimeInHours__SWIG_0(HandleRef jarg1, double jarg2, double jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeInHours__SWIG_1")]
  public static extern bool OFTime_setTimeInHours__SWIG_1(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setTimeInHours__SWIG_2")]
  public static extern bool OFTime_setTimeInHours__SWIG_2(HandleRef jarg1, double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setCurrentTime")]
  public static extern bool OFTime_setCurrentTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_setISOFormattedTime")]
  public static extern bool OFTime_setISOFormattedTime(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getHour")]
  public static extern uint OFTime_getHour(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getMinute")]
  public static extern uint OFTime_getMinute(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getSecond")]
  public static extern double OFTime_getSecond(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getIntSecond")]
  public static extern uint OFTime_getIntSecond(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getMilliSecond")]
  public static extern uint OFTime_getMilliSecond(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getMicroSecond")]
  public static extern uint OFTime_getMicroSecond(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getTimeZone")]
  public static extern double OFTime_getTimeZone(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getTimeInSeconds__SWIG_0")]
  public static extern double OFTime_getTimeInSeconds__SWIG_0(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getTimeInSeconds__SWIG_1")]
  public static extern double OFTime_getTimeInSeconds__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getTimeInSeconds__SWIG_2")]
  public static extern double OFTime_getTimeInSeconds__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getTimeInHours__SWIG_0")]
  public static extern double OFTime_getTimeInHours__SWIG_0(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getTimeInHours__SWIG_1")]
  public static extern double OFTime_getTimeInHours__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getTimeInHours__SWIG_2")]
  public static extern double OFTime_getTimeInHours__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getCoordinatedUniversalTime")]
  public static extern IntPtr OFTime_getCoordinatedUniversalTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getLocalTime")]
  public static extern IntPtr OFTime_getLocalTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getISOFormattedTime__SWIG_0")]
  public static extern bool OFTime_getISOFormattedTime__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getISOFormattedTime__SWIG_1")]
  public static extern bool OFTime_getISOFormattedTime__SWIG_1(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getISOFormattedTime__SWIG_2")]
  public static extern bool OFTime_getISOFormattedTime__SWIG_2(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getISOFormattedTime__SWIG_3")]
  public static extern bool OFTime_getISOFormattedTime__SWIG_3(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getISOFormattedTime__SWIG_4")]
  public static extern bool OFTime_getISOFormattedTime__SWIG_4(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getCurrentTime")]
  public static extern IntPtr OFTime_getCurrentTime();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFTime_getLocalTimeZone")]
  public static extern double OFTime_getLocalTimeZone();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_castToDcmElement")]
  public static extern IntPtr castToDcmElement(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCTYPES_H")]
  public static extern int get_DCTYPES_H();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTK_XML_NAMESPACE_URI")]
  public static extern string get_DCMTK_XML_NAMESPACE_URI();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_PF_shortenLongTagValues")]
  public static extern uint get_DCMTypes_PF_shortenLongTagValues();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_PF_showTreeStructure")]
  public static extern uint get_DCMTypes_PF_showTreeStructure();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_PF_lastEntry")]
  public static extern uint get_DCMTypes_PF_lastEntry();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_XF_addDocumentType")]
  public static extern uint get_DCMTypes_XF_addDocumentType();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_XF_writeBinaryData")]
  public static extern uint get_DCMTypes_XF_writeBinaryData();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_XF_encodeBase64")]
  public static extern uint get_DCMTypes_XF_encodeBase64();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_XF_useDcmtkNamespace")]
  public static extern uint get_DCMTypes_XF_useDcmtkNamespace();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTypes_XF_embedDocumentType")]
  public static extern uint get_DCMTypes_XF_embedDocumentType();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DCMTypes")]
  public static extern IntPtr new_DCMTypes();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DCMTypes")]
  public static extern void delete_DCMTypes(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_UndefinedLength")]
  public static extern uint get_DCM_UndefinedLength();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_swapIfNecessary")]
  public static extern IntPtr swapIfNecessary(int jarg1, int jarg2, HandleRef jarg3, uint jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_swapBytes")]
  public static extern void swapBytes(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_swapShort")]
  public static extern ushort swapShort(ushort jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_swap2Bytes")]
  public static extern void swap2Bytes(byte[] jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_swap4Bytes")]
  public static extern void swap4Bytes(byte[] jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmProducer")]
  public static extern void delete_DcmProducer(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmProducer_good")]
  public static extern bool DcmProducer_good(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmProducer_status")]
  public static extern IntPtr DcmProducer_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmProducer_eos")]
  public static extern bool DcmProducer_eos(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmProducer_avail")]
  public static extern uint DcmProducer_avail(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmProducer_read")]
  public static extern uint DcmProducer_read(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmProducer_skip")]
  public static extern uint DcmProducer_skip(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmProducer_putback")]
  public static extern void DcmProducer_putback(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmInputFilter")]
  public static extern void delete_DcmInputFilter(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputFilter_append")]
  public static extern void DcmInputFilter_append(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmInputStreamFactory")]
  public static extern void delete_DcmInputStreamFactory(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStreamFactory_create")]
  public static extern IntPtr DcmInputStreamFactory_create(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStreamFactory_clone")]
  public static extern IntPtr DcmInputStreamFactory_clone(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmInputStream")]
  public static extern void delete_DcmInputStream(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_good")]
  public static extern bool DcmInputStream_good(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_status")]
  public static extern IntPtr DcmInputStream_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_eos")]
  public static extern bool DcmInputStream_eos(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_avail")]
  public static extern uint DcmInputStream_avail(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_read")]
  public static extern uint DcmInputStream_read(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_skip")]
  public static extern uint DcmInputStream_skip(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_tell")]
  public static extern uint DcmInputStream_tell(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_installCompressionFilter")]
  public static extern IntPtr DcmInputStream_installCompressionFilter(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_newFactory")]
  public static extern IntPtr DcmInputStream_newFactory(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_mark")]
  public static extern void DcmInputStream_mark(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputStream_putback")]
  public static extern void DcmInputStream_putback(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmConsumer")]
  public static extern void delete_DcmConsumer(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmConsumer_good")]
  public static extern bool DcmConsumer_good(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmConsumer_status")]
  public static extern IntPtr DcmConsumer_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmConsumer_isFlushed")]
  public static extern bool DcmConsumer_isFlushed(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmConsumer_avail")]
  public static extern uint DcmConsumer_avail(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmConsumer_write")]
  public static extern uint DcmConsumer_write(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmConsumer_flush")]
  public static extern void DcmConsumer_flush(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmOutputFilter")]
  public static extern void delete_DcmOutputFilter(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputFilter_append")]
  public static extern void DcmOutputFilter_append(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmOutputStream")]
  public static extern void delete_DcmOutputStream(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_good")]
  public static extern bool DcmOutputStream_good(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_status")]
  public static extern IntPtr DcmOutputStream_status(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_isFlushed")]
  public static extern bool DcmOutputStream_isFlushed(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_avail")]
  public static extern uint DcmOutputStream_avail(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_write")]
  public static extern uint DcmOutputStream_write(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_flush")]
  public static extern void DcmOutputStream_flush(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_tell")]
  public static extern uint DcmOutputStream_tell(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputStream_installCompressionFilter")]
  public static extern IntPtr DcmOutputStream_installCompressionFilter(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMVR_H")]
  public static extern int get_DCMVR_H();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_dcmEnableUnknownVRGeneration")]
  public static extern void set_dcmEnableUnknownVRGeneration(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmEnableUnknownVRGeneration")]
  public static extern IntPtr get_dcmEnableUnknownVRGeneration();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_dcmEnableUnlimitedTextVRGeneration")]
  public static extern void set_dcmEnableUnlimitedTextVRGeneration(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmEnableUnlimitedTextVRGeneration")]
  public static extern IntPtr get_dcmEnableUnlimitedTextVRGeneration();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmVR__SWIG_0")]
  public static extern IntPtr new_DcmVR__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmVR__SWIG_1")]
  public static extern IntPtr new_DcmVR__SWIG_1(int jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmVR__SWIG_2")]
  public static extern IntPtr new_DcmVR__SWIG_2(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmVR__SWIG_3")]
  public static extern IntPtr new_DcmVR__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_setVR__SWIG_0")]
  public static extern void DcmVR_setVR__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_setVR__SWIG_1")]
  public static extern void DcmVR_setVR__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_setVR__SWIG_2")]
  public static extern void DcmVR_setVR__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_getEVR")]
  public static extern int DcmVR_getEVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_getValidEVR")]
  public static extern int DcmVR_getValidEVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_getVRName")]
  public static extern string DcmVR_getVRName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_getValidVRName")]
  public static extern string DcmVR_getValidVRName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_getValueWidth")]
  public static extern uint DcmVR_getValueWidth(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_isStandard")]
  public static extern bool DcmVR_isStandard(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_isForInternalUseOnly")]
  public static extern bool DcmVR_isForInternalUseOnly(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_isaString")]
  public static extern bool DcmVR_isaString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_usesExtendedLengthEncoding")]
  public static extern bool DcmVR_usesExtendedLengthEncoding(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_isEquivalent")]
  public static extern bool DcmVR_isEquivalent(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_getMinValueLength")]
  public static extern uint DcmVR_getMinValueLength(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmVR_getMaxValueLength")]
  public static extern uint DcmVR_getMaxValueLength(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmVR")]
  public static extern void delete_DcmVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmXfer__SWIG_0")]
  public static extern IntPtr new_DcmXfer__SWIG_0(int jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmXfer__SWIG_1")]
  public static extern IntPtr new_DcmXfer__SWIG_1(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmXfer__SWIG_2")]
  public static extern IntPtr new_DcmXfer__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmXfer")]
  public static extern void delete_DcmXfer(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_getXfer")]
  public static extern int DcmXfer_getXfer(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_getByteOrder")]
  public static extern int DcmXfer_getByteOrder(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_getXferName")]
  public static extern string DcmXfer_getXferName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_getXferID")]
  public static extern string DcmXfer_getXferID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_isLittleEndian")]
  public static extern bool DcmXfer_isLittleEndian(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_isBigEndian")]
  public static extern bool DcmXfer_isBigEndian(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_isImplicitVR")]
  public static extern bool DcmXfer_isImplicitVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_isExplicitVR")]
  public static extern bool DcmXfer_isExplicitVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_isEncapsulated")]
  public static extern bool DcmXfer_isEncapsulated(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_isNotEncapsulated")]
  public static extern bool DcmXfer_isNotEncapsulated(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_getJPEGProcess8Bit")]
  public static extern uint DcmXfer_getJPEGProcess8Bit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_getJPEGProcess12Bit")]
  public static extern uint DcmXfer_getJPEGProcess12Bit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_getStreamCompression")]
  public static extern int DcmXfer_getStreamCompression(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmXfer_sizeofTagHeader")]
  public static extern uint DcmXfer_sizeofTagHeader(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_gLocalByteOrder")]
  public static extern int get_gLocalByteOrder();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_dcmFindNameOfUID")]
  public static extern string dcmFindNameOfUID(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_dcmFindUIDFromName")]
  public static extern string dcmFindUIDFromName(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmStorageSOPClassUIDs")]
  public static extern IntPtr get_dcmStorageSOPClassUIDs();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_numberOfDcmStorageSOPClassUIDs")]
  public static extern int get_numberOfDcmStorageSOPClassUIDs();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_dcmIsaStorageSOPClassUID")]
  public static extern bool dcmIsaStorageSOPClassUID(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmImageSOPClassUIDs")]
  public static extern IntPtr get_dcmImageSOPClassUIDs();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_numberOfDcmImageSOPClassUIDs")]
  public static extern int get_numberOfDcmImageSOPClassUIDs();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_dcmGenerateUniqueIdentifier__SWIG_0")]
  public static extern string dcmGenerateUniqueIdentifier__SWIG_0(string jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_dcmGenerateUniqueIdentifier__SWIG_1")]
  public static extern string dcmGenerateUniqueIdentifier__SWIG_1(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_dcmSOPClassUIDToModality")]
  public static extern string dcmSOPClassUIDToModality(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_dcmGuessModalityBytes")]
  public static extern uint dcmGuessModalityBytes(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_DTK_IMPLEMENTATION_VERSION_NAME")]
  public static extern string get_OFFIS_DTK_IMPLEMENTATION_VERSION_NAME();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_DTK_IMPLEMENTATION_VERSION_NAME2")]
  public static extern string get_OFFIS_DTK_IMPLEMENTATION_VERSION_NAME2();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_DCMTK_RELEASEDATE")]
  public static extern string get_OFFIS_DCMTK_RELEASEDATE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_UID_ROOT")]
  public static extern string get_OFFIS_UID_ROOT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_DCMTK_VERSION_NUMBER")]
  public static extern int get_OFFIS_DCMTK_VERSION_NUMBER();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_DCMTK_VERSION_STRING")]
  public static extern string get_OFFIS_DCMTK_VERSION_STRING();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_DCMTK_VERSION_SUFFIX")]
  public static extern string get_OFFIS_DCMTK_VERSION_SUFFIX();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_DCMTK_VERSION")]
  public static extern string get_OFFIS_DCMTK_VERSION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_IMPLEMENTATION_CLASS_UID")]
  public static extern string get_OFFIS_IMPLEMENTATION_CLASS_UID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_INSTANCE_CREATOR_UID")]
  public static extern string get_OFFIS_INSTANCE_CREATOR_UID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_CODING_SCHEME_UID_ROOT")]
  public static extern string get_OFFIS_CODING_SCHEME_UID_ROOT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_CODING_SCHEME_VERSION")]
  public static extern string get_OFFIS_CODING_SCHEME_VERSION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_OFFIS_CODING_SCHEME_UID")]
  public static extern string get_OFFIS_CODING_SCHEME_UID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_SITE_UID_ROOT")]
  public static extern string get_SITE_UID_ROOT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_SITE_STUDY_UID_ROOT")]
  public static extern string get_SITE_STUDY_UID_ROOT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_SITE_SERIES_UID_ROOT")]
  public static extern string get_SITE_SERIES_UID_ROOT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_SITE_INSTANCE_UID_ROOT")]
  public static extern string get_SITE_INSTANCE_UID_ROOT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrivateGenericFileSOPClass")]
  public static extern string get_UID_PrivateGenericFileSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StandardApplicationContext")]
  public static extern string get_UID_StandardApplicationContext();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_LittleEndianImplicitTransferSyntax")]
  public static extern string get_UID_LittleEndianImplicitTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_LittleEndianExplicitTransferSyntax")]
  public static extern string get_UID_LittleEndianExplicitTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BigEndianExplicitTransferSyntax")]
  public static extern string get_UID_BigEndianExplicitTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess1TransferSyntax")]
  public static extern string get_UID_JPEGProcess1TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess2_4TransferSyntax")]
  public static extern string get_UID_JPEGProcess2_4TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess3_5TransferSyntax")]
  public static extern string get_UID_JPEGProcess3_5TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess6_8TransferSyntax")]
  public static extern string get_UID_JPEGProcess6_8TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess7_9TransferSyntax")]
  public static extern string get_UID_JPEGProcess7_9TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess10_12TransferSyntax")]
  public static extern string get_UID_JPEGProcess10_12TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess11_13TransferSyntax")]
  public static extern string get_UID_JPEGProcess11_13TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess14TransferSyntax")]
  public static extern string get_UID_JPEGProcess14TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess15TransferSyntax")]
  public static extern string get_UID_JPEGProcess15TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess16_18TransferSyntax")]
  public static extern string get_UID_JPEGProcess16_18TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess17_19TransferSyntax")]
  public static extern string get_UID_JPEGProcess17_19TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess20_22TransferSyntax")]
  public static extern string get_UID_JPEGProcess20_22TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess21_23TransferSyntax")]
  public static extern string get_UID_JPEGProcess21_23TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess24_26TransferSyntax")]
  public static extern string get_UID_JPEGProcess24_26TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess25_27TransferSyntax")]
  public static extern string get_UID_JPEGProcess25_27TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess28TransferSyntax")]
  public static extern string get_UID_JPEGProcess28TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess29TransferSyntax")]
  public static extern string get_UID_JPEGProcess29TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGProcess14SV1TransferSyntax")]
  public static extern string get_UID_JPEGProcess14SV1TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGLSLosslessTransferSyntax")]
  public static extern string get_UID_JPEGLSLosslessTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEGLSLossyTransferSyntax")]
  public static extern string get_UID_JPEGLSLossyTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RLELosslessTransferSyntax")]
  public static extern string get_UID_RLELosslessTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DeflatedExplicitVRLittleEndianTransferSyntax")]
  public static extern string get_UID_DeflatedExplicitVRLittleEndianTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEG2000LosslessOnlyTransferSyntax")]
  public static extern string get_UID_JPEG2000LosslessOnlyTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_JPEG2000TransferSyntax")]
  public static extern string get_UID_JPEG2000TransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MPEG2MainProfileAtMainLevelTransferSyntax")]
  public static extern string get_UID_MPEG2MainProfileAtMainLevelTransferSyntax();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StoredPrintStorage")]
  public static extern string get_UID_StoredPrintStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_HardcopyGrayscaleImageStorage")]
  public static extern string get_UID_HardcopyGrayscaleImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_HardcopyColorImageStorage")]
  public static extern string get_UID_HardcopyColorImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ComputedRadiographyImageStorage")]
  public static extern string get_UID_ComputedRadiographyImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DigitalXRayImageStorageForPresentation")]
  public static extern string get_UID_DigitalXRayImageStorageForPresentation();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DigitalXRayImageStorageForProcessing")]
  public static extern string get_UID_DigitalXRayImageStorageForProcessing();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DigitalMammographyXRayImageStorageForPresentation")]
  public static extern string get_UID_DigitalMammographyXRayImageStorageForPresentation();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DigitalMammographyXRayImageStorageForProcessing")]
  public static extern string get_UID_DigitalMammographyXRayImageStorageForProcessing();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DigitalIntraOralXRayImageStorageForPresentation")]
  public static extern string get_UID_DigitalIntraOralXRayImageStorageForPresentation();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DigitalIntraOralXRayImageStorageForProcessing")]
  public static extern string get_UID_DigitalIntraOralXRayImageStorageForProcessing();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_CTImageStorage")]
  public static extern string get_UID_CTImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_EnhancedCTImageStorage")]
  public static extern string get_UID_EnhancedCTImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_UltrasoundMultiframeImageStorage")]
  public static extern string get_UID_RETIRED_UltrasoundMultiframeImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_UltrasoundMultiframeImageStorage")]
  public static extern string get_UID_UltrasoundMultiframeImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MRImageStorage")]
  public static extern string get_UID_MRImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_NuclearMedicineImageStorage")]
  public static extern string get_UID_RETIRED_NuclearMedicineImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_UltrasoundImageStorage")]
  public static extern string get_UID_RETIRED_UltrasoundImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_UltrasoundImageStorage")]
  public static extern string get_UID_UltrasoundImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SecondaryCaptureImageStorage")]
  public static extern string get_UID_SecondaryCaptureImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StandaloneOverlayStorage")]
  public static extern string get_UID_StandaloneOverlayStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StandaloneCurveStorage")]
  public static extern string get_UID_StandaloneCurveStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_TwelveLeadECGWaveformStorage")]
  public static extern string get_UID_TwelveLeadECGWaveformStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GeneralECGWaveformStorage")]
  public static extern string get_UID_GeneralECGWaveformStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_AmbulatoryECGWaveformStorage")]
  public static extern string get_UID_AmbulatoryECGWaveformStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_HemodynamicWaveformStorage")]
  public static extern string get_UID_HemodynamicWaveformStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_CardiacElectrophysiologyWaveformStorage")]
  public static extern string get_UID_CardiacElectrophysiologyWaveformStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicVoiceAudioWaveformStorage")]
  public static extern string get_UID_BasicVoiceAudioWaveformStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StandaloneModalityLUTStorage")]
  public static extern string get_UID_StandaloneModalityLUTStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StandaloneVOILUTStorage")]
  public static extern string get_UID_StandaloneVOILUTStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GrayscaleSoftcopyPresentationStateStorage")]
  public static extern string get_UID_GrayscaleSoftcopyPresentationStateStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_XRayAngiographicImageStorage")]
  public static extern string get_UID_XRayAngiographicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_XRayFluoroscopyImageStorage")]
  public static extern string get_UID_XRayFluoroscopyImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_XRayAngiographicBiPlaneImageStorage")]
  public static extern string get_UID_RETIRED_XRayAngiographicBiPlaneImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_NuclearMedicineImageStorage")]
  public static extern string get_UID_NuclearMedicineImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_VLImageStorage")]
  public static extern string get_UID_RETIRED_VLImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VLEndoscopicImageStorage")]
  public static extern string get_UID_VLEndoscopicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VLMicroscopicImageStorage")]
  public static extern string get_UID_VLMicroscopicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VLSlideCoordinatesMicroscopicImageStorage")]
  public static extern string get_UID_VLSlideCoordinatesMicroscopicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VLPhotographicImageStorage")]
  public static extern string get_UID_VLPhotographicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_VLMultiFrameImageStorage")]
  public static extern string get_UID_RETIRED_VLMultiFrameImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicTextSR")]
  public static extern string get_UID_BasicTextSR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_EnhancedSR")]
  public static extern string get_UID_EnhancedSR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ComprehensiveSR")]
  public static extern string get_UID_ComprehensiveSR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PETImageStorage")]
  public static extern string get_UID_PETImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PETCurveStorage")]
  public static extern string get_UID_PETCurveStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RTImageStorage")]
  public static extern string get_UID_RTImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RTDoseStorage")]
  public static extern string get_UID_RTDoseStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RTStructureSetStorage")]
  public static extern string get_UID_RTStructureSetStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RTBeamsTreatmentRecordStorage")]
  public static extern string get_UID_RTBeamsTreatmentRecordStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RTPlanStorage")]
  public static extern string get_UID_RTPlanStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RTBrachyTreatmentRecordStorage")]
  public static extern string get_UID_RTBrachyTreatmentRecordStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RTTreatmentSummaryRecordStorage")]
  public static extern string get_UID_RTTreatmentSummaryRecordStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_EnhancedMRImageStorage")]
  public static extern string get_UID_EnhancedMRImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MRSpectroscopyStorage")]
  public static extern string get_UID_MRSpectroscopyStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RawDataStorage")]
  public static extern string get_UID_RawDataStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MammographyCADSR")]
  public static extern string get_UID_MammographyCADSR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MultiframeSingleBitSecondaryCaptureImageStorage")]
  public static extern string get_UID_MultiframeSingleBitSecondaryCaptureImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MultiframeGrayscaleByteSecondaryCaptureImageStorage")]
  public static extern string get_UID_MultiframeGrayscaleByteSecondaryCaptureImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MultiframeGrayscaleWordSecondaryCaptureImageStorage")]
  public static extern string get_UID_MultiframeGrayscaleWordSecondaryCaptureImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MultiframeTrueColorSecondaryCaptureImageStorage")]
  public static extern string get_UID_MultiframeTrueColorSecondaryCaptureImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_KeyObjectSelectionDocument")]
  public static extern string get_UID_KeyObjectSelectionDocument();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ChestCADSR")]
  public static extern string get_UID_ChestCADSR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ProcedureLogStorage")]
  public static extern string get_UID_ProcedureLogStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SpatialRegistrationStorage")]
  public static extern string get_UID_SpatialRegistrationStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SpatialFiducialsStorage")]
  public static extern string get_UID_SpatialFiducialsStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_FINDPatientRootQueryRetrieveInformationModel")]
  public static extern string get_UID_FINDPatientRootQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MOVEPatientRootQueryRetrieveInformationModel")]
  public static extern string get_UID_MOVEPatientRootQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GETPatientRootQueryRetrieveInformationModel")]
  public static extern string get_UID_GETPatientRootQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_FINDStudyRootQueryRetrieveInformationModel")]
  public static extern string get_UID_FINDStudyRootQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MOVEStudyRootQueryRetrieveInformationModel")]
  public static extern string get_UID_MOVEStudyRootQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GETStudyRootQueryRetrieveInformationModel")]
  public static extern string get_UID_GETStudyRootQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_FINDPatientStudyOnlyQueryRetrieveInformationModel")]
  public static extern string get_UID_FINDPatientStudyOnlyQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MOVEPatientStudyOnlyQueryRetrieveInformationModel")]
  public static extern string get_UID_MOVEPatientStudyOnlyQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GETPatientStudyOnlyQueryRetrieveInformationModel")]
  public static extern string get_UID_GETPatientStudyOnlyQueryRetrieveInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_FINDModalityWorklistInformationModel")]
  public static extern string get_UID_FINDModalityWorklistInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_FINDGeneralPurposeWorklistInformationModel")]
  public static extern string get_UID_FINDGeneralPurposeWorklistInformationModel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicFilmSessionSOPClass")]
  public static extern string get_UID_BasicFilmSessionSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicFilmBoxSOPClass")]
  public static extern string get_UID_BasicFilmBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicGrayscaleImageBoxSOPClass")]
  public static extern string get_UID_BasicGrayscaleImageBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicColorImageBoxSOPClass")]
  public static extern string get_UID_BasicColorImageBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_ReferencedImageBoxSOPClass")]
  public static extern string get_UID_RETIRED_ReferencedImageBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicGrayscalePrintManagementMetaSOPClass")]
  public static extern string get_UID_BasicGrayscalePrintManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_ReferencedGrayscalePrintManagementMetaSOPClass")]
  public static extern string get_UID_RETIRED_ReferencedGrayscalePrintManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrintJobSOPClass")]
  public static extern string get_UID_PrintJobSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicAnnotationBoxSOPClass")]
  public static extern string get_UID_BasicAnnotationBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrinterSOPClass")]
  public static extern string get_UID_PrinterSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrinterConfigurationRetrievalSOPClass")]
  public static extern string get_UID_PrinterConfigurationRetrievalSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrinterSOPInstance")]
  public static extern string get_UID_PrinterSOPInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrinterConfigurationRetrievalSOPInstance")]
  public static extern string get_UID_PrinterConfigurationRetrievalSOPInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicColorPrintManagementMetaSOPClass")]
  public static extern string get_UID_BasicColorPrintManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_ReferencedColorPrintManagementMetaSOPClass")]
  public static extern string get_UID_RETIRED_ReferencedColorPrintManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VOILUTBoxSOPClass")]
  public static extern string get_UID_VOILUTBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PresentationLUTSOPClass")]
  public static extern string get_UID_PresentationLUTSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ImageOverlayBoxSOPClass")]
  public static extern string get_UID_ImageOverlayBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicPrintImageOverlayBoxSOPClass")]
  public static extern string get_UID_BasicPrintImageOverlayBoxSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrintQueueSOPInstance")]
  public static extern string get_UID_PrintQueueSOPInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrintQueueManagementSOPClass")]
  public static extern string get_UID_PrintQueueManagementSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PullPrintRequestSOPClass")]
  public static extern string get_UID_PullPrintRequestSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PullStoredPrintManagementMetaSOPClass")]
  public static extern string get_UID_PullStoredPrintManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StorageCommitmentPushModelSOPClass")]
  public static extern string get_UID_StorageCommitmentPushModelSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StorageCommitmentPushModelSOPInstance")]
  public static extern string get_UID_StorageCommitmentPushModelSOPInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_StorageCommitmentPullModelSOPClass")]
  public static extern string get_UID_RETIRED_StorageCommitmentPullModelSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_RETIRED_StorageCommitmentPullModelSOPInstance")]
  public static extern string get_UID_RETIRED_StorageCommitmentPullModelSOPInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ModalityPerformedProcedureStepSOPClass")]
  public static extern string get_UID_ModalityPerformedProcedureStepSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ModalityPerformedProcedureStepRetrieveSOPClass")]
  public static extern string get_UID_ModalityPerformedProcedureStepRetrieveSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ModalityPerformedProcedureStepNotificationSOPClass")]
  public static extern string get_UID_ModalityPerformedProcedureStepNotificationSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedPatientManagementSOPClass")]
  public static extern string get_UID_DetachedPatientManagementSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedPatientManagementMetaSOPClass")]
  public static extern string get_UID_DetachedPatientManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedVisitManagementSOPClass")]
  public static extern string get_UID_DetachedVisitManagementSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedStudyManagementSOPClass")]
  public static extern string get_UID_DetachedStudyManagementSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedResultsManagementSOPClass")]
  public static extern string get_UID_DetachedResultsManagementSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedResultsManagementMetaSOPClass")]
  public static extern string get_UID_DetachedResultsManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedStudyManagementMetaSOPClass")]
  public static extern string get_UID_DetachedStudyManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DetachedInterpretationManagementSOPClass")]
  public static extern string get_UID_DetachedInterpretationManagementSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GeneralPurposeScheduledProcedureStepSOPClass")]
  public static extern string get_UID_GeneralPurposeScheduledProcedureStepSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GeneralPurposePerformedProcedureStepSOPClass")]
  public static extern string get_UID_GeneralPurposePerformedProcedureStepSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_GeneralPurposeWorklistManagementMetaSOPClass")]
  public static extern string get_UID_GeneralPurposeWorklistManagementMetaSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VerificationSOPClass")]
  public static extern string get_UID_VerificationSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MediaStorageDirectoryStorage")]
  public static extern string get_UID_MediaStorageDirectoryStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_BasicStudyContentNotificationSOPClass")]
  public static extern string get_UID_BasicStudyContentNotificationSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_StudyComponentManagementSOPClass")]
  public static extern string get_UID_StudyComponentManagementSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DICOMControlledTerminologyCodingScheme")]
  public static extern string get_UID_DICOMControlledTerminologyCodingScheme();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VideoEndoscopicImageStorage")]
  public static extern string get_UID_VideoEndoscopicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_MicroscopicImageStorage")]
  public static extern string get_UID_MicroscopicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_VideoPhotographicImageStorage")]
  public static extern string get_UID_VideoPhotographicImageStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ProceduralEventLoggingSOPClass")]
  public static extern string get_UID_ProceduralEventLoggingSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ProceduralEventLoggingSOPInstance")]
  public static extern string get_UID_ProceduralEventLoggingSOPInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_TalairachBrainAtlasFrameOfReference")]
  public static extern string get_UID_TalairachBrainAtlasFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2T1FrameOfReference")]
  public static extern string get_UID_SPM2T1FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2T2FrameOfReference")]
  public static extern string get_UID_SPM2T2FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2PDFrameOfReference")]
  public static extern string get_UID_SPM2PDFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2EPIFrameOfReference")]
  public static extern string get_UID_SPM2EPIFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2FILT1FrameOfReference")]
  public static extern string get_UID_SPM2FILT1FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2PETFrameOfReference")]
  public static extern string get_UID_SPM2PETFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2TRANSMFrameOfReference")]
  public static extern string get_UID_SPM2TRANSMFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2SPECTFrameOfReference")]
  public static extern string get_UID_SPM2SPECTFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2GRAYFrameOfReference")]
  public static extern string get_UID_SPM2GRAYFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2WHITEFrameOfReference")]
  public static extern string get_UID_SPM2WHITEFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2CSFFrameOfReference")]
  public static extern string get_UID_SPM2CSFFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2BRAINMASKFrameOfReference")]
  public static extern string get_UID_SPM2BRAINMASKFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2AVG305T1FrameOfReference")]
  public static extern string get_UID_SPM2AVG305T1FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2AVG152T1FrameOfReference")]
  public static extern string get_UID_SPM2AVG152T1FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2AVG152T2FrameOfReference")]
  public static extern string get_UID_SPM2AVG152T2FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2AVG152PDFrameOfReference")]
  public static extern string get_UID_SPM2AVG152PDFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_SPM2SINGLESUBJT1FrameOfReference")]
  public static extern string get_UID_SPM2SINGLESUBJT1FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ICBM452T1FrameOfReference")]
  public static extern string get_UID_ICBM452T1FrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_ICBMSingleSubjectMRIFrameOfReference")]
  public static extern string get_UID_ICBMSingleSubjectMRIFrameOfReference();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_PrivateShutdownSOPClass")]
  public static extern string get_UID_PrivateShutdownSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DRAFT_SRTextStorage")]
  public static extern string get_UID_DRAFT_SRTextStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DRAFT_SRAudioStorage")]
  public static extern string get_UID_DRAFT_SRAudioStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DRAFT_SRDetailStorage")]
  public static extern string get_UID_DRAFT_SRDetailStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DRAFT_SRComprehensiveStorage")]
  public static extern string get_UID_DRAFT_SRComprehensiveStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_UID_DRAFT_WaveformStorage")]
  public static extern string get_UID_DRAFT_WaveformStorage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_getVMFromString")]
  public static extern uint getVMFromString(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_getFirstValueFromString")]
  public static extern string getFirstValueFromString(ref IntPtr jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_DcmDebugLevel")]
  public static extern void set_DcmDebugLevel(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DcmDebugLevel")]
  public static extern IntPtr get_DcmDebugLevel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMTAGKEY_H")]
  public static extern int get_DCMTAGKEY_H();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTagKey__SWIG_0")]
  public static extern IntPtr new_DcmTagKey__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTagKey__SWIG_1")]
  public static extern IntPtr new_DcmTagKey__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTagKey__SWIG_2")]
  public static extern IntPtr new_DcmTagKey__SWIG_2(ushort jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_set__SWIG_0")]
  public static extern void DcmTagKey_set__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_set__SWIG_1")]
  public static extern void DcmTagKey_set__SWIG_1(HandleRef jarg1, ushort jarg2, ushort jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_setGroup")]
  public static extern void DcmTagKey_setGroup(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_setElement")]
  public static extern void DcmTagKey_setElement(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_getGroup")]
  public static extern ushort DcmTagKey_getGroup(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_getElement")]
  public static extern ushort DcmTagKey_getElement(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_hash")]
  public static extern uint DcmTagKey_hash(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_toString")]
  public static extern string DcmTagKey_toString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagKey_isSignableTag")]
  public static extern bool DcmTagKey_isSignableTag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmTagKey")]
  public static extern void delete_DcmTagKey(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DcmTag_ERROR_TagName")]
  public static extern string get_DcmTag_ERROR_TagName();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTag__SWIG_0")]
  public static extern IntPtr new_DcmTag__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTag__SWIG_1")]
  public static extern IntPtr new_DcmTag__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTag__SWIG_2")]
  public static extern IntPtr new_DcmTag__SWIG_2(ushort jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTag__SWIG_3")]
  public static extern IntPtr new_DcmTag__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTag__SWIG_4")]
  public static extern IntPtr new_DcmTag__SWIG_4(ushort jarg1, ushort jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTag__SWIG_5")]
  public static extern IntPtr new_DcmTag__SWIG_5(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmTag")]
  public static extern void delete_DcmTag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_setVR")]
  public static extern IntPtr DcmTag_setVR(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getVR")]
  public static extern IntPtr DcmTag_getVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getEVR")]
  public static extern int DcmTag_getEVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getVRName")]
  public static extern string DcmTag_getVRName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getGTag")]
  public static extern ushort DcmTag_getGTag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getETag")]
  public static extern ushort DcmTag_getETag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getXTag")]
  public static extern IntPtr DcmTag_getXTag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getTagName")]
  public static extern string DcmTag_getTagName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_getPrivateCreator")]
  public static extern string DcmTag_getPrivateCreator(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_setPrivateCreator")]
  public static extern void DcmTag_setPrivateCreator(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_lookupVRinDictionary")]
  public static extern void DcmTag_lookupVRinDictionary(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_isSignable")]
  public static extern bool DcmTag_isSignable(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_isUnknownVR")]
  public static extern bool DcmTag_isUnknownVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_error")]
  public static extern IntPtr DcmTag_error(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTag_findTagFromName")]
  public static extern IntPtr DcmTag_findTagFromName(string jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DcmVariableVM")]
  public static extern int get_DcmVariableVM();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntry__SWIG_0")]
  public static extern IntPtr new_DcmDictEntry__SWIG_0(ushort jarg1, ushort jarg2, HandleRef jarg3, string jarg4, int jarg5, int jarg6, string jarg7, bool jarg8, string jarg9);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntry__SWIG_1")]
  public static extern IntPtr new_DcmDictEntry__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4, HandleRef jarg5, string jarg6, int jarg7, int jarg8, string jarg9, bool jarg10, string jarg11);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntry__SWIG_2")]
  public static extern IntPtr new_DcmDictEntry__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDictEntry")]
  public static extern void delete_DcmDictEntry(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getVR")]
  public static extern IntPtr DcmDictEntry_getVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getEVR")]
  public static extern int DcmDictEntry_getEVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getStandardVersion")]
  public static extern string DcmDictEntry_getStandardVersion(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getTagName")]
  public static extern string DcmDictEntry_getTagName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getPrivateCreator")]
  public static extern string DcmDictEntry_getPrivateCreator(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_privateCreatorMatch__SWIG_0")]
  public static extern int DcmDictEntry_privateCreatorMatch__SWIG_0(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_privateCreatorMatch__SWIG_1")]
  public static extern int DcmDictEntry_privateCreatorMatch__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getVMMin")]
  public static extern int DcmDictEntry_getVMMin(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getVMMax")]
  public static extern int DcmDictEntry_getVMMax(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_isFixedSingleVM")]
  public static extern bool DcmDictEntry_isFixedSingleVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_isFixedRangeVM")]
  public static extern bool DcmDictEntry_isFixedRangeVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_isVariableRangeVM")]
  public static extern bool DcmDictEntry_isVariableRangeVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_setUpper")]
  public static extern void DcmDictEntry_setUpper(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_setUpperGroup")]
  public static extern void DcmDictEntry_setUpperGroup(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_setUpperElement")]
  public static extern void DcmDictEntry_setUpperElement(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getUpperGroup")]
  public static extern ushort DcmDictEntry_getUpperGroup(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getUpperElement")]
  public static extern ushort DcmDictEntry_getUpperElement(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getKey")]
  public static extern IntPtr DcmDictEntry_getKey(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getUpperKey")]
  public static extern IntPtr DcmDictEntry_getUpperKey(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_isRepeatingGroup")]
  public static extern int DcmDictEntry_isRepeatingGroup(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_isRepeatingElement")]
  public static extern int DcmDictEntry_isRepeatingElement(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_isRepeating")]
  public static extern int DcmDictEntry_isRepeating(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getGroupRangeRestriction")]
  public static extern int DcmDictEntry_getGroupRangeRestriction(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_setGroupRangeRestriction")]
  public static extern void DcmDictEntry_setGroupRangeRestriction(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_getElementRangeRestriction")]
  public static extern int DcmDictEntry_getElementRangeRestriction(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_setElementRangeRestriction")]
  public static extern void DcmDictEntry_setElementRangeRestriction(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_contains__SWIG_0")]
  public static extern int DcmDictEntry_contains__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_contains__SWIG_1")]
  public static extern int DcmDictEntry_contains__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_subset")]
  public static extern int DcmDictEntry_subset(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntry_setEQ")]
  public static extern int DcmDictEntry_setEQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCMHASHDICT_DEFAULT_HASHSIZE")]
  public static extern int get_DCMHASHDICT_DEFAULT_HASHSIZE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntryListIterator__SWIG_0")]
  public static extern IntPtr new_DcmDictEntryListIterator__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntryListIterator__SWIG_1")]
  public static extern IntPtr new_DcmDictEntryListIterator__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDictEntryListIterator")]
  public static extern void delete_DcmDictEntryListIterator(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntryListConstIterator__SWIG_0")]
  public static extern IntPtr new_DcmDictEntryListConstIterator__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntryListConstIterator__SWIG_1")]
  public static extern IntPtr new_DcmDictEntryListConstIterator__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDictEntryListConstIterator")]
  public static extern void delete_DcmDictEntryListConstIterator(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDictEntryList")]
  public static extern IntPtr new_DcmDictEntryList();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDictEntryList")]
  public static extern void delete_DcmDictEntryList(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntryList_clear")]
  public static extern void DcmDictEntryList_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntryList_insertAndReplace")]
  public static extern IntPtr DcmDictEntryList_insertAndReplace(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntryList_find")]
  public static extern IntPtr DcmDictEntryList_find(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmHashDictIterator__SWIG_0")]
  public static extern IntPtr new_DcmHashDictIterator__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmHashDictIterator__SWIG_1")]
  public static extern IntPtr new_DcmHashDictIterator__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmHashDictIterator__SWIG_2")]
  public static extern IntPtr new_DcmHashDictIterator__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmHashDictIterator__SWIG_3")]
  public static extern IntPtr new_DcmHashDictIterator__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDictIterator___ref__")]
  public static extern IntPtr DcmHashDictIterator___ref__(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmHashDictIterator")]
  public static extern void delete_DcmHashDictIterator(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmHashDict__SWIG_0")]
  public static extern IntPtr new_DcmHashDict__SWIG_0(int jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmHashDict__SWIG_1")]
  public static extern IntPtr new_DcmHashDict__SWIG_1();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmHashDict")]
  public static extern void delete_DcmHashDict(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_size")]
  public static extern int DcmHashDict_size(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_clear")]
  public static extern void DcmHashDict_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_put")]
  public static extern void DcmHashDict_put(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_get")]
  public static extern IntPtr DcmHashDict_get(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_del")]
  public static extern void DcmHashDict_del(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_begin")]
  public static extern IntPtr DcmHashDict_begin(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_end")]
  public static extern IntPtr DcmHashDict_end(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmHashDict_loadSummary")]
  public static extern IntPtr DcmHashDict_loadSummary(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_MAXDICTLINESIZE")]
  public static extern int get_DCM_MAXDICTLINESIZE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_MAXDICTFIELDS")]
  public static extern int get_DCM_MAXDICTFIELDS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_DICT_ENVIRONMENT_VARIABLE")]
  public static extern string get_DCM_DICT_ENVIRONMENT_VARIABLE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ENVIRONMENT_PATH_SEPARATOR")]
  public static extern char get_ENVIRONMENT_PATH_SEPARATOR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDataDictionary")]
  public static extern IntPtr new_DcmDataDictionary(bool jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDataDictionary")]
  public static extern void delete_DcmDataDictionary(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_isDictionaryLoaded")]
  public static extern bool DcmDataDictionary_isDictionaryLoaded(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_numberOfNormalTagEntries")]
  public static extern int DcmDataDictionary_numberOfNormalTagEntries(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_numberOfRepeatingTagEntries")]
  public static extern int DcmDataDictionary_numberOfRepeatingTagEntries(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_numberOfEntries")]
  public static extern int DcmDataDictionary_numberOfEntries(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_numberOfSkeletonEntries")]
  public static extern int DcmDataDictionary_numberOfSkeletonEntries(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_loadDictionary__SWIG_0")]
  public static extern bool DcmDataDictionary_loadDictionary__SWIG_0(HandleRef jarg1, string jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_loadDictionary__SWIG_1")]
  public static extern bool DcmDataDictionary_loadDictionary__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_findEntry__SWIG_0")]
  public static extern IntPtr DcmDataDictionary_findEntry__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_findEntry__SWIG_1")]
  public static extern IntPtr DcmDataDictionary_findEntry__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_clear")]
  public static extern void DcmDataDictionary_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_addEntry")]
  public static extern void DcmDataDictionary_addEntry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_normalBegin")]
  public static extern IntPtr DcmDataDictionary_normalBegin(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_normalEnd")]
  public static extern IntPtr DcmDataDictionary_normalEnd(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_repeatingBegin")]
  public static extern IntPtr DcmDataDictionary_repeatingBegin(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataDictionary_repeatingEnd")]
  public static extern IntPtr DcmDataDictionary_repeatingEnd(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_GlobalDcmDataDictionary")]
  public static extern IntPtr new_GlobalDcmDataDictionary(bool jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_GlobalDcmDataDictionary")]
  public static extern void delete_GlobalDcmDataDictionary(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_GlobalDcmDataDictionary_rdlock")]
  public static extern IntPtr GlobalDcmDataDictionary_rdlock(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_GlobalDcmDataDictionary_wrlock")]
  public static extern IntPtr GlobalDcmDataDictionary_wrlock(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_GlobalDcmDataDictionary_unlock")]
  public static extern void GlobalDcmDataDictionary_unlock(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_GlobalDcmDataDictionary_isDictionaryLoaded")]
  public static extern bool GlobalDcmDataDictionary_isDictionaryLoaded(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_GlobalDcmDataDictionary_clear")]
  public static extern void GlobalDcmDataDictionary_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmDataDict")]
  public static extern IntPtr get_dcmDataDict();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_DICT_DEFTAG_BUILD_DATE")]
  public static extern string get_DCM_DICT_DEFTAG_BUILD_DATE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_MaxReadLength")]
  public static extern uint get_DCM_MaxReadLength();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_TagInfoLength")]
  public static extern uint get_DCM_TagInfoLength();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_OptPrintLineLength")]
  public static extern uint get_DCM_OptPrintLineLength();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_OptPrintValueLength")]
  public static extern uint get_DCM_OptPrintValueLength();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_dcmEnableAutomaticInputDataCorrection")]
  public static extern void set_dcmEnableAutomaticInputDataCorrection(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmEnableAutomaticInputDataCorrection")]
  public static extern IntPtr get_dcmEnableAutomaticInputDataCorrection();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_dcmAcceptOddAttributeLength")]
  public static extern void set_dcmAcceptOddAttributeLength(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmAcceptOddAttributeLength")]
  public static extern IntPtr get_dcmAcceptOddAttributeLength();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmObject")]
  public static extern void delete_DcmObject(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_ident")]
  public static extern int DcmObject_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getVR")]
  public static extern int DcmObject_getVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_isaString")]
  public static extern bool DcmObject_isaString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_isLeaf")]
  public static extern bool DcmObject_isLeaf(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_print__SWIG_0")]
  public static extern void DcmObject_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_print__SWIG_1")]
  public static extern void DcmObject_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_print__SWIG_2")]
  public static extern void DcmObject_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_print__SWIG_3")]
  public static extern void DcmObject_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_print__SWIG_4")]
  public static extern void DcmObject_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_error")]
  public static extern IntPtr DcmObject_error(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_transferState")]
  public static extern int DcmObject_transferState(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_transferInit")]
  public static extern void DcmObject_transferInit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_transferEnd")]
  public static extern void DcmObject_transferEnd(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getGTag")]
  public static extern ushort DcmObject_getGTag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getETag")]
  public static extern ushort DcmObject_getETag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getTag")]
  public static extern IntPtr DcmObject_getTag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_setGTag")]
  public static extern void DcmObject_setGTag(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_setVR")]
  public static extern IntPtr DcmObject_setVR(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getVM")]
  public static extern uint DcmObject_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_calcElementLength")]
  public static extern uint DcmObject_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getLength__SWIG_0")]
  public static extern uint DcmObject_getLength__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getLength__SWIG_1")]
  public static extern uint DcmObject_getLength__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_getLength__SWIG_2")]
  public static extern uint DcmObject_getLength__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_canWriteXfer")]
  public static extern bool DcmObject_canWriteXfer(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_read__SWIG_0")]
  public static extern IntPtr DcmObject_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_read__SWIG_1")]
  public static extern IntPtr DcmObject_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_read__SWIG_2")]
  public static extern IntPtr DcmObject_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_write__SWIG_0")]
  public static extern IntPtr DcmObject_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_write__SWIG_1")]
  public static extern IntPtr DcmObject_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_writeXML__SWIG_0")]
  public static extern IntPtr DcmObject_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_writeXML__SWIG_1")]
  public static extern IntPtr DcmObject_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmObject_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmObject_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_isSignable")]
  public static extern bool DcmObject_isSignable(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_containsUnknownVR")]
  public static extern bool DcmObject_containsUnknownVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_clear")]
  public static extern IntPtr DcmObject_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_verify__SWIG_0")]
  public static extern IntPtr DcmObject_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_verify__SWIG_1")]
  public static extern IntPtr DcmObject_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_nextInContainer")]
  public static extern IntPtr DcmObject_nextInContainer(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_nextObject")]
  public static extern IntPtr DcmObject_nextObject(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_search__SWIG_0")]
  public static extern IntPtr DcmObject_search__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_search__SWIG_1")]
  public static extern IntPtr DcmObject_search__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_search__SWIG_2")]
  public static extern IntPtr DcmObject_search__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_searchErrors")]
  public static extern IntPtr DcmObject_searchErrors(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmObject_loadAllDataIntoMemory")]
  public static extern IntPtr DcmObject_loadAllDataIntoMemory(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmElement")]
  public static extern void delete_DcmElement(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_calcElementLength")]
  public static extern uint DcmElement_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getLength__SWIG_0")]
  public static extern uint DcmElement_getLength__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getLength__SWIG_1")]
  public static extern uint DcmElement_getLength__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getLength__SWIG_2")]
  public static extern uint DcmElement_getLength__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_isLeaf")]
  public static extern bool DcmElement_isLeaf(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_valueLoaded")]
  public static extern bool DcmElement_valueLoaded(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_transferInit")]
  public static extern void DcmElement_transferInit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_canWriteXfer")]
  public static extern bool DcmElement_canWriteXfer(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_read__SWIG_0")]
  public static extern IntPtr DcmElement_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_read__SWIG_1")]
  public static extern IntPtr DcmElement_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_read__SWIG_2")]
  public static extern IntPtr DcmElement_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_write__SWIG_0")]
  public static extern IntPtr DcmElement_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_write__SWIG_1")]
  public static extern IntPtr DcmElement_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_writeXML__SWIG_0")]
  public static extern IntPtr DcmElement_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_writeXML__SWIG_1")]
  public static extern IntPtr DcmElement_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmElement_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmElement_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_clear")]
  public static extern IntPtr DcmElement_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_loadAllDataIntoMemory")]
  public static extern IntPtr DcmElement_loadAllDataIntoMemory(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint8__SWIG_0")]
  public static extern IntPtr DcmElement_getUint8__SWIG_0(HandleRef jarg1, out byte jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint8__SWIG_1")]
  public static extern IntPtr DcmElement_getUint8__SWIG_1(HandleRef jarg1, out byte jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getSint16__SWIG_0")]
  public static extern IntPtr DcmElement_getSint16__SWIG_0(HandleRef jarg1, out short jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getSint16__SWIG_1")]
  public static extern IntPtr DcmElement_getSint16__SWIG_1(HandleRef jarg1, out short jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint16__SWIG_0")]
  public static extern IntPtr DcmElement_getUint16__SWIG_0(HandleRef jarg1, out ushort jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint16__SWIG_1")]
  public static extern IntPtr DcmElement_getUint16__SWIG_1(HandleRef jarg1, out ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getSint32__SWIG_0")]
  public static extern IntPtr DcmElement_getSint32__SWIG_0(HandleRef jarg1, out int jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getSint32__SWIG_1")]
  public static extern IntPtr DcmElement_getSint32__SWIG_1(HandleRef jarg1, out int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint32__SWIG_0")]
  public static extern IntPtr DcmElement_getUint32__SWIG_0(HandleRef jarg1, out uint jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint32__SWIG_1")]
  public static extern IntPtr DcmElement_getUint32__SWIG_1(HandleRef jarg1, out uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getFloat32__SWIG_0")]
  public static extern IntPtr DcmElement_getFloat32__SWIG_0(HandleRef jarg1, out float jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getFloat32__SWIG_1")]
  public static extern IntPtr DcmElement_getFloat32__SWIG_1(HandleRef jarg1, out float jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getFloat64__SWIG_0")]
  public static extern IntPtr DcmElement_getFloat64__SWIG_0(HandleRef jarg1, out double jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getFloat64__SWIG_1")]
  public static extern IntPtr DcmElement_getFloat64__SWIG_1(HandleRef jarg1, out double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getTagVal__SWIG_0")]
  public static extern IntPtr DcmElement_getTagVal__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getTagVal__SWIG_1")]
  public static extern IntPtr DcmElement_getTagVal__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getOFString__SWIG_0")]
  public static extern IntPtr DcmElement_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getOFString__SWIG_1")]
  public static extern IntPtr DcmElement_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getOFStringArray__SWIG_0")]
  public static extern IntPtr DcmElement_getOFStringArray__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getOFStringArray__SWIG_1")]
  public static extern IntPtr DcmElement_getOFStringArray__SWIG_1(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getString")]
  public static extern IntPtr DcmElement_getString(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint8Array")]
  public static extern IntPtr DcmElement_getUint8Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getSint16Array")]
  public static extern IntPtr DcmElement_getSint16Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint16Array")]
  public static extern IntPtr DcmElement_getUint16Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getSint32Array")]
  public static extern IntPtr DcmElement_getSint32Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getUint32Array")]
  public static extern IntPtr DcmElement_getUint32Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getFloat32Array")]
  public static extern IntPtr DcmElement_getFloat32Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_getFloat64Array")]
  public static extern IntPtr DcmElement_getFloat64Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_detachValueField__SWIG_0")]
  public static extern IntPtr DcmElement_detachValueField__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_detachValueField__SWIG_1")]
  public static extern IntPtr DcmElement_detachValueField__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putOFStringArray")]
  public static extern IntPtr DcmElement_putOFStringArray(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putString")]
  public static extern IntPtr DcmElement_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putSint16__SWIG_0")]
  public static extern IntPtr DcmElement_putSint16__SWIG_0(HandleRef jarg1, short jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putSint16__SWIG_1")]
  public static extern IntPtr DcmElement_putSint16__SWIG_1(HandleRef jarg1, short jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putUint16__SWIG_0")]
  public static extern IntPtr DcmElement_putUint16__SWIG_0(HandleRef jarg1, ushort jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putUint16__SWIG_1")]
  public static extern IntPtr DcmElement_putUint16__SWIG_1(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putSint32__SWIG_0")]
  public static extern IntPtr DcmElement_putSint32__SWIG_0(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putSint32__SWIG_1")]
  public static extern IntPtr DcmElement_putSint32__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putUint32__SWIG_0")]
  public static extern IntPtr DcmElement_putUint32__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putUint32__SWIG_1")]
  public static extern IntPtr DcmElement_putUint32__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putFloat32__SWIG_0")]
  public static extern IntPtr DcmElement_putFloat32__SWIG_0(HandleRef jarg1, float jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putFloat32__SWIG_1")]
  public static extern IntPtr DcmElement_putFloat32__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putFloat64__SWIG_0")]
  public static extern IntPtr DcmElement_putFloat64__SWIG_0(HandleRef jarg1, double jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putFloat64__SWIG_1")]
  public static extern IntPtr DcmElement_putFloat64__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putTagVal__SWIG_0")]
  public static extern IntPtr DcmElement_putTagVal__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putTagVal__SWIG_1")]
  public static extern IntPtr DcmElement_putTagVal__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putUint8Array")]
  public static extern IntPtr DcmElement_putUint8Array(HandleRef jarg1, byte[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putSint16Array")]
  public static extern IntPtr DcmElement_putSint16Array(HandleRef jarg1, short[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putUint16Array")]
  public static extern IntPtr DcmElement_putUint16Array(HandleRef jarg1, ushort[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putSint32Array")]
  public static extern IntPtr DcmElement_putSint32Array(HandleRef jarg1, int[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putUint32Array")]
  public static extern IntPtr DcmElement_putUint32Array(HandleRef jarg1, uint[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putFloat32Array")]
  public static extern IntPtr DcmElement_putFloat32Array(HandleRef jarg1, float[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElement_putFloat64Array")]
  public static extern IntPtr DcmElement_putFloat64Array(HandleRef jarg1, double[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmItem__SWIG_0")]
  public static extern IntPtr new_DcmItem__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmItem__SWIG_1")]
  public static extern IntPtr new_DcmItem__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmItem__SWIG_2")]
  public static extern IntPtr new_DcmItem__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmItem__SWIG_3")]
  public static extern IntPtr new_DcmItem__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmItem")]
  public static extern void delete_DcmItem(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_ident")]
  public static extern int DcmItem_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_getVM")]
  public static extern uint DcmItem_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_card")]
  public static extern uint DcmItem_card(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_isLeaf")]
  public static extern bool DcmItem_isLeaf(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_print__SWIG_0")]
  public static extern void DcmItem_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_print__SWIG_1")]
  public static extern void DcmItem_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_print__SWIG_2")]
  public static extern void DcmItem_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_print__SWIG_3")]
  public static extern void DcmItem_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_print__SWIG_4")]
  public static extern void DcmItem_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_calcElementLength")]
  public static extern uint DcmItem_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_getLength__SWIG_0")]
  public static extern uint DcmItem_getLength__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_getLength__SWIG_1")]
  public static extern uint DcmItem_getLength__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_getLength__SWIG_2")]
  public static extern uint DcmItem_getLength__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_transferInit")]
  public static extern void DcmItem_transferInit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_transferEnd")]
  public static extern void DcmItem_transferEnd(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_canWriteXfer")]
  public static extern bool DcmItem_canWriteXfer(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_read__SWIG_0")]
  public static extern IntPtr DcmItem_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_read__SWIG_1")]
  public static extern IntPtr DcmItem_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_read__SWIG_2")]
  public static extern IntPtr DcmItem_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_write__SWIG_0")]
  public static extern IntPtr DcmItem_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_write__SWIG_1")]
  public static extern IntPtr DcmItem_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_writeXML__SWIG_0")]
  public static extern IntPtr DcmItem_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_writeXML__SWIG_1")]
  public static extern IntPtr DcmItem_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmItem_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmItem_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_containsUnknownVR")]
  public static extern bool DcmItem_containsUnknownVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_insert__SWIG_0")]
  public static extern IntPtr DcmItem_insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_insert__SWIG_1")]
  public static extern IntPtr DcmItem_insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_insert__SWIG_2")]
  public static extern IntPtr DcmItem_insert__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_getElement")]
  public static extern IntPtr DcmItem_getElement(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_nextObject")]
  public static extern IntPtr DcmItem_nextObject(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_nextInContainer")]
  public static extern IntPtr DcmItem_nextInContainer(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_remove__SWIG_0")]
  public static extern IntPtr DcmItem_remove__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_remove__SWIG_1")]
  public static extern IntPtr DcmItem_remove__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_remove__SWIG_2")]
  public static extern IntPtr DcmItem_remove__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_clear")]
  public static extern IntPtr DcmItem_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_verify__SWIG_0")]
  public static extern IntPtr DcmItem_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_verify__SWIG_1")]
  public static extern IntPtr DcmItem_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_search__SWIG_0")]
  public static extern IntPtr DcmItem_search__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_search__SWIG_1")]
  public static extern IntPtr DcmItem_search__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_search__SWIG_2")]
  public static extern IntPtr DcmItem_search__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_searchErrors")]
  public static extern IntPtr DcmItem_searchErrors(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_loadAllDataIntoMemory")]
  public static extern IntPtr DcmItem_loadAllDataIntoMemory(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_computeGroupLengthAndPadding__SWIG_0")]
  public static extern IntPtr DcmItem_computeGroupLengthAndPadding__SWIG_0(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, uint jarg6, uint jarg7, uint jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_computeGroupLengthAndPadding__SWIG_1")]
  public static extern IntPtr DcmItem_computeGroupLengthAndPadding__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, uint jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_computeGroupLengthAndPadding__SWIG_2")]
  public static extern IntPtr DcmItem_computeGroupLengthAndPadding__SWIG_2(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, uint jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_computeGroupLengthAndPadding__SWIG_3")]
  public static extern IntPtr DcmItem_computeGroupLengthAndPadding__SWIG_3(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_computeGroupLengthAndPadding__SWIG_4")]
  public static extern IntPtr DcmItem_computeGroupLengthAndPadding__SWIG_4(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_computeGroupLengthAndPadding__SWIG_5")]
  public static extern IntPtr DcmItem_computeGroupLengthAndPadding__SWIG_5(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_computeGroupLengthAndPadding__SWIG_6")]
  public static extern IntPtr DcmItem_computeGroupLengthAndPadding__SWIG_6(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_tagExists__SWIG_0")]
  public static extern bool DcmItem_tagExists__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_tagExists__SWIG_1")]
  public static extern bool DcmItem_tagExists__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_tagExistsWithValue__SWIG_0")]
  public static extern bool DcmItem_tagExistsWithValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_tagExistsWithValue__SWIG_1")]
  public static extern bool DcmItem_tagExistsWithValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetElement__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetElement__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetElement__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetElement__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetElements")]
  public static extern IntPtr DcmItem_findAndGetElements(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetString__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetString__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetString__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetString__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetOFString__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetOFString__SWIG_0(HandleRef jarg1, HandleRef jarg2, StringBuilder jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetOFString__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetOFString__SWIG_1(HandleRef jarg1, HandleRef jarg2, StringBuilder jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetOFString__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetOFString__SWIG_2(HandleRef jarg1, HandleRef jarg2, StringBuilder jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetOFStringArray__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetOFStringArray__SWIG_0(HandleRef jarg1, HandleRef jarg2, StringBuilder jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetOFStringArray__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetOFStringArray__SWIG_1(HandleRef jarg1, HandleRef jarg2, StringBuilder jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint8__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetUint8__SWIG_0(HandleRef jarg1, HandleRef jarg2, out byte jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint8__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetUint8__SWIG_1(HandleRef jarg1, HandleRef jarg2, out byte jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint8__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetUint8__SWIG_2(HandleRef jarg1, HandleRef jarg2, out byte jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint8Array__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetUint8Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint8Array__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetUint8Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint8Array__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetUint8Array__SWIG_2(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint16__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetUint16__SWIG_0(HandleRef jarg1, HandleRef jarg2, out ushort jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint16__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetUint16__SWIG_1(HandleRef jarg1, HandleRef jarg2, out ushort jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint16__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetUint16__SWIG_2(HandleRef jarg1, HandleRef jarg2, out ushort jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint16Array__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetUint16Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint16Array__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetUint16Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint16Array__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetUint16Array__SWIG_2(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint16__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetSint16__SWIG_0(HandleRef jarg1, HandleRef jarg2, out short jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint16__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetSint16__SWIG_1(HandleRef jarg1, HandleRef jarg2, out short jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint16__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetSint16__SWIG_2(HandleRef jarg1, HandleRef jarg2, out short jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint16Array__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetSint16Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint16Array__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetSint16Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint16Array__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetSint16Array__SWIG_2(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint32__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetUint32__SWIG_0(HandleRef jarg1, HandleRef jarg2, out uint jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint32__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetUint32__SWIG_1(HandleRef jarg1, HandleRef jarg2, out uint jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint32__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetUint32__SWIG_2(HandleRef jarg1, HandleRef jarg2, out uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint32Array__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetUint32Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint32Array__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetUint32Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetUint32Array__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetUint32Array__SWIG_2(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint32__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetSint32__SWIG_0(HandleRef jarg1, HandleRef jarg2, out int jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint32__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetSint32__SWIG_1(HandleRef jarg1, HandleRef jarg2, out int jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint32__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetSint32__SWIG_2(HandleRef jarg1, HandleRef jarg2, out int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint32Array__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetSint32Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint32Array__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetSint32Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSint32Array__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetSint32Array__SWIG_2(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetLongInt__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetLongInt__SWIG_0(HandleRef jarg1, HandleRef jarg2, out int jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetLongInt__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetLongInt__SWIG_1(HandleRef jarg1, HandleRef jarg2, out int jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetLongInt__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetLongInt__SWIG_2(HandleRef jarg1, HandleRef jarg2, out int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat32__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetFloat32__SWIG_0(HandleRef jarg1, HandleRef jarg2, out float jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat32__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetFloat32__SWIG_1(HandleRef jarg1, HandleRef jarg2, out float jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat32__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetFloat32__SWIG_2(HandleRef jarg1, HandleRef jarg2, out float jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat32Array__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetFloat32Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat32Array__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetFloat32Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat32Array__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetFloat32Array__SWIG_2(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat64__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetFloat64__SWIG_0(HandleRef jarg1, HandleRef jarg2, out double jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat64__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetFloat64__SWIG_1(HandleRef jarg1, HandleRef jarg2, out double jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat64__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetFloat64__SWIG_2(HandleRef jarg1, HandleRef jarg2, out double jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat64Array__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetFloat64Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat64Array__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetFloat64Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetFloat64Array__SWIG_2")]
  public static extern IntPtr DcmItem_findAndGetFloat64Array__SWIG_2(HandleRef jarg1, HandleRef jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSequence__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetSequence__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSequence__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetSequence__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSequenceItem__SWIG_0")]
  public static extern IntPtr DcmItem_findAndGetSequenceItem__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndGetSequenceItem__SWIG_1")]
  public static extern IntPtr DcmItem_findAndGetSequenceItem__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findOrCreateSequenceItem__SWIG_0")]
  public static extern IntPtr DcmItem_findOrCreateSequenceItem__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findOrCreateSequenceItem__SWIG_1")]
  public static extern IntPtr DcmItem_findOrCreateSequenceItem__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndDeleteElement__SWIG_0")]
  public static extern IntPtr DcmItem_findAndDeleteElement__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndDeleteElement__SWIG_1")]
  public static extern IntPtr DcmItem_findAndDeleteElement__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndDeleteElement__SWIG_2")]
  public static extern IntPtr DcmItem_findAndDeleteElement__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndCopyElement__SWIG_0")]
  public static extern IntPtr DcmItem_findAndCopyElement__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_findAndCopyElement__SWIG_1")]
  public static extern IntPtr DcmItem_findAndCopyElement__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertString__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertString__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertString__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertString__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertOFStringArray__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertOFStringArray__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertOFStringArray__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertOFStringArray__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint8Array__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertUint8Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, byte[] jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint8Array__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertUint8Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, byte[] jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint16__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertUint16__SWIG_0(HandleRef jarg1, HandleRef jarg2, ushort jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint16__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertUint16__SWIG_1(HandleRef jarg1, HandleRef jarg2, ushort jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint16__SWIG_2")]
  public static extern IntPtr DcmItem_putAndInsertUint16__SWIG_2(HandleRef jarg1, HandleRef jarg2, ushort jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint16Array__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertUint16Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, ushort[] jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint16Array__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertUint16Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, ushort[] jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint16__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertSint16__SWIG_0(HandleRef jarg1, HandleRef jarg2, short jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint16__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertSint16__SWIG_1(HandleRef jarg1, HandleRef jarg2, short jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint16__SWIG_2")]
  public static extern IntPtr DcmItem_putAndInsertSint16__SWIG_2(HandleRef jarg1, HandleRef jarg2, short jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint16Array__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertSint16Array__SWIG_0(HandleRef jarg1, HandleRef jarg2, short[] jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint16Array__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertSint16Array__SWIG_1(HandleRef jarg1, HandleRef jarg2, short[] jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint32__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertUint32__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint32__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertUint32__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertUint32__SWIG_2")]
  public static extern IntPtr DcmItem_putAndInsertUint32__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint32__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertSint32__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint32__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertSint32__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertSint32__SWIG_2")]
  public static extern IntPtr DcmItem_putAndInsertSint32__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertFloat32__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertFloat32__SWIG_0(HandleRef jarg1, HandleRef jarg2, float jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertFloat32__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertFloat32__SWIG_1(HandleRef jarg1, HandleRef jarg2, float jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertFloat32__SWIG_2")]
  public static extern IntPtr DcmItem_putAndInsertFloat32__SWIG_2(HandleRef jarg1, HandleRef jarg2, float jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertFloat64__SWIG_0")]
  public static extern IntPtr DcmItem_putAndInsertFloat64__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3, uint jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertFloat64__SWIG_1")]
  public static extern IntPtr DcmItem_putAndInsertFloat64__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_putAndInsertFloat64__SWIG_2")]
  public static extern IntPtr DcmItem_putAndInsertFloat64__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_insertEmptyElement__SWIG_0")]
  public static extern IntPtr DcmItem_insertEmptyElement__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItem_insertEmptyElement__SWIG_1")]
  public static extern IntPtr DcmItem_insertEmptyElement__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_newDicomElement__SWIG_0")]
  public static extern IntPtr newDicomElement__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_newDicomElement__SWIG_1")]
  public static extern IntPtr newDicomElement__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_newDicomElement__SWIG_2")]
  public static extern IntPtr newDicomElement__SWIG_2(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_newDicomElement__SWIG_3")]
  public static extern IntPtr newDicomElement__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_nextUp")]
  public static extern IntPtr nextUp(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_Magic")]
  public static extern string get_DCM_Magic();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_MagicLen")]
  public static extern int get_DCM_MagicLen();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DCM_PreambleLen")]
  public static extern int get_DCM_PreambleLen();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmMetaInfo__SWIG_0")]
  public static extern IntPtr new_DcmMetaInfo__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmMetaInfo__SWIG_1")]
  public static extern IntPtr new_DcmMetaInfo__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmMetaInfo")]
  public static extern void delete_DcmMetaInfo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_ident")]
  public static extern int DcmMetaInfo_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_getOriginalXfer")]
  public static extern int DcmMetaInfo_getOriginalXfer(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_print__SWIG_0")]
  public static extern void DcmMetaInfo_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_print__SWIG_1")]
  public static extern void DcmMetaInfo_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_print__SWIG_2")]
  public static extern void DcmMetaInfo_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_print__SWIG_3")]
  public static extern void DcmMetaInfo_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_print__SWIG_4")]
  public static extern void DcmMetaInfo_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_transferInit")]
  public static extern void DcmMetaInfo_transferInit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_transferEnd")]
  public static extern void DcmMetaInfo_transferEnd(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_calcElementLength")]
  public static extern uint DcmMetaInfo_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_read__SWIG_0")]
  public static extern IntPtr DcmMetaInfo_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_read__SWIG_1")]
  public static extern IntPtr DcmMetaInfo_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_read__SWIG_2")]
  public static extern IntPtr DcmMetaInfo_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_read__SWIG_3")]
  public static extern IntPtr DcmMetaInfo_read__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_write__SWIG_0")]
  public static extern IntPtr DcmMetaInfo_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_write__SWIG_1")]
  public static extern IntPtr DcmMetaInfo_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_writeXML__SWIG_0")]
  public static extern IntPtr DcmMetaInfo_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfo_writeXML__SWIG_1")]
  public static extern IntPtr DcmMetaInfo_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDataset__SWIG_0")]
  public static extern IntPtr new_DcmDataset__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDataset__SWIG_1")]
  public static extern IntPtr new_DcmDataset__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDataset")]
  public static extern void delete_DcmDataset(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_ident")]
  public static extern int DcmDataset_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_getOriginalXfer")]
  public static extern int DcmDataset_getOriginalXfer(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_print__SWIG_0")]
  public static extern void DcmDataset_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_print__SWIG_1")]
  public static extern void DcmDataset_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_print__SWIG_2")]
  public static extern void DcmDataset_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_print__SWIG_3")]
  public static extern void DcmDataset_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_print__SWIG_4")]
  public static extern void DcmDataset_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_calcElementLength")]
  public static extern uint DcmDataset_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_canWriteXfer__SWIG_0")]
  public static extern bool DcmDataset_canWriteXfer__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_canWriteXfer__SWIG_1")]
  public static extern bool DcmDataset_canWriteXfer__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_read__SWIG_0")]
  public static extern IntPtr DcmDataset_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_read__SWIG_1")]
  public static extern IntPtr DcmDataset_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_read__SWIG_2")]
  public static extern IntPtr DcmDataset_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_read__SWIG_3")]
  public static extern IntPtr DcmDataset_read__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_write__SWIG_0")]
  public static extern IntPtr DcmDataset_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_write__SWIG_1")]
  public static extern IntPtr DcmDataset_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_write__SWIG_2")]
  public static extern IntPtr DcmDataset_write__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7, uint jarg8, uint jarg9);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_write__SWIG_3")]
  public static extern IntPtr DcmDataset_write__SWIG_3(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7, uint jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_write__SWIG_4")]
  public static extern IntPtr DcmDataset_write__SWIG_4(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_write__SWIG_5")]
  public static extern IntPtr DcmDataset_write__SWIG_5(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_write__SWIG_6")]
  public static extern IntPtr DcmDataset_write__SWIG_6(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmDataset_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmDataset_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_writeXML__SWIG_0")]
  public static extern IntPtr DcmDataset_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_writeXML__SWIG_1")]
  public static extern IntPtr DcmDataset_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_loadFile__SWIG_0")]
  public static extern IntPtr DcmDataset_loadFile__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_loadFile__SWIG_1")]
  public static extern IntPtr DcmDataset_loadFile__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_loadFile__SWIG_2")]
  public static extern IntPtr DcmDataset_loadFile__SWIG_2(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_loadFile__SWIG_3")]
  public static extern IntPtr DcmDataset_loadFile__SWIG_3(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_saveFile__SWIG_0")]
  public static extern IntPtr DcmDataset_saveFile__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7, uint jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_saveFile__SWIG_1")]
  public static extern IntPtr DcmDataset_saveFile__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_saveFile__SWIG_2")]
  public static extern IntPtr DcmDataset_saveFile__SWIG_2(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_saveFile__SWIG_3")]
  public static extern IntPtr DcmDataset_saveFile__SWIG_3(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_saveFile__SWIG_4")]
  public static extern IntPtr DcmDataset_saveFile__SWIG_4(HandleRef jarg1, string jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_saveFile__SWIG_5")]
  public static extern IntPtr DcmDataset_saveFile__SWIG_5(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_saveFile__SWIG_6")]
  public static extern IntPtr DcmDataset_saveFile__SWIG_6(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_chooseRepresentation")]
  public static extern IntPtr DcmDataset_chooseRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_hasRepresentation")]
  public static extern bool DcmDataset_hasRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_removeAllButOriginalRepresentations")]
  public static extern void DcmDataset_removeAllButOriginalRepresentations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDataset_removeAllButCurrentRepresentations")]
  public static extern void DcmDataset_removeAllButCurrentRepresentations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSequenceOfItems__SWIG_0")]
  public static extern IntPtr new_DcmSequenceOfItems__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSequenceOfItems__SWIG_1")]
  public static extern IntPtr new_DcmSequenceOfItems__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSequenceOfItems__SWIG_2")]
  public static extern IntPtr new_DcmSequenceOfItems__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmSequenceOfItems")]
  public static extern void delete_DcmSequenceOfItems(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_ident")]
  public static extern int DcmSequenceOfItems_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_isLeaf")]
  public static extern bool DcmSequenceOfItems_isLeaf(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_print__SWIG_0")]
  public static extern void DcmSequenceOfItems_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_print__SWIG_1")]
  public static extern void DcmSequenceOfItems_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_print__SWIG_2")]
  public static extern void DcmSequenceOfItems_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_print__SWIG_3")]
  public static extern void DcmSequenceOfItems_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_print__SWIG_4")]
  public static extern void DcmSequenceOfItems_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_getVM")]
  public static extern uint DcmSequenceOfItems_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_0(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, uint jarg6, uint jarg7, uint jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, uint jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_2")]
  public static extern IntPtr DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_2(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5, uint jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_3")]
  public static extern IntPtr DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_3(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_4")]
  public static extern IntPtr DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_4(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_5")]
  public static extern IntPtr DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_5(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_6")]
  public static extern IntPtr DcmSequenceOfItems_computeGroupLengthAndPadding__SWIG_6(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_calcElementLength")]
  public static extern uint DcmSequenceOfItems_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_getLength__SWIG_0")]
  public static extern uint DcmSequenceOfItems_getLength__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_getLength__SWIG_1")]
  public static extern uint DcmSequenceOfItems_getLength__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_getLength__SWIG_2")]
  public static extern uint DcmSequenceOfItems_getLength__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_transferInit")]
  public static extern void DcmSequenceOfItems_transferInit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_transferEnd")]
  public static extern void DcmSequenceOfItems_transferEnd(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_canWriteXfer")]
  public static extern bool DcmSequenceOfItems_canWriteXfer(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_read__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_read__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_read__SWIG_2")]
  public static extern IntPtr DcmSequenceOfItems_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_write__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_write__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_writeXML__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_writeXML__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_isSignable")]
  public static extern bool DcmSequenceOfItems_isSignable(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_containsUnknownVR")]
  public static extern bool DcmSequenceOfItems_containsUnknownVR(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_card")]
  public static extern uint DcmSequenceOfItems_card(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_prepend")]
  public static extern IntPtr DcmSequenceOfItems_prepend(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_insert__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_insert__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_insert__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_insert__SWIG_2")]
  public static extern IntPtr DcmSequenceOfItems_insert__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_append")]
  public static extern IntPtr DcmSequenceOfItems_append(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_insertAtCurrentPos__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_insertAtCurrentPos__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_insertAtCurrentPos__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_insertAtCurrentPos__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_getItem")]
  public static extern IntPtr DcmSequenceOfItems_getItem(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_nextObject")]
  public static extern IntPtr DcmSequenceOfItems_nextObject(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_nextInContainer")]
  public static extern IntPtr DcmSequenceOfItems_nextInContainer(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_remove__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_remove__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_remove__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_remove__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_clear")]
  public static extern IntPtr DcmSequenceOfItems_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_verify__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_verify__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_search__SWIG_0")]
  public static extern IntPtr DcmSequenceOfItems_search__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_search__SWIG_1")]
  public static extern IntPtr DcmSequenceOfItems_search__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_search__SWIG_2")]
  public static extern IntPtr DcmSequenceOfItems_search__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_searchErrors")]
  public static extern IntPtr DcmSequenceOfItems_searchErrors(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItems_loadAllDataIntoMemory")]
  public static extern IntPtr DcmSequenceOfItems_loadAllDataIntoMemory(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFileFormat__SWIG_0")]
  public static extern IntPtr new_DcmFileFormat__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFileFormat__SWIG_1")]
  public static extern IntPtr new_DcmFileFormat__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFileFormat__SWIG_2")]
  public static extern IntPtr new_DcmFileFormat__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmFileFormat")]
  public static extern void delete_DcmFileFormat(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_ident")]
  public static extern int DcmFileFormat_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_print__SWIG_0")]
  public static extern void DcmFileFormat_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_print__SWIG_1")]
  public static extern void DcmFileFormat_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_print__SWIG_2")]
  public static extern void DcmFileFormat_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_print__SWIG_3")]
  public static extern void DcmFileFormat_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_print__SWIG_4")]
  public static extern void DcmFileFormat_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_validateMetaInfo")]
  public static extern IntPtr DcmFileFormat_validateMetaInfo(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_getMetaInfo")]
  public static extern IntPtr DcmFileFormat_getMetaInfo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_getDataset")]
  public static extern IntPtr DcmFileFormat_getDataset(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_getAndRemoveDataset")]
  public static extern IntPtr DcmFileFormat_getAndRemoveDataset(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_calcElementLength")]
  public static extern uint DcmFileFormat_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_canWriteXfer__SWIG_0")]
  public static extern bool DcmFileFormat_canWriteXfer__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_canWriteXfer__SWIG_1")]
  public static extern bool DcmFileFormat_canWriteXfer__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_read__SWIG_0")]
  public static extern IntPtr DcmFileFormat_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_read__SWIG_1")]
  public static extern IntPtr DcmFileFormat_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_read__SWIG_2")]
  public static extern IntPtr DcmFileFormat_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_read__SWIG_3")]
  public static extern IntPtr DcmFileFormat_read__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_write__SWIG_0")]
  public static extern IntPtr DcmFileFormat_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_write__SWIG_1")]
  public static extern IntPtr DcmFileFormat_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_write__SWIG_2")]
  public static extern IntPtr DcmFileFormat_write__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7, uint jarg8, uint jarg9);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_write__SWIG_3")]
  public static extern IntPtr DcmFileFormat_write__SWIG_3(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7, uint jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_write__SWIG_4")]
  public static extern IntPtr DcmFileFormat_write__SWIG_4(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_write__SWIG_5")]
  public static extern IntPtr DcmFileFormat_write__SWIG_5(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_write__SWIG_6")]
  public static extern IntPtr DcmFileFormat_write__SWIG_6(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_writeXML__SWIG_0")]
  public static extern IntPtr DcmFileFormat_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_writeXML__SWIG_1")]
  public static extern IntPtr DcmFileFormat_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_loadFile__SWIG_0")]
  public static extern IntPtr DcmFileFormat_loadFile__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, int jarg4, uint jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_loadFile__SWIG_1")]
  public static extern IntPtr DcmFileFormat_loadFile__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_loadFile__SWIG_2")]
  public static extern IntPtr DcmFileFormat_loadFile__SWIG_2(HandleRef jarg1, string jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_loadFile__SWIG_3")]
  public static extern IntPtr DcmFileFormat_loadFile__SWIG_3(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_loadFile__SWIG_4")]
  public static extern IntPtr DcmFileFormat_loadFile__SWIG_4(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_0")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7, uint jarg8, bool jarg9);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_1")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7, uint jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_2")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_2(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, int jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_3")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_3(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_4")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_4(HandleRef jarg1, string jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_5")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_5(HandleRef jarg1, string jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_6")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_6(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_saveFile__SWIG_7")]
  public static extern IntPtr DcmFileFormat_saveFile__SWIG_7(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_chooseRepresentation")]
  public static extern IntPtr DcmFileFormat_chooseRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_hasRepresentation")]
  public static extern bool DcmFileFormat_hasRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_removeAllButOriginalRepresentations")]
  public static extern void DcmFileFormat_removeAllButOriginalRepresentations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_removeAllButCurrentRepresentations")]
  public static extern void DcmFileFormat_removeAllButCurrentRepresentations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_insertItem__SWIG_0")]
  public static extern IntPtr DcmFileFormat_insertItem__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_insertItem__SWIG_1")]
  public static extern IntPtr DcmFileFormat_insertItem__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_remove__SWIG_0")]
  public static extern IntPtr DcmFileFormat_remove__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_remove__SWIG_1")]
  public static extern IntPtr DcmFileFormat_remove__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormat_clear")]
  public static extern IntPtr DcmFileFormat_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DEFAULT_DICOMDIR_NAME")]
  public static extern string get_DEFAULT_DICOMDIR_NAME();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_TEMPNAME_TEMPLATE")]
  public static extern string get_TEMPNAME_TEMPLATE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOMDIR_BACKUP_SUFFIX")]
  public static extern string get_DICOMDIR_BACKUP_SUFFIX();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_ItemOffset_item")]
  public static extern void set_ItemOffset_item(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ItemOffset_item")]
  public static extern IntPtr get_ItemOffset_item(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_ItemOffset_fileOffset")]
  public static extern void set_ItemOffset_fileOffset(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ItemOffset_fileOffset")]
  public static extern uint get_ItemOffset_fileOffset(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_ItemOffset")]
  public static extern IntPtr new_ItemOffset();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_ItemOffset")]
  public static extern void delete_ItemOffset(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDicomDir__SWIG_0")]
  public static extern IntPtr new_DcmDicomDir__SWIG_0();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDicomDir__SWIG_1")]
  public static extern IntPtr new_DcmDicomDir__SWIG_1(string jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDicomDir__SWIG_2")]
  public static extern IntPtr new_DcmDicomDir__SWIG_2(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDicomDir__SWIG_3")]
  public static extern IntPtr new_DcmDicomDir__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDicomDir")]
  public static extern void delete_DcmDicomDir(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_print__SWIG_0")]
  public static extern void DcmDicomDir_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_print__SWIG_1")]
  public static extern void DcmDicomDir_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_print__SWIG_2")]
  public static extern void DcmDicomDir_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_print__SWIG_3")]
  public static extern void DcmDicomDir_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_print__SWIG_4")]
  public static extern void DcmDicomDir_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_error")]
  public static extern IntPtr DcmDicomDir_error(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_getDirFileFormat")]
  public static extern IntPtr DcmDicomDir_getDirFileFormat(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_getDirFileName")]
  public static extern string DcmDicomDir_getDirFileName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_getRootRecord")]
  public static extern IntPtr DcmDicomDir_getRootRecord(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_getMRDRSequence")]
  public static extern IntPtr DcmDicomDir_getMRDRSequence(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_matchFilename")]
  public static extern IntPtr DcmDicomDir_matchFilename(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_matchOrCreateMRDR")]
  public static extern IntPtr DcmDicomDir_matchOrCreateMRDR(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_write__SWIG_0")]
  public static extern IntPtr DcmDicomDir_write__SWIG_0(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_write__SWIG_1")]
  public static extern IntPtr DcmDicomDir_write__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_write__SWIG_2")]
  public static extern IntPtr DcmDicomDir_write__SWIG_2(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_write__SWIG_3")]
  public static extern IntPtr DcmDicomDir_write__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_verify__SWIG_0")]
  public static extern IntPtr DcmDicomDir_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDicomDir_verify__SWIG_1")]
  public static extern IntPtr DcmDicomDir_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPixelSequence__SWIG_0")]
  public static extern IntPtr new_DcmPixelSequence__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPixelSequence__SWIG_1")]
  public static extern IntPtr new_DcmPixelSequence__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPixelSequence__SWIG_2")]
  public static extern IntPtr new_DcmPixelSequence__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmPixelSequence")]
  public static extern void delete_DcmPixelSequence(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_ident")]
  public static extern int DcmPixelSequence_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_print__SWIG_0")]
  public static extern void DcmPixelSequence_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_print__SWIG_1")]
  public static extern void DcmPixelSequence_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_print__SWIG_2")]
  public static extern void DcmPixelSequence_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_print__SWIG_3")]
  public static extern void DcmPixelSequence_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_print__SWIG_4")]
  public static extern void DcmPixelSequence_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_calcElementLength")]
  public static extern uint DcmPixelSequence_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_insert__SWIG_0")]
  public static extern IntPtr DcmPixelSequence_insert__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_insert__SWIG_1")]
  public static extern IntPtr DcmPixelSequence_insert__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_getItem")]
  public static extern IntPtr DcmPixelSequence_getItem(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_remove__SWIG_0")]
  public static extern IntPtr DcmPixelSequence_remove__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_remove__SWIG_1")]
  public static extern IntPtr DcmPixelSequence_remove__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_changeXfer")]
  public static extern IntPtr DcmPixelSequence_changeXfer(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_canWriteXfer")]
  public static extern bool DcmPixelSequence_canWriteXfer(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_read__SWIG_0")]
  public static extern IntPtr DcmPixelSequence_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_read__SWIG_1")]
  public static extern IntPtr DcmPixelSequence_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_read__SWIG_2")]
  public static extern IntPtr DcmPixelSequence_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_write")]
  public static extern IntPtr DcmPixelSequence_write(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmPixelSequence_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmPixelSequence_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequence_storeCompressedFrame")]
  public static extern IntPtr DcmPixelSequence_storeCompressedFrame(HandleRef jarg1, HandleRef jarg2, byte[] jarg3, uint jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmByteString__SWIG_0")]
  public static extern IntPtr new_DcmByteString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmByteString__SWIG_1")]
  public static extern IntPtr new_DcmByteString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmByteString__SWIG_2")]
  public static extern IntPtr new_DcmByteString__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmByteString")]
  public static extern void delete_DcmByteString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_ident")]
  public static extern int DcmByteString_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_clear")]
  public static extern IntPtr DcmByteString_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getVM")]
  public static extern uint DcmByteString_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getRealLength")]
  public static extern uint DcmByteString_getRealLength(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getLength__SWIG_0")]
  public static extern uint DcmByteString_getLength__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getLength__SWIG_1")]
  public static extern uint DcmByteString_getLength__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getLength__SWIG_2")]
  public static extern uint DcmByteString_getLength__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_print__SWIG_0")]
  public static extern void DcmByteString_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_print__SWIG_1")]
  public static extern void DcmByteString_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_print__SWIG_2")]
  public static extern void DcmByteString_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_print__SWIG_3")]
  public static extern void DcmByteString_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_print__SWIG_4")]
  public static extern void DcmByteString_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_write__SWIG_0")]
  public static extern IntPtr DcmByteString_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_write__SWIG_1")]
  public static extern IntPtr DcmByteString_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmByteString_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmByteString_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getOFString__SWIG_0")]
  public static extern IntPtr DcmByteString_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getOFString__SWIG_1")]
  public static extern IntPtr DcmByteString_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_getString")]
  public static extern IntPtr DcmByteString_getString(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_putString")]
  public static extern IntPtr DcmByteString_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_putOFStringArray")]
  public static extern IntPtr DcmByteString_putOFStringArray(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_verify__SWIG_0")]
  public static extern IntPtr DcmByteString_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteString_verify__SWIG_1")]
  public static extern IntPtr DcmByteString_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DELETE_TRAILING")]
  public static extern bool get_DELETE_TRAILING();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DELETE_LEADING")]
  public static extern bool get_DELETE_LEADING();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_MULTIPART")]
  public static extern bool get_MULTIPART();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_getStringPart")]
  public static extern IntPtr getStringPart(StringBuilder jarg1, string jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmApplicationEntity__SWIG_0")]
  public static extern IntPtr new_DcmApplicationEntity__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmApplicationEntity__SWIG_1")]
  public static extern IntPtr new_DcmApplicationEntity__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmApplicationEntity__SWIG_2")]
  public static extern IntPtr new_DcmApplicationEntity__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmApplicationEntity")]
  public static extern void delete_DcmApplicationEntity(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmApplicationEntity_ident")]
  public static extern int DcmApplicationEntity_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmApplicationEntity_getOFString__SWIG_0")]
  public static extern IntPtr DcmApplicationEntity_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmApplicationEntity_getOFString__SWIG_1")]
  public static extern IntPtr DcmApplicationEntity_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAgeString__SWIG_0")]
  public static extern IntPtr new_DcmAgeString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAgeString__SWIG_1")]
  public static extern IntPtr new_DcmAgeString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAgeString__SWIG_2")]
  public static extern IntPtr new_DcmAgeString__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmAgeString")]
  public static extern void delete_DcmAgeString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAgeString_ident")]
  public static extern int DcmAgeString_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmCodeString__SWIG_0")]
  public static extern IntPtr new_DcmCodeString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmCodeString__SWIG_1")]
  public static extern IntPtr new_DcmCodeString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmCodeString__SWIG_2")]
  public static extern IntPtr new_DcmCodeString__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmCodeString")]
  public static extern void delete_DcmCodeString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCodeString_ident")]
  public static extern int DcmCodeString_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCodeString_getOFString__SWIG_0")]
  public static extern IntPtr DcmCodeString_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCodeString_getOFString__SWIG_1")]
  public static extern IntPtr DcmCodeString_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCodeString_checkVR__SWIG_0")]
  public static extern bool DcmCodeString_checkVR__SWIG_0(string jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCodeString_checkVR__SWIG_1")]
  public static extern bool DcmCodeString_checkVR__SWIG_1(string jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCodeString_checkVR__SWIG_2")]
  public static extern bool DcmCodeString_checkVR__SWIG_2(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDate__SWIG_0")]
  public static extern IntPtr new_DcmDate__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDate__SWIG_1")]
  public static extern IntPtr new_DcmDate__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDate__SWIG_2")]
  public static extern IntPtr new_DcmDate__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDate")]
  public static extern void delete_DcmDate(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_ident")]
  public static extern int DcmDate_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getOFString__SWIG_0")]
  public static extern IntPtr DcmDate_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getOFString__SWIG_1")]
  public static extern IntPtr DcmDate_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_setCurrentDate")]
  public static extern IntPtr DcmDate_setCurrentDate(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_setOFDate")]
  public static extern IntPtr DcmDate_setOFDate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getOFDate__SWIG_0")]
  public static extern IntPtr DcmDate_getOFDate__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getOFDate__SWIG_1")]
  public static extern IntPtr DcmDate_getOFDate__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getOFDate__SWIG_2")]
  public static extern IntPtr DcmDate_getOFDate__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getISOFormattedDate__SWIG_0")]
  public static extern IntPtr DcmDate_getISOFormattedDate__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getISOFormattedDate__SWIG_1")]
  public static extern IntPtr DcmDate_getISOFormattedDate__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getISOFormattedDate__SWIG_2")]
  public static extern IntPtr DcmDate_getISOFormattedDate__SWIG_2(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getCurrentDate")]
  public static extern IntPtr DcmDate_getCurrentDate(StringBuilder jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getDicomDateFromOFDate")]
  public static extern IntPtr DcmDate_getDicomDateFromOFDate(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getOFDateFromString__SWIG_0")]
  public static extern IntPtr DcmDate_getOFDateFromString__SWIG_0(string jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getOFDateFromString__SWIG_1")]
  public static extern IntPtr DcmDate_getOFDateFromString__SWIG_1(string jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getISOFormattedDateFromString__SWIG_0")]
  public static extern IntPtr DcmDate_getISOFormattedDateFromString__SWIG_0(string jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDate_getISOFormattedDateFromString__SWIG_1")]
  public static extern IntPtr DcmDate_getISOFormattedDateFromString__SWIG_1(string jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDecimalString__SWIG_0")]
  public static extern IntPtr new_DcmDecimalString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDecimalString__SWIG_1")]
  public static extern IntPtr new_DcmDecimalString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDecimalString__SWIG_2")]
  public static extern IntPtr new_DcmDecimalString__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDecimalString")]
  public static extern void delete_DcmDecimalString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDecimalString_ident")]
  public static extern int DcmDecimalString_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDecimalString_getFloat64__SWIG_0")]
  public static extern IntPtr DcmDecimalString_getFloat64__SWIG_0(HandleRef jarg1, out double jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDecimalString_getFloat64__SWIG_1")]
  public static extern IntPtr DcmDecimalString_getFloat64__SWIG_1(HandleRef jarg1, out double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDecimalString_getOFString__SWIG_0")]
  public static extern IntPtr DcmDecimalString_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDecimalString_getOFString__SWIG_1")]
  public static extern IntPtr DcmDecimalString_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDateTime__SWIG_0")]
  public static extern IntPtr new_DcmDateTime__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDateTime__SWIG_1")]
  public static extern IntPtr new_DcmDateTime__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmDateTime__SWIG_2")]
  public static extern IntPtr new_DcmDateTime__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmDateTime")]
  public static extern void delete_DcmDateTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_ident")]
  public static extern int DcmDateTime_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getOFString__SWIG_0")]
  public static extern IntPtr DcmDateTime_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getOFString__SWIG_1")]
  public static extern IntPtr DcmDateTime_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_setCurrentDateTime__SWIG_0")]
  public static extern IntPtr DcmDateTime_setCurrentDateTime__SWIG_0(HandleRef jarg1, bool jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_setCurrentDateTime__SWIG_1")]
  public static extern IntPtr DcmDateTime_setCurrentDateTime__SWIG_1(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_setCurrentDateTime__SWIG_2")]
  public static extern IntPtr DcmDateTime_setCurrentDateTime__SWIG_2(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_setCurrentDateTime__SWIG_3")]
  public static extern IntPtr DcmDateTime_setCurrentDateTime__SWIG_3(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_setOFDateTime")]
  public static extern IntPtr DcmDateTime_setOFDateTime(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getOFDateTime__SWIG_0")]
  public static extern IntPtr DcmDateTime_getOFDateTime__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getOFDateTime__SWIG_1")]
  public static extern IntPtr DcmDateTime_getOFDateTime__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTime__SWIG_0")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTime__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4, bool jarg5, bool jarg6, bool jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTime__SWIG_1")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTime__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTime__SWIG_2")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTime__SWIG_2(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTime__SWIG_3")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTime__SWIG_3(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTime__SWIG_4")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTime__SWIG_4(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTime__SWIG_5")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTime__SWIG_5(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTime__SWIG_6")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTime__SWIG_6(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4, bool jarg5, bool jarg6, bool jarg7, string jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getCurrentDateTime__SWIG_0")]
  public static extern IntPtr DcmDateTime_getCurrentDateTime__SWIG_0(StringBuilder jarg1, bool jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getCurrentDateTime__SWIG_1")]
  public static extern IntPtr DcmDateTime_getCurrentDateTime__SWIG_1(StringBuilder jarg1, bool jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getCurrentDateTime__SWIG_2")]
  public static extern IntPtr DcmDateTime_getCurrentDateTime__SWIG_2(StringBuilder jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getCurrentDateTime__SWIG_3")]
  public static extern IntPtr DcmDateTime_getCurrentDateTime__SWIG_3(StringBuilder jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_0")]
  public static extern IntPtr DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_1")]
  public static extern IntPtr DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_1(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_2")]
  public static extern IntPtr DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_2(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_3")]
  public static extern IntPtr DcmDateTime_getDicomDateTimeFromOFDateTime__SWIG_3(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getOFDateTimeFromString")]
  public static extern IntPtr DcmDateTime_getOFDateTimeFromString(string jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTimeFromString__SWIG_0")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTimeFromString__SWIG_0(string jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTimeFromString__SWIG_1")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTimeFromString__SWIG_1(string jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTimeFromString__SWIG_2")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTimeFromString__SWIG_2(string jarg1, StringBuilder jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTimeFromString__SWIG_3")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTimeFromString__SWIG_3(string jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTimeFromString__SWIG_4")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTimeFromString__SWIG_4(string jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTime_getISOFormattedDateTimeFromString__SWIG_5")]
  public static extern IntPtr DcmDateTime_getISOFormattedDateTimeFromString__SWIG_5(string jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5, bool jarg6, string jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmIntegerString__SWIG_0")]
  public static extern IntPtr new_DcmIntegerString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmIntegerString__SWIG_1")]
  public static extern IntPtr new_DcmIntegerString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmIntegerString__SWIG_2")]
  public static extern IntPtr new_DcmIntegerString__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmIntegerString")]
  public static extern void delete_DcmIntegerString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmIntegerString_ident")]
  public static extern int DcmIntegerString_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmIntegerString_getSint32__SWIG_0")]
  public static extern IntPtr DcmIntegerString_getSint32__SWIG_0(HandleRef jarg1, out int jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmIntegerString_getSint32__SWIG_1")]
  public static extern IntPtr DcmIntegerString_getSint32__SWIG_1(HandleRef jarg1, out int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmIntegerString_getOFString__SWIG_0")]
  public static extern IntPtr DcmIntegerString_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmIntegerString_getOFString__SWIG_1")]
  public static extern IntPtr DcmIntegerString_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTime__SWIG_0")]
  public static extern IntPtr new_DcmTime__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTime__SWIG_1")]
  public static extern IntPtr new_DcmTime__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmTime__SWIG_2")]
  public static extern IntPtr new_DcmTime__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmTime")]
  public static extern void delete_DcmTime(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_ident")]
  public static extern int DcmTime_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getOFString__SWIG_0")]
  public static extern IntPtr DcmTime_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getOFString__SWIG_1")]
  public static extern IntPtr DcmTime_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_setCurrentTime__SWIG_0")]
  public static extern IntPtr DcmTime_setCurrentTime__SWIG_0(HandleRef jarg1, bool jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_setCurrentTime__SWIG_1")]
  public static extern IntPtr DcmTime_setCurrentTime__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_setCurrentTime__SWIG_2")]
  public static extern IntPtr DcmTime_setCurrentTime__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_setOFTime")]
  public static extern IntPtr DcmTime_setOFTime(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getOFTime__SWIG_0")]
  public static extern IntPtr DcmTime_getOFTime__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getOFTime__SWIG_1")]
  public static extern IntPtr DcmTime_getOFTime__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getOFTime__SWIG_2")]
  public static extern IntPtr DcmTime_getOFTime__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTime__SWIG_0")]
  public static extern IntPtr DcmTime_getISOFormattedTime__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4, bool jarg5, bool jarg6, bool jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTime__SWIG_1")]
  public static extern IntPtr DcmTime_getISOFormattedTime__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTime__SWIG_2")]
  public static extern IntPtr DcmTime_getISOFormattedTime__SWIG_2(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTime__SWIG_3")]
  public static extern IntPtr DcmTime_getISOFormattedTime__SWIG_3(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTime__SWIG_4")]
  public static extern IntPtr DcmTime_getISOFormattedTime__SWIG_4(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTime__SWIG_5")]
  public static extern IntPtr DcmTime_getISOFormattedTime__SWIG_5(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getCurrentTime__SWIG_0")]
  public static extern IntPtr DcmTime_getCurrentTime__SWIG_0(StringBuilder jarg1, bool jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getCurrentTime__SWIG_1")]
  public static extern IntPtr DcmTime_getCurrentTime__SWIG_1(StringBuilder jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getCurrentTime__SWIG_2")]
  public static extern IntPtr DcmTime_getCurrentTime__SWIG_2(StringBuilder jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getDicomTimeFromOFTime__SWIG_0")]
  public static extern IntPtr DcmTime_getDicomTimeFromOFTime__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getDicomTimeFromOFTime__SWIG_1")]
  public static extern IntPtr DcmTime_getDicomTimeFromOFTime__SWIG_1(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getDicomTimeFromOFTime__SWIG_2")]
  public static extern IntPtr DcmTime_getDicomTimeFromOFTime__SWIG_2(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getOFTimeFromString__SWIG_0")]
  public static extern IntPtr DcmTime_getOFTimeFromString__SWIG_0(string jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getOFTimeFromString__SWIG_1")]
  public static extern IntPtr DcmTime_getOFTimeFromString__SWIG_1(string jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTimeFromString__SWIG_0")]
  public static extern IntPtr DcmTime_getISOFormattedTimeFromString__SWIG_0(string jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTimeFromString__SWIG_1")]
  public static extern IntPtr DcmTime_getISOFormattedTimeFromString__SWIG_1(string jarg1, StringBuilder jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTimeFromString__SWIG_2")]
  public static extern IntPtr DcmTime_getISOFormattedTimeFromString__SWIG_2(string jarg1, StringBuilder jarg2, bool jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTimeFromString__SWIG_3")]
  public static extern IntPtr DcmTime_getISOFormattedTimeFromString__SWIG_3(string jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getISOFormattedTimeFromString__SWIG_4")]
  public static extern IntPtr DcmTime_getISOFormattedTimeFromString__SWIG_4(string jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTime_getTimeZoneFromString")]
  public static extern IntPtr DcmTime_getTimeZoneFromString(string jarg1, out double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUniqueIdentifier__SWIG_0")]
  public static extern IntPtr new_DcmUniqueIdentifier__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUniqueIdentifier__SWIG_1")]
  public static extern IntPtr new_DcmUniqueIdentifier__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUniqueIdentifier__SWIG_2")]
  public static extern IntPtr new_DcmUniqueIdentifier__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmUniqueIdentifier")]
  public static extern void delete_DcmUniqueIdentifier(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifier_ident")]
  public static extern int DcmUniqueIdentifier_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifier_print__SWIG_0")]
  public static extern void DcmUniqueIdentifier_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifier_print__SWIG_1")]
  public static extern void DcmUniqueIdentifier_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifier_print__SWIG_2")]
  public static extern void DcmUniqueIdentifier_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifier_print__SWIG_3")]
  public static extern void DcmUniqueIdentifier_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifier_print__SWIG_4")]
  public static extern void DcmUniqueIdentifier_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifier_putString")]
  public static extern IntPtr DcmUniqueIdentifier_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmCharString__SWIG_0")]
  public static extern IntPtr new_DcmCharString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmCharString__SWIG_1")]
  public static extern IntPtr new_DcmCharString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmCharString")]
  public static extern void delete_DcmCharString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmLongString__SWIG_0")]
  public static extern IntPtr new_DcmLongString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmLongString__SWIG_1")]
  public static extern IntPtr new_DcmLongString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmLongString__SWIG_2")]
  public static extern IntPtr new_DcmLongString__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmLongString")]
  public static extern void delete_DcmLongString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongString_ident")]
  public static extern int DcmLongString_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongString_getOFString__SWIG_0")]
  public static extern IntPtr DcmLongString_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongString_getOFString__SWIG_1")]
  public static extern IntPtr DcmLongString_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmLongText__SWIG_0")]
  public static extern IntPtr new_DcmLongText__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmLongText__SWIG_1")]
  public static extern IntPtr new_DcmLongText__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmLongText__SWIG_2")]
  public static extern IntPtr new_DcmLongText__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmLongText")]
  public static extern void delete_DcmLongText(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongText_ident")]
  public static extern int DcmLongText_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongText_getVM")]
  public static extern uint DcmLongText_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongText_getOFString__SWIG_0")]
  public static extern IntPtr DcmLongText_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongText_getOFString__SWIG_1")]
  public static extern IntPtr DcmLongText_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongText_getOFStringArray__SWIG_0")]
  public static extern IntPtr DcmLongText_getOFStringArray__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongText_getOFStringArray__SWIG_1")]
  public static extern IntPtr DcmLongText_getOFStringArray__SWIG_1(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPersonName__SWIG_0")]
  public static extern IntPtr new_DcmPersonName__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPersonName__SWIG_1")]
  public static extern IntPtr new_DcmPersonName__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPersonName__SWIG_2")]
  public static extern IntPtr new_DcmPersonName__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmPersonName")]
  public static extern void delete_DcmPersonName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_ident")]
  public static extern int DcmPersonName_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getOFString__SWIG_0")]
  public static extern IntPtr DcmPersonName_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getOFString__SWIG_1")]
  public static extern IntPtr DcmPersonName_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getNameComponents__SWIG_0")]
  public static extern IntPtr DcmPersonName_getNameComponents__SWIG_0(HandleRef jarg1, StringBuilder jarg2, StringBuilder jarg3, StringBuilder jarg4, StringBuilder jarg5, StringBuilder jarg6, uint jarg7, uint jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getNameComponents__SWIG_1")]
  public static extern IntPtr DcmPersonName_getNameComponents__SWIG_1(HandleRef jarg1, StringBuilder jarg2, StringBuilder jarg3, StringBuilder jarg4, StringBuilder jarg5, StringBuilder jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getNameComponents__SWIG_2")]
  public static extern IntPtr DcmPersonName_getNameComponents__SWIG_2(HandleRef jarg1, StringBuilder jarg2, StringBuilder jarg3, StringBuilder jarg4, StringBuilder jarg5, StringBuilder jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getFormattedName__SWIG_0")]
  public static extern IntPtr DcmPersonName_getFormattedName__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, uint jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getFormattedName__SWIG_1")]
  public static extern IntPtr DcmPersonName_getFormattedName__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getFormattedName__SWIG_2")]
  public static extern IntPtr DcmPersonName_getFormattedName__SWIG_2(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_putNameComponents")]
  public static extern IntPtr DcmPersonName_putNameComponents(HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5, string jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getNameComponentsFromString__SWIG_0")]
  public static extern IntPtr DcmPersonName_getNameComponentsFromString__SWIG_0(string jarg1, StringBuilder jarg2, StringBuilder jarg3, StringBuilder jarg4, StringBuilder jarg5, StringBuilder jarg6, uint jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getNameComponentsFromString__SWIG_1")]
  public static extern IntPtr DcmPersonName_getNameComponentsFromString__SWIG_1(string jarg1, StringBuilder jarg2, StringBuilder jarg3, StringBuilder jarg4, StringBuilder jarg5, StringBuilder jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getFormattedNameFromString__SWIG_0")]
  public static extern IntPtr DcmPersonName_getFormattedNameFromString__SWIG_0(string jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getFormattedNameFromString__SWIG_1")]
  public static extern IntPtr DcmPersonName_getFormattedNameFromString__SWIG_1(string jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getFormattedNameFromComponents")]
  public static extern IntPtr DcmPersonName_getFormattedNameFromComponents(string jarg1, string jarg2, string jarg3, string jarg4, string jarg5, StringBuilder jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonName_getStringFromNameComponents")]
  public static extern IntPtr DcmPersonName_getStringFromNameComponents(string jarg1, string jarg2, string jarg3, string jarg4, string jarg5, StringBuilder jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmShortString__SWIG_0")]
  public static extern IntPtr new_DcmShortString__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmShortString__SWIG_1")]
  public static extern IntPtr new_DcmShortString__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmShortString__SWIG_2")]
  public static extern IntPtr new_DcmShortString__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmShortString")]
  public static extern void delete_DcmShortString(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortString_ident")]
  public static extern int DcmShortString_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortString_getOFString__SWIG_0")]
  public static extern IntPtr DcmShortString_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortString_getOFString__SWIG_1")]
  public static extern IntPtr DcmShortString_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmShortText__SWIG_0")]
  public static extern IntPtr new_DcmShortText__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmShortText__SWIG_1")]
  public static extern IntPtr new_DcmShortText__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmShortText__SWIG_2")]
  public static extern IntPtr new_DcmShortText__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmShortText")]
  public static extern void delete_DcmShortText(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortText_ident")]
  public static extern int DcmShortText_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortText_getVM")]
  public static extern uint DcmShortText_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortText_getOFString__SWIG_0")]
  public static extern IntPtr DcmShortText_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortText_getOFString__SWIG_1")]
  public static extern IntPtr DcmShortText_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortText_getOFStringArray__SWIG_0")]
  public static extern IntPtr DcmShortText_getOFStringArray__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortText_getOFStringArray__SWIG_1")]
  public static extern IntPtr DcmShortText_getOFStringArray__SWIG_1(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnlimitedText__SWIG_0")]
  public static extern IntPtr new_DcmUnlimitedText__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnlimitedText__SWIG_1")]
  public static extern IntPtr new_DcmUnlimitedText__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnlimitedText__SWIG_2")]
  public static extern IntPtr new_DcmUnlimitedText__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmUnlimitedText")]
  public static extern void delete_DcmUnlimitedText(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnlimitedText_ident")]
  public static extern int DcmUnlimitedText_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnlimitedText_getVM")]
  public static extern uint DcmUnlimitedText_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnlimitedText_getOFString__SWIG_0")]
  public static extern IntPtr DcmUnlimitedText_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnlimitedText_getOFString__SWIG_1")]
  public static extern IntPtr DcmUnlimitedText_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnlimitedText_getOFStringArray__SWIG_0")]
  public static extern IntPtr DcmUnlimitedText_getOFStringArray__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnlimitedText_getOFStringArray__SWIG_1")]
  public static extern IntPtr DcmUnlimitedText_getOFStringArray__SWIG_1(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOtherByteOtherWord__SWIG_0")]
  public static extern IntPtr new_DcmOtherByteOtherWord__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOtherByteOtherWord__SWIG_1")]
  public static extern IntPtr new_DcmOtherByteOtherWord__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOtherByteOtherWord__SWIG_2")]
  public static extern IntPtr new_DcmOtherByteOtherWord__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmOtherByteOtherWord")]
  public static extern void delete_DcmOtherByteOtherWord(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_ident")]
  public static extern int DcmOtherByteOtherWord_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getVM")]
  public static extern uint DcmOtherByteOtherWord_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_setVR")]
  public static extern IntPtr DcmOtherByteOtherWord_setVR(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_print__SWIG_0")]
  public static extern void DcmOtherByteOtherWord_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_print__SWIG_1")]
  public static extern void DcmOtherByteOtherWord_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_print__SWIG_2")]
  public static extern void DcmOtherByteOtherWord_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_print__SWIG_3")]
  public static extern void DcmOtherByteOtherWord_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_print__SWIG_4")]
  public static extern void DcmOtherByteOtherWord_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_canWriteXfer")]
  public static extern bool DcmOtherByteOtherWord_canWriteXfer(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_write__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_write__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_writeXML__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_writeXML__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getUint8__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_getUint8__SWIG_0(HandleRef jarg1, out byte jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getUint8__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_getUint8__SWIG_1(HandleRef jarg1, out byte jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getUint16__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_getUint16__SWIG_0(HandleRef jarg1, out ushort jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getUint16__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_getUint16__SWIG_1(HandleRef jarg1, out ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getUint8Array")]
  public static extern IntPtr DcmOtherByteOtherWord_getUint8Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getUint16Array")]
  public static extern IntPtr DcmOtherByteOtherWord_getUint16Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getOFString__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getOFString__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getOFStringArray__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_getOFStringArray__SWIG_0(HandleRef jarg1, StringBuilder jarg2, bool jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_getOFStringArray__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_getOFStringArray__SWIG_1(HandleRef jarg1, StringBuilder jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_putUint8Array")]
  public static extern IntPtr DcmOtherByteOtherWord_putUint8Array(HandleRef jarg1, byte[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_putUint16Array")]
  public static extern IntPtr DcmOtherByteOtherWord_putUint16Array(HandleRef jarg1, ushort[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_putString")]
  public static extern IntPtr DcmOtherByteOtherWord_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_verify__SWIG_0")]
  public static extern IntPtr DcmOtherByteOtherWord_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWord_verify__SWIG_1")]
  public static extern IntPtr DcmOtherByteOtherWord_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmRepresentationParameter")]
  public static extern void delete_DcmRepresentationParameter(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmRepresentationParameter_clone")]
  public static extern IntPtr DcmRepresentationParameter_clone(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmRepresentationParameter_className")]
  public static extern string DcmRepresentationParameter_className(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPixelData__SWIG_0")]
  public static extern IntPtr new_DcmPixelData__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPixelData__SWIG_1")]
  public static extern IntPtr new_DcmPixelData__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmPixelData__SWIG_2")]
  public static extern IntPtr new_DcmPixelData__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmPixelData")]
  public static extern void delete_DcmPixelData(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_setVR")]
  public static extern IntPtr DcmPixelData_setVR(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_ident")]
  public static extern int DcmPixelData_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_print__SWIG_0")]
  public static extern void DcmPixelData_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_print__SWIG_1")]
  public static extern void DcmPixelData_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_print__SWIG_2")]
  public static extern void DcmPixelData_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_print__SWIG_3")]
  public static extern void DcmPixelData_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_print__SWIG_4")]
  public static extern void DcmPixelData_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_canWriteXfer")]
  public static extern bool DcmPixelData_canWriteXfer(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_calcElementLength")]
  public static extern uint DcmPixelData_calcElementLength(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_getLength__SWIG_0")]
  public static extern uint DcmPixelData_getLength__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_getLength__SWIG_1")]
  public static extern uint DcmPixelData_getLength__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_getLength__SWIG_2")]
  public static extern uint DcmPixelData_getLength__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_transferInit")]
  public static extern void DcmPixelData_transferInit(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_read__SWIG_0")]
  public static extern IntPtr DcmPixelData_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_read__SWIG_1")]
  public static extern IntPtr DcmPixelData_read__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_read__SWIG_2")]
  public static extern IntPtr DcmPixelData_read__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_write__SWIG_0")]
  public static extern IntPtr DcmPixelData_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_write__SWIG_1")]
  public static extern IntPtr DcmPixelData_write__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_writeXML__SWIG_0")]
  public static extern IntPtr DcmPixelData_writeXML__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_writeXML__SWIG_1")]
  public static extern IntPtr DcmPixelData_writeXML__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_writeSignatureFormat__SWIG_0")]
  public static extern IntPtr DcmPixelData_writeSignatureFormat__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_writeSignatureFormat__SWIG_1")]
  public static extern IntPtr DcmPixelData_writeSignatureFormat__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_loadAllDataIntoMemory")]
  public static extern IntPtr DcmPixelData_loadAllDataIntoMemory(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_transferEnd")]
  public static extern void DcmPixelData_transferEnd(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_canChooseRepresentation")]
  public static extern bool DcmPixelData_canChooseRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_chooseRepresentation")]
  public static extern IntPtr DcmPixelData_chooseRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_putOriginalRepresentation")]
  public static extern void DcmPixelData_putOriginalRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_putUint8Array")]
  public static extern IntPtr DcmPixelData_putUint8Array(HandleRef jarg1, byte[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_putUint16Array")]
  public static extern IntPtr DcmPixelData_putUint16Array(HandleRef jarg1, ushort[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_createUint8Array")]
  public static extern IntPtr DcmPixelData_createUint8Array(HandleRef jarg1, uint jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_createUint16Array")]
  public static extern IntPtr DcmPixelData_createUint16Array(HandleRef jarg1, uint jarg2, ref IntPtr jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_getEncapsulatedRepresentation")]
  public static extern IntPtr DcmPixelData_getEncapsulatedRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_setCurrentRepresentationParameter")]
  public static extern IntPtr DcmPixelData_setCurrentRepresentationParameter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_hasRepresentation__SWIG_0")]
  public static extern bool DcmPixelData_hasRepresentation__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_hasRepresentation__SWIG_1")]
  public static extern bool DcmPixelData_hasRepresentation__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_removeRepresentation")]
  public static extern IntPtr DcmPixelData_removeRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_removeAllButOriginalRepresentations")]
  public static extern void DcmPixelData_removeAllButOriginalRepresentations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_removeAllButCurrentRepresentations")]
  public static extern void DcmPixelData_removeAllButCurrentRepresentations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelData_removeOriginalRepresentation")]
  public static extern IntPtr DcmPixelData_removeOriginalRepresentation(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOverlayData__SWIG_0")]
  public static extern IntPtr new_DcmOverlayData__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOverlayData__SWIG_1")]
  public static extern IntPtr new_DcmOverlayData__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOverlayData__SWIG_2")]
  public static extern IntPtr new_DcmOverlayData__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmOverlayData")]
  public static extern void delete_DcmOverlayData(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOverlayData_ident")]
  public static extern int DcmOverlayData_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAttributeTag__SWIG_0")]
  public static extern IntPtr new_DcmAttributeTag__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAttributeTag__SWIG_1")]
  public static extern IntPtr new_DcmAttributeTag__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAttributeTag__SWIG_2")]
  public static extern IntPtr new_DcmAttributeTag__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmAttributeTag")]
  public static extern void delete_DcmAttributeTag(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_ident")]
  public static extern int DcmAttributeTag_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_getVM")]
  public static extern uint DcmAttributeTag_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_print__SWIG_0")]
  public static extern void DcmAttributeTag_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_print__SWIG_1")]
  public static extern void DcmAttributeTag_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_print__SWIG_2")]
  public static extern void DcmAttributeTag_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_print__SWIG_3")]
  public static extern void DcmAttributeTag_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_print__SWIG_4")]
  public static extern void DcmAttributeTag_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_getTagVal__SWIG_0")]
  public static extern IntPtr DcmAttributeTag_getTagVal__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_getTagVal__SWIG_1")]
  public static extern IntPtr DcmAttributeTag_getTagVal__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_getUint16Array")]
  public static extern IntPtr DcmAttributeTag_getUint16Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_getOFString__SWIG_0")]
  public static extern IntPtr DcmAttributeTag_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_getOFString__SWIG_1")]
  public static extern IntPtr DcmAttributeTag_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_putTagVal__SWIG_0")]
  public static extern IntPtr DcmAttributeTag_putTagVal__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_putTagVal__SWIG_1")]
  public static extern IntPtr DcmAttributeTag_putTagVal__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_putUint16Array")]
  public static extern IntPtr DcmAttributeTag_putUint16Array(HandleRef jarg1, ushort[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_putString")]
  public static extern IntPtr DcmAttributeTag_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_verify__SWIG_0")]
  public static extern IntPtr DcmAttributeTag_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTag_verify__SWIG_1")]
  public static extern IntPtr DcmAttributeTag_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSignedShort__SWIG_0")]
  public static extern IntPtr new_DcmSignedShort__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSignedShort__SWIG_1")]
  public static extern IntPtr new_DcmSignedShort__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSignedShort__SWIG_2")]
  public static extern IntPtr new_DcmSignedShort__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmSignedShort")]
  public static extern void delete_DcmSignedShort(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_ident")]
  public static extern int DcmSignedShort_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_getVM")]
  public static extern uint DcmSignedShort_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_print__SWIG_0")]
  public static extern void DcmSignedShort_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_print__SWIG_1")]
  public static extern void DcmSignedShort_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_print__SWIG_2")]
  public static extern void DcmSignedShort_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_print__SWIG_3")]
  public static extern void DcmSignedShort_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_print__SWIG_4")]
  public static extern void DcmSignedShort_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_getSint16__SWIG_0")]
  public static extern IntPtr DcmSignedShort_getSint16__SWIG_0(HandleRef jarg1, out short jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_getSint16__SWIG_1")]
  public static extern IntPtr DcmSignedShort_getSint16__SWIG_1(HandleRef jarg1, out short jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_getSint16Array")]
  public static extern IntPtr DcmSignedShort_getSint16Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_getOFString__SWIG_0")]
  public static extern IntPtr DcmSignedShort_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_getOFString__SWIG_1")]
  public static extern IntPtr DcmSignedShort_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_putSint16__SWIG_0")]
  public static extern IntPtr DcmSignedShort_putSint16__SWIG_0(HandleRef jarg1, short jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_putSint16__SWIG_1")]
  public static extern IntPtr DcmSignedShort_putSint16__SWIG_1(HandleRef jarg1, short jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_putSint16Array")]
  public static extern IntPtr DcmSignedShort_putSint16Array(HandleRef jarg1, short[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_putString")]
  public static extern IntPtr DcmSignedShort_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_verify__SWIG_0")]
  public static extern IntPtr DcmSignedShort_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShort_verify__SWIG_1")]
  public static extern IntPtr DcmSignedShort_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedShort__SWIG_0")]
  public static extern IntPtr new_DcmUnsignedShort__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedShort__SWIG_1")]
  public static extern IntPtr new_DcmUnsignedShort__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedShort__SWIG_2")]
  public static extern IntPtr new_DcmUnsignedShort__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmUnsignedShort")]
  public static extern void delete_DcmUnsignedShort(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_ident")]
  public static extern int DcmUnsignedShort_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_getVM")]
  public static extern uint DcmUnsignedShort_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_print__SWIG_0")]
  public static extern void DcmUnsignedShort_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_print__SWIG_1")]
  public static extern void DcmUnsignedShort_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_print__SWIG_2")]
  public static extern void DcmUnsignedShort_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_print__SWIG_3")]
  public static extern void DcmUnsignedShort_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_print__SWIG_4")]
  public static extern void DcmUnsignedShort_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_getUint16__SWIG_0")]
  public static extern IntPtr DcmUnsignedShort_getUint16__SWIG_0(HandleRef jarg1, out ushort jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_getUint16__SWIG_1")]
  public static extern IntPtr DcmUnsignedShort_getUint16__SWIG_1(HandleRef jarg1, out ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_getUint16Array")]
  public static extern IntPtr DcmUnsignedShort_getUint16Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_getOFString__SWIG_0")]
  public static extern IntPtr DcmUnsignedShort_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_getOFString__SWIG_1")]
  public static extern IntPtr DcmUnsignedShort_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_putUint16__SWIG_0")]
  public static extern IntPtr DcmUnsignedShort_putUint16__SWIG_0(HandleRef jarg1, ushort jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_putUint16__SWIG_1")]
  public static extern IntPtr DcmUnsignedShort_putUint16__SWIG_1(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_putUint16Array")]
  public static extern IntPtr DcmUnsignedShort_putUint16Array(HandleRef jarg1, ushort[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_putString")]
  public static extern IntPtr DcmUnsignedShort_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_verify__SWIG_0")]
  public static extern IntPtr DcmUnsignedShort_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShort_verify__SWIG_1")]
  public static extern IntPtr DcmUnsignedShort_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSignedLong__SWIG_0")]
  public static extern IntPtr new_DcmSignedLong__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSignedLong__SWIG_1")]
  public static extern IntPtr new_DcmSignedLong__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmSignedLong__SWIG_2")]
  public static extern IntPtr new_DcmSignedLong__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmSignedLong")]
  public static extern void delete_DcmSignedLong(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_ident")]
  public static extern int DcmSignedLong_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_getVM")]
  public static extern uint DcmSignedLong_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_print__SWIG_0")]
  public static extern void DcmSignedLong_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_print__SWIG_1")]
  public static extern void DcmSignedLong_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_print__SWIG_2")]
  public static extern void DcmSignedLong_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_print__SWIG_3")]
  public static extern void DcmSignedLong_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_print__SWIG_4")]
  public static extern void DcmSignedLong_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_getSint32__SWIG_0")]
  public static extern IntPtr DcmSignedLong_getSint32__SWIG_0(HandleRef jarg1, out int jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_getSint32__SWIG_1")]
  public static extern IntPtr DcmSignedLong_getSint32__SWIG_1(HandleRef jarg1, out int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_getSint32Array")]
  public static extern IntPtr DcmSignedLong_getSint32Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_getOFString__SWIG_0")]
  public static extern IntPtr DcmSignedLong_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_getOFString__SWIG_1")]
  public static extern IntPtr DcmSignedLong_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_putSint32__SWIG_0")]
  public static extern IntPtr DcmSignedLong_putSint32__SWIG_0(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_putSint32__SWIG_1")]
  public static extern IntPtr DcmSignedLong_putSint32__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_putSint32Array")]
  public static extern IntPtr DcmSignedLong_putSint32Array(HandleRef jarg1, int[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_putString")]
  public static extern IntPtr DcmSignedLong_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_verify__SWIG_0")]
  public static extern IntPtr DcmSignedLong_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLong_verify__SWIG_1")]
  public static extern IntPtr DcmSignedLong_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedLong__SWIG_0")]
  public static extern IntPtr new_DcmUnsignedLong__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedLong__SWIG_1")]
  public static extern IntPtr new_DcmUnsignedLong__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedLong__SWIG_2")]
  public static extern IntPtr new_DcmUnsignedLong__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmUnsignedLong")]
  public static extern void delete_DcmUnsignedLong(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_ident")]
  public static extern int DcmUnsignedLong_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_getVM")]
  public static extern uint DcmUnsignedLong_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_print__SWIG_0")]
  public static extern void DcmUnsignedLong_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_print__SWIG_1")]
  public static extern void DcmUnsignedLong_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_print__SWIG_2")]
  public static extern void DcmUnsignedLong_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_print__SWIG_3")]
  public static extern void DcmUnsignedLong_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_print__SWIG_4")]
  public static extern void DcmUnsignedLong_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_getUint32__SWIG_0")]
  public static extern IntPtr DcmUnsignedLong_getUint32__SWIG_0(HandleRef jarg1, out uint jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_getUint32__SWIG_1")]
  public static extern IntPtr DcmUnsignedLong_getUint32__SWIG_1(HandleRef jarg1, out uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_getUint32Array")]
  public static extern IntPtr DcmUnsignedLong_getUint32Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_getOFString__SWIG_0")]
  public static extern IntPtr DcmUnsignedLong_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_getOFString__SWIG_1")]
  public static extern IntPtr DcmUnsignedLong_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_putUint32__SWIG_0")]
  public static extern IntPtr DcmUnsignedLong_putUint32__SWIG_0(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_putUint32__SWIG_1")]
  public static extern IntPtr DcmUnsignedLong_putUint32__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_putUint32Array")]
  public static extern IntPtr DcmUnsignedLong_putUint32Array(HandleRef jarg1, uint[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_putString")]
  public static extern IntPtr DcmUnsignedLong_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_verify__SWIG_0")]
  public static extern IntPtr DcmUnsignedLong_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLong_verify__SWIG_1")]
  public static extern IntPtr DcmUnsignedLong_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedLongOffset__SWIG_0")]
  public static extern IntPtr new_DcmUnsignedLongOffset__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedLongOffset__SWIG_1")]
  public static extern IntPtr new_DcmUnsignedLongOffset__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmUnsignedLongOffset__SWIG_2")]
  public static extern IntPtr new_DcmUnsignedLongOffset__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmUnsignedLongOffset")]
  public static extern void delete_DcmUnsignedLongOffset(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongOffset_ident")]
  public static extern int DcmUnsignedLongOffset_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongOffset_clear")]
  public static extern IntPtr DcmUnsignedLongOffset_clear(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongOffset_getNextRecord")]
  public static extern IntPtr DcmUnsignedLongOffset_getNextRecord(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongOffset_setNextRecord")]
  public static extern IntPtr DcmUnsignedLongOffset_setNextRecord(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongOffset_verify__SWIG_0")]
  public static extern IntPtr DcmUnsignedLongOffset_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongOffset_verify__SWIG_1")]
  public static extern IntPtr DcmUnsignedLongOffset_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFloatingPointSingle__SWIG_0")]
  public static extern IntPtr new_DcmFloatingPointSingle__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFloatingPointSingle__SWIG_1")]
  public static extern IntPtr new_DcmFloatingPointSingle__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFloatingPointSingle__SWIG_2")]
  public static extern IntPtr new_DcmFloatingPointSingle__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmFloatingPointSingle")]
  public static extern void delete_DcmFloatingPointSingle(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_ident")]
  public static extern int DcmFloatingPointSingle_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_getVM")]
  public static extern uint DcmFloatingPointSingle_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_print__SWIG_0")]
  public static extern void DcmFloatingPointSingle_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_print__SWIG_1")]
  public static extern void DcmFloatingPointSingle_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_print__SWIG_2")]
  public static extern void DcmFloatingPointSingle_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_print__SWIG_3")]
  public static extern void DcmFloatingPointSingle_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_print__SWIG_4")]
  public static extern void DcmFloatingPointSingle_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_getFloat32__SWIG_0")]
  public static extern IntPtr DcmFloatingPointSingle_getFloat32__SWIG_0(HandleRef jarg1, out float jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_getFloat32__SWIG_1")]
  public static extern IntPtr DcmFloatingPointSingle_getFloat32__SWIG_1(HandleRef jarg1, out float jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_getFloat32Array")]
  public static extern IntPtr DcmFloatingPointSingle_getFloat32Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_getOFString__SWIG_0")]
  public static extern IntPtr DcmFloatingPointSingle_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_getOFString__SWIG_1")]
  public static extern IntPtr DcmFloatingPointSingle_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_putFloat32__SWIG_0")]
  public static extern IntPtr DcmFloatingPointSingle_putFloat32__SWIG_0(HandleRef jarg1, float jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_putFloat32__SWIG_1")]
  public static extern IntPtr DcmFloatingPointSingle_putFloat32__SWIG_1(HandleRef jarg1, float jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_putFloat32Array")]
  public static extern IntPtr DcmFloatingPointSingle_putFloat32Array(HandleRef jarg1, float[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_putString")]
  public static extern IntPtr DcmFloatingPointSingle_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_verify__SWIG_0")]
  public static extern IntPtr DcmFloatingPointSingle_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingle_verify__SWIG_1")]
  public static extern IntPtr DcmFloatingPointSingle_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFloatingPointDouble__SWIG_0")]
  public static extern IntPtr new_DcmFloatingPointDouble__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFloatingPointDouble__SWIG_1")]
  public static extern IntPtr new_DcmFloatingPointDouble__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmFloatingPointDouble__SWIG_2")]
  public static extern IntPtr new_DcmFloatingPointDouble__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmFloatingPointDouble")]
  public static extern void delete_DcmFloatingPointDouble(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_ident")]
  public static extern int DcmFloatingPointDouble_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_getVM")]
  public static extern uint DcmFloatingPointDouble_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_print__SWIG_0")]
  public static extern void DcmFloatingPointDouble_print__SWIG_0(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_print__SWIG_1")]
  public static extern void DcmFloatingPointDouble_print__SWIG_1(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_print__SWIG_2")]
  public static extern void DcmFloatingPointDouble_print__SWIG_2(HandleRef jarg1, HandleRef jarg2, uint jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_print__SWIG_3")]
  public static extern void DcmFloatingPointDouble_print__SWIG_3(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_print__SWIG_4")]
  public static extern void DcmFloatingPointDouble_print__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_getFloat64__SWIG_0")]
  public static extern IntPtr DcmFloatingPointDouble_getFloat64__SWIG_0(HandleRef jarg1, out double jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_getFloat64__SWIG_1")]
  public static extern IntPtr DcmFloatingPointDouble_getFloat64__SWIG_1(HandleRef jarg1, out double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_getFloat64Array")]
  public static extern IntPtr DcmFloatingPointDouble_getFloat64Array(HandleRef jarg1, ref IntPtr jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_getOFString__SWIG_0")]
  public static extern IntPtr DcmFloatingPointDouble_getOFString__SWIG_0(HandleRef jarg1, StringBuilder jarg2, uint jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_getOFString__SWIG_1")]
  public static extern IntPtr DcmFloatingPointDouble_getOFString__SWIG_1(HandleRef jarg1, StringBuilder jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_putFloat64__SWIG_0")]
  public static extern IntPtr DcmFloatingPointDouble_putFloat64__SWIG_0(HandleRef jarg1, double jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_putFloat64__SWIG_1")]
  public static extern IntPtr DcmFloatingPointDouble_putFloat64__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_putFloat64Array")]
  public static extern IntPtr DcmFloatingPointDouble_putFloat64Array(HandleRef jarg1, double[] jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_putString")]
  public static extern IntPtr DcmFloatingPointDouble_putString(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_verify__SWIG_0")]
  public static extern IntPtr DcmFloatingPointDouble_verify__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDouble_verify__SWIG_1")]
  public static extern IntPtr DcmFloatingPointDouble_verify__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOtherFloat__SWIG_0")]
  public static extern IntPtr new_DcmOtherFloat__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOtherFloat__SWIG_1")]
  public static extern IntPtr new_DcmOtherFloat__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmOtherFloat__SWIG_2")]
  public static extern IntPtr new_DcmOtherFloat__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmOtherFloat")]
  public static extern void delete_DcmOtherFloat(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherFloat_ident")]
  public static extern int DcmOtherFloat_ident(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherFloat_getVM")]
  public static extern uint DcmOtherFloat_getVM(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOM_STDAPPLICATIONCONTEXT")]
  public static extern string get_DICOM_STDAPPLICATIONCONTEXT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOM_NET_IMPLEMENTATIONCLASSUID")]
  public static extern string get_DICOM_NET_IMPLEMENTATIONCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOM_NET_IMPLEMENTATIONVERSIONNAME")]
  public static extern string get_DICOM_NET_IMPLEMENTATIONVERSIONNAME();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOM_APPLICATION_ACCEPTOR")]
  public static extern int get_DICOM_APPLICATION_ACCEPTOR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOM_APPLICATION_REQUESTOR")]
  public static extern int get_DICOM_APPLICATION_REQUESTOR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_UI_LEN")]
  public static extern int get_DIC_UI_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_AE_LEN")]
  public static extern int get_DIC_AE_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_SH_LEN")]
  public static extern int get_DIC_SH_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_PN_LEN")]
  public static extern int get_DIC_PN_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_LO_LEN")]
  public static extern int get_DIC_LO_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_CS_LEN")]
  public static extern int get_DIC_CS_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_DS_LEN")]
  public static extern int get_DIC_DS_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_IS_LEN")]
  public static extern int get_DIC_IS_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIC_NODENAME_LEN")]
  public static extern int get_DIC_NODENAME_LEN();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOM_UI_LENGTH")]
  public static extern int get_DICOM_UI_LENGTH();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASC_DEFAULTMAXPDU")]
  public static extern int get_ASC_DEFAULTMAXPDU();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASC_MINIMUMPDUSIZE")]
  public static extern int get_ASC_MINIMUMPDUSIZE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASC_MAXIMUMPDUSIZE")]
  public static extern int get_ASC_MAXIMUMPDUSIZE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Network_role")]
  public static extern void set_T_ASC_Network_role(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Network_role")]
  public static extern int get_T_ASC_Network_role(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Network_acceptorPort")]
  public static extern void set_T_ASC_Network_acceptorPort(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Network_acceptorPort")]
  public static extern int get_T_ASC_Network_acceptorPort(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Network_network")]
  public static extern void set_T_ASC_Network_network(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Network_network")]
  public static extern IntPtr get_T_ASC_Network_network(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_ASC_Network")]
  public static extern IntPtr new_T_ASC_Network();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_ASC_Network")]
  public static extern void delete_T_ASC_Network(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DICOM_MAXTRANSFERSYNTAXES")]
  public static extern int get_DICOM_MAXTRANSFERSYNTAXES();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_presentationContextID")]
  public static extern void set_T_ASC_PresentationContext_presentationContextID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_presentationContextID")]
  public static extern IntPtr get_T_ASC_PresentationContext_presentationContextID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_abstractSyntax")]
  public static extern void set_T_ASC_PresentationContext_abstractSyntax(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_abstractSyntax")]
  public static extern string get_T_ASC_PresentationContext_abstractSyntax(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_transferSyntaxCount")]
  public static extern void set_T_ASC_PresentationContext_transferSyntaxCount(HandleRef jarg1, byte jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_transferSyntaxCount")]
  public static extern byte get_T_ASC_PresentationContext_transferSyntaxCount(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_proposedTransferSyntaxes")]
  public static extern void set_T_ASC_PresentationContext_proposedTransferSyntaxes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_proposedTransferSyntaxes")]
  public static extern IntPtr get_T_ASC_PresentationContext_proposedTransferSyntaxes(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_acceptedTransferSyntax")]
  public static extern void set_T_ASC_PresentationContext_acceptedTransferSyntax(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_acceptedTransferSyntax")]
  public static extern string get_T_ASC_PresentationContext_acceptedTransferSyntax(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_resultReason")]
  public static extern void set_T_ASC_PresentationContext_resultReason(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_resultReason")]
  public static extern int get_T_ASC_PresentationContext_resultReason(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_proposedRole")]
  public static extern void set_T_ASC_PresentationContext_proposedRole(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_proposedRole")]
  public static extern int get_T_ASC_PresentationContext_proposedRole(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_PresentationContext_acceptedRole")]
  public static extern void set_T_ASC_PresentationContext_acceptedRole(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_PresentationContext_acceptedRole")]
  public static extern int get_T_ASC_PresentationContext_acceptedRole(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_ASC_PresentationContext")]
  public static extern IntPtr new_T_ASC_PresentationContext();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_ASC_PresentationContext")]
  public static extern void delete_T_ASC_PresentationContext(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_RejectParameters_result")]
  public static extern void set_T_ASC_RejectParameters_result(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_RejectParameters_result")]
  public static extern int get_T_ASC_RejectParameters_result(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_RejectParameters_source")]
  public static extern void set_T_ASC_RejectParameters_source(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_RejectParameters_source")]
  public static extern int get_T_ASC_RejectParameters_source(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_RejectParameters_reason")]
  public static extern void set_T_ASC_RejectParameters_reason(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_RejectParameters_reason")]
  public static extern int get_T_ASC_RejectParameters_reason(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_ASC_RejectParameters")]
  public static extern IntPtr new_T_ASC_RejectParameters();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_ASC_RejectParameters")]
  public static extern void delete_T_ASC_RejectParameters(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_ourImplementationClassUID")]
  public static extern void set_T_ASC_Parameters_ourImplementationClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_ourImplementationClassUID")]
  public static extern string get_T_ASC_Parameters_ourImplementationClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_ourImplementationVersionName")]
  public static extern void set_T_ASC_Parameters_ourImplementationVersionName(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_ourImplementationVersionName")]
  public static extern string get_T_ASC_Parameters_ourImplementationVersionName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_theirImplementationClassUID")]
  public static extern void set_T_ASC_Parameters_theirImplementationClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_theirImplementationClassUID")]
  public static extern string get_T_ASC_Parameters_theirImplementationClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_theirImplementationVersionName")]
  public static extern void set_T_ASC_Parameters_theirImplementationVersionName(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_theirImplementationVersionName")]
  public static extern string get_T_ASC_Parameters_theirImplementationVersionName(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_modeCallback")]
  public static extern void set_T_ASC_Parameters_modeCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_modeCallback")]
  public static extern IntPtr get_T_ASC_Parameters_modeCallback(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_DULparams")]
  public static extern void set_T_ASC_Parameters_DULparams(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_DULparams")]
  public static extern IntPtr get_T_ASC_Parameters_DULparams(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_ourMaxPDUReceiveSize")]
  public static extern void set_T_ASC_Parameters_ourMaxPDUReceiveSize(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_ourMaxPDUReceiveSize")]
  public static extern int get_T_ASC_Parameters_ourMaxPDUReceiveSize(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Parameters_theirMaxPDUReceiveSize")]
  public static extern void set_T_ASC_Parameters_theirMaxPDUReceiveSize(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Parameters_theirMaxPDUReceiveSize")]
  public static extern int get_T_ASC_Parameters_theirMaxPDUReceiveSize(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_ASC_Parameters")]
  public static extern IntPtr new_T_ASC_Parameters();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_ASC_Parameters")]
  public static extern void delete_T_ASC_Parameters(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Association_DULassociation")]
  public static extern void set_T_ASC_Association_DULassociation(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Association_DULassociation")]
  public static extern IntPtr get_T_ASC_Association_DULassociation(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Association_nextMsgID")]
  public static extern void set_T_ASC_Association_nextMsgID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Association_nextMsgID")]
  public static extern ushort get_T_ASC_Association_nextMsgID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Association_sendPDVLength")]
  public static extern void set_T_ASC_Association_sendPDVLength(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Association_sendPDVLength")]
  public static extern uint get_T_ASC_Association_sendPDVLength(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_ASC_Association_sendPDVBuffer")]
  public static extern void set_T_ASC_Association_sendPDVBuffer(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_ASC_Association_sendPDVBuffer")]
  public static extern IntPtr get_T_ASC_Association_sendPDVBuffer(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_ASC_Association")]
  public static extern IntPtr new_T_ASC_Association();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_ASC_Association")]
  public static extern void delete_T_ASC_Association(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_initializeNetwork__SWIG_0")]
  public static extern IntPtr ASC_initializeNetwork__SWIG_0(int jarg1, int jarg2, int jarg3, HandleRef jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_initializeNetwork__SWIG_1")]
  public static extern IntPtr ASC_initializeNetwork__SWIG_1(int jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_dropNetwork")]
  public static extern IntPtr ASC_dropNetwork(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_createAssociationParameters")]
  public static extern IntPtr ASC_createAssociationParameters(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_destroyAssociationParameters")]
  public static extern IntPtr ASC_destroyAssociationParameters(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_setTransportLayerType")]
  public static extern IntPtr ASC_setTransportLayerType(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_setAPTitles")]
  public static extern IntPtr ASC_setAPTitles(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getAPTitles")]
  public static extern IntPtr ASC_getAPTitles(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getApplicationContextName")]
  public static extern IntPtr ASC_getApplicationContextName(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_setPresentationAddresses")]
  public static extern IntPtr ASC_setPresentationAddresses(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getPresentationAddresses")]
  public static extern IntPtr ASC_getPresentationAddresses(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getRejectParameters")]
  public static extern IntPtr ASC_getRejectParameters(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_printRejectParameters__SWIG_0")]
  public static extern void ASC_printRejectParameters__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_printRejectParameters__SWIG_1")]
  public static extern void ASC_printRejectParameters__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_addPresentationContext__SWIG_0")]
  public static extern IntPtr ASC_addPresentationContext__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3, HandleRef jarg4, int jarg5, int jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_addPresentationContext__SWIG_1")]
  public static extern IntPtr ASC_addPresentationContext__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3, HandleRef jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_countPresentationContexts")]
  public static extern int ASC_countPresentationContexts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_countAcceptedPresentationContexts")]
  public static extern int ASC_countAcceptedPresentationContexts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getPresentationContext")]
  public static extern IntPtr ASC_getPresentationContext(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acceptPresentationContext__SWIG_0")]
  public static extern IntPtr ASC_acceptPresentationContext__SWIG_0(HandleRef jarg1, HandleRef jarg2, string jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acceptPresentationContext__SWIG_1")]
  public static extern IntPtr ASC_acceptPresentationContext__SWIG_1(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acceptContextsWithPreferredTransferSyntaxes__SWIG_0")]
  public static extern IntPtr ASC_acceptContextsWithPreferredTransferSyntaxes__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, int jarg5, int jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acceptContextsWithPreferredTransferSyntaxes__SWIG_1")]
  public static extern IntPtr ASC_acceptContextsWithPreferredTransferSyntaxes__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acceptContextsWithTransferSyntax__SWIG_0")]
  public static extern IntPtr ASC_acceptContextsWithTransferSyntax__SWIG_0(HandleRef jarg1, string jarg2, int jarg3, HandleRef jarg4, int jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acceptContextsWithTransferSyntax__SWIG_1")]
  public static extern IntPtr ASC_acceptContextsWithTransferSyntax__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_refusePresentationContext")]
  public static extern IntPtr ASC_refusePresentationContext(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_findAcceptedPresentationContext")]
  public static extern IntPtr ASC_findAcceptedPresentationContext(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_findAcceptedPresentationContextID__SWIG_0")]
  public static extern IntPtr ASC_findAcceptedPresentationContextID__SWIG_0(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_findAcceptedPresentationContextID__SWIG_1")]
  public static extern IntPtr ASC_findAcceptedPresentationContextID__SWIG_1(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getRequestedExtNegList")]
  public static extern void ASC_getRequestedExtNegList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getAcceptedExtNegList")]
  public static extern void ASC_getAcceptedExtNegList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_setRequestedExtNegList")]
  public static extern void ASC_setRequestedExtNegList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_setAcceptedExtNegList")]
  public static extern void ASC_setAcceptedExtNegList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getPeerCertificateLength")]
  public static extern uint ASC_getPeerCertificateLength(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_getPeerCertificate")]
  public static extern uint ASC_getPeerCertificate(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_setTransportLayer")]
  public static extern IntPtr ASC_setTransportLayer(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_dumpParameters")]
  public static extern void ASC_dumpParameters(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_dumpPresentationContext")]
  public static extern void ASC_dumpPresentationContext(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_dumpConnectionParameters")]
  public static extern void ASC_dumpConnectionParameters(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_activateCallback")]
  public static extern void ASC_activateCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_associationWaiting")]
  public static extern bool ASC_associationWaiting(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_dataWaiting")]
  public static extern bool ASC_dataWaiting(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_selectReadableAssociation")]
  public static extern bool ASC_selectReadableAssociation(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_requestAssociation__SWIG_0")]
  public static extern IntPtr ASC_requestAssociation__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_requestAssociation__SWIG_1")]
  public static extern IntPtr ASC_requestAssociation__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_requestAssociation__SWIG_2")]
  public static extern IntPtr ASC_requestAssociation__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_receiveAssociation__SWIG_0")]
  public static extern IntPtr ASC_receiveAssociation__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6, HandleRef jarg7, int jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_receiveAssociation__SWIG_1")]
  public static extern IntPtr ASC_receiveAssociation__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6, HandleRef jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_receiveAssociation__SWIG_2")]
  public static extern IntPtr ASC_receiveAssociation__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_receiveAssociation__SWIG_3")]
  public static extern IntPtr ASC_receiveAssociation__SWIG_3(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_receiveAssociation__SWIG_4")]
  public static extern IntPtr ASC_receiveAssociation__SWIG_4(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_receiveAssociation__SWIG_5")]
  public static extern IntPtr ASC_receiveAssociation__SWIG_5(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acknowledgeAssociation__SWIG_0")]
  public static extern IntPtr ASC_acknowledgeAssociation__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acknowledgeAssociation__SWIG_1")]
  public static extern IntPtr ASC_acknowledgeAssociation__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acknowledgeAssociation__SWIG_2")]
  public static extern IntPtr ASC_acknowledgeAssociation__SWIG_2(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_rejectAssociation__SWIG_0")]
  public static extern IntPtr ASC_rejectAssociation__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_rejectAssociation__SWIG_1")]
  public static extern IntPtr ASC_rejectAssociation__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_rejectAssociation__SWIG_2")]
  public static extern IntPtr ASC_rejectAssociation__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_releaseAssociation")]
  public static extern IntPtr ASC_releaseAssociation(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_acknowledgeRelease")]
  public static extern IntPtr ASC_acknowledgeRelease(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_abortAssociation")]
  public static extern IntPtr ASC_abortAssociation(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_dropSCPAssociation")]
  public static extern IntPtr ASC_dropSCPAssociation(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_dropAssociation")]
  public static extern IntPtr ASC_dropAssociation(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_ASC_destroyAssociation")]
  public static extern IntPtr ASC_destroyAssociation(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASCC_BADPRESENTATIONCONTEXTID")]
  public static extern ushort get_ASCC_BADPRESENTATIONCONTEXTID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASCC_BADPRESENTATIONCONTEXTPOSITION")]
  public static extern ushort get_ASCC_BADPRESENTATIONCONTEXTPOSITION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASCC_CODINGERROR")]
  public static extern ushort get_ASCC_CODINGERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASCC_DUPLICATEPRESENTATIONCONTEXTID")]
  public static extern ushort get_ASCC_DUPLICATEPRESENTATIONCONTEXTID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASCC_MISSINGTRANSFERSYNTAX")]
  public static extern ushort get_ASCC_MISSINGTRANSFERSYNTAX();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASCC_NULLKEY")]
  public static extern ushort get_ASCC_NULLKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASCC_SHUTDOWNAPPLICATION")]
  public static extern ushort get_ASCC_SHUTDOWNAPPLICATION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASC_BADPRESENTATIONCONTEXTID")]
  public static extern IntPtr get_ASC_BADPRESENTATIONCONTEXTID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASC_MISSINGTRANSFERSYNTAX")]
  public static extern IntPtr get_ASC_MISSINGTRANSFERSYNTAX();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASC_NULLKEY")]
  public static extern IntPtr get_ASC_NULLKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_ASC_SHUTDOWNAPPLICATION")]
  public static extern IntPtr get_ASC_SHUTDOWNAPPLICATION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_BADCOMMANDTYPE")]
  public static extern ushort get_DIMSEC_BADCOMMANDTYPE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_BADDATA")]
  public static extern ushort get_DIMSEC_BADDATA();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_BADMESSAGE")]
  public static extern ushort get_DIMSEC_BADMESSAGE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_BUILDFAILED")]
  public static extern ushort get_DIMSEC_BUILDFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_ILLEGALASSOCIATION")]
  public static extern ushort get_DIMSEC_ILLEGALASSOCIATION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_INVALIDPRESENTATIONCONTEXTID")]
  public static extern ushort get_DIMSEC_INVALIDPRESENTATIONCONTEXTID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_NODATAAVAILABLE")]
  public static extern ushort get_DIMSEC_NODATAAVAILABLE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_NOVALIDPRESENTATIONCONTEXTID")]
  public static extern ushort get_DIMSEC_NOVALIDPRESENTATIONCONTEXTID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_NULLKEY")]
  public static extern ushort get_DIMSEC_NULLKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_OUTOFRESOURCES")]
  public static extern ushort get_DIMSEC_OUTOFRESOURCES();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_PARSEFAILED")]
  public static extern ushort get_DIMSEC_PARSEFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_READPDVFAILED")]
  public static extern ushort get_DIMSEC_READPDVFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_RECEIVEFAILED")]
  public static extern ushort get_DIMSEC_RECEIVEFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_SENDFAILED")]
  public static extern ushort get_DIMSEC_SENDFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_UNEXPECTEDPDVTYPE")]
  public static extern ushort get_DIMSEC_UNEXPECTEDPDVTYPE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_UNEXPECTEDREQUEST")]
  public static extern ushort get_DIMSEC_UNEXPECTEDREQUEST();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_UNEXPECTEDRESPONSE")]
  public static extern ushort get_DIMSEC_UNEXPECTEDRESPONSE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_UNSUPPORTEDTRANSFERSYNTAX")]
  public static extern ushort get_DIMSEC_UNSUPPORTEDTRANSFERSYNTAX();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSEC_NODATADICT")]
  public static extern ushort get_DIMSEC_NODATADICT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_BADCOMMANDTYPE")]
  public static extern IntPtr get_DIMSE_BADCOMMANDTYPE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_BADDATA")]
  public static extern IntPtr get_DIMSE_BADDATA();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_BADMESSAGE")]
  public static extern IntPtr get_DIMSE_BADMESSAGE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_ILLEGALASSOCIATION")]
  public static extern IntPtr get_DIMSE_ILLEGALASSOCIATION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_NODATAAVAILABLE")]
  public static extern IntPtr get_DIMSE_NODATAAVAILABLE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_NOVALIDPRESENTATIONCONTEXTID")]
  public static extern IntPtr get_DIMSE_NOVALIDPRESENTATIONCONTEXTID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_NULLKEY")]
  public static extern IntPtr get_DIMSE_NULLKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_OUTOFRESOURCES")]
  public static extern IntPtr get_DIMSE_OUTOFRESOURCES();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_PARSEFAILED")]
  public static extern IntPtr get_DIMSE_PARSEFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_READPDVFAILED")]
  public static extern IntPtr get_DIMSE_READPDVFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_RECEIVEFAILED")]
  public static extern IntPtr get_DIMSE_RECEIVEFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_SENDFAILED")]
  public static extern IntPtr get_DIMSE_SENDFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_UNEXPECTEDPDVTYPE")]
  public static extern IntPtr get_DIMSE_UNEXPECTEDPDVTYPE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DIMSE_NODATADICT")]
  public static extern IntPtr get_DIMSE_NODATADICT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ASSOCIATIONREJECTED")]
  public static extern ushort get_DULC_ASSOCIATIONREJECTED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_CODINGERROR")]
  public static extern ushort get_DULC_CODINGERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_FSMERROR")]
  public static extern ushort get_DULC_FSMERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALACCEPT")]
  public static extern ushort get_DULC_ILLEGALACCEPT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALKEY")]
  public static extern ushort get_DULC_ILLEGALKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALPARAMETER")]
  public static extern ushort get_DULC_ILLEGALPARAMETER();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALPDU")]
  public static extern ushort get_DULC_ILLEGALPDU();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALPDULENGTH")]
  public static extern ushort get_DULC_ILLEGALPDULENGTH();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALREJECTREASON")]
  public static extern ushort get_DULC_ILLEGALREJECTREASON();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALREJECTRESULT")]
  public static extern ushort get_DULC_ILLEGALREJECTRESULT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALREQUEST")]
  public static extern ushort get_DULC_ILLEGALREQUEST();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_ILLEGALSERVICEPARAMETER")]
  public static extern ushort get_DULC_ILLEGALSERVICEPARAMETER();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_INCORRECTBUFFERLENGTH")]
  public static extern ushort get_DULC_INCORRECTBUFFERLENGTH();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_INSUFFICIENTBUFFERLENGTH")]
  public static extern ushort get_DULC_INSUFFICIENTBUFFERLENGTH();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_LISTERROR")]
  public static extern ushort get_DULC_LISTERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_NETWORKCLOSED")]
  public static extern ushort get_DULC_NETWORKCLOSED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_NOASSOCIATIONREQUEST")]
  public static extern ushort get_DULC_NOASSOCIATIONREQUEST();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_NOPDVS")]
  public static extern ushort get_DULC_NOPDVS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_NULLKEY")]
  public static extern ushort get_DULC_NULLKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_PCTRANSLATIONFAILURE")]
  public static extern ushort get_DULC_PCTRANSLATIONFAILURE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_PDATAPDUARRIVED")]
  public static extern ushort get_DULC_PDATAPDUARRIVED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_PEERABORTEDASSOCIATION")]
  public static extern ushort get_DULC_PEERABORTEDASSOCIATION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_PEERILLEGALXFERSYNTAXCOUNT")]
  public static extern ushort get_DULC_PEERILLEGALXFERSYNTAXCOUNT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_PEERREQUESTEDRELEASE")]
  public static extern ushort get_DULC_PEERREQUESTEDRELEASE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_READTIMEOUT")]
  public static extern ushort get_DULC_READTIMEOUT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_REQUESTASSOCIATIONFAILED")]
  public static extern ushort get_DULC_REQUESTASSOCIATIONFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_TCPINITERROR")]
  public static extern ushort get_DULC_TCPINITERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_TCPIOERROR")]
  public static extern ushort get_DULC_TCPIOERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_TLSERROR")]
  public static extern ushort get_DULC_TLSERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_UNEXPECTEDPDU")]
  public static extern ushort get_DULC_UNEXPECTEDPDU();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_UNKNOWNHOST")]
  public static extern ushort get_DULC_UNKNOWNHOST();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_UNRECOGNIZEDPDUTYPE")]
  public static extern ushort get_DULC_UNRECOGNIZEDPDUTYPE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_UNSUPPORTEDPEERPROTOCOL")]
  public static extern ushort get_DULC_UNSUPPORTEDPEERPROTOCOL();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_WRONGDATATYPE")]
  public static extern ushort get_DULC_WRONGDATATYPE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DULC_TCPWRAPPER")]
  public static extern ushort get_DULC_TCPWRAPPER();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_ASSOCIATIONREJECTED")]
  public static extern IntPtr get_DUL_ASSOCIATIONREJECTED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_ILLEGALACCEPT")]
  public static extern IntPtr get_DUL_ILLEGALACCEPT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_ILLEGALKEY")]
  public static extern IntPtr get_DUL_ILLEGALKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_ILLEGALPDU")]
  public static extern IntPtr get_DUL_ILLEGALPDU();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_ILLEGALPDULENGTH")]
  public static extern IntPtr get_DUL_ILLEGALPDULENGTH();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_ILLEGALREQUEST")]
  public static extern IntPtr get_DUL_ILLEGALREQUEST();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_INCORRECTBUFFERLENGTH")]
  public static extern IntPtr get_DUL_INCORRECTBUFFERLENGTH();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_INSUFFICIENTBUFFERLENGTH")]
  public static extern IntPtr get_DUL_INSUFFICIENTBUFFERLENGTH();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_LISTERROR")]
  public static extern IntPtr get_DUL_LISTERROR();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_NETWORKCLOSED")]
  public static extern IntPtr get_DUL_NETWORKCLOSED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_NOASSOCIATIONREQUEST")]
  public static extern IntPtr get_DUL_NOASSOCIATIONREQUEST();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_NOPDVS")]
  public static extern IntPtr get_DUL_NOPDVS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_NULLKEY")]
  public static extern IntPtr get_DUL_NULLKEY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_PCTRANSLATIONFAILURE")]
  public static extern IntPtr get_DUL_PCTRANSLATIONFAILURE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_PDATAPDUARRIVED")]
  public static extern IntPtr get_DUL_PDATAPDUARRIVED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_PEERABORTEDASSOCIATION")]
  public static extern IntPtr get_DUL_PEERABORTEDASSOCIATION();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_PEERREQUESTEDRELEASE")]
  public static extern IntPtr get_DUL_PEERREQUESTEDRELEASE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_READTIMEOUT")]
  public static extern IntPtr get_DUL_READTIMEOUT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_REQUESTASSOCIATIONFAILED")]
  public static extern IntPtr get_DUL_REQUESTASSOCIATIONFAILED();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_UNEXPECTEDPDU")]
  public static extern IntPtr get_DUL_UNEXPECTEDPDU();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_UNSUPPORTEDPEERPROTOCOL")]
  public static extern IntPtr get_DUL_UNSUPPORTEDPEERPROTOCOL();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_DUL_WRONGDATATYPE")]
  public static extern IntPtr get_DUL_WRONGDATATYPE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DimseCondition_dump__SWIG_0")]
  public static extern void DimseCondition_dump__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DimseCondition_dump__SWIG_1")]
  public static extern void DimseCondition_dump__SWIG_1(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DimseCondition_push__SWIG_0")]
  public static extern IntPtr DimseCondition_push__SWIG_0(ushort jarg1, ushort jarg2, int jarg3, string jarg4, HandleRef jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DimseCondition_push__SWIG_1")]
  public static extern IntPtr DimseCondition_push__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DimseCondition")]
  public static extern IntPtr new_DimseCondition();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DimseCondition")]
  public static extern void delete_DimseCondition(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfigurationFile_initialize")]
  public static extern IntPtr DcmAssociationConfigurationFile_initialize(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAssociationConfigurationFile")]
  public static extern IntPtr new_DcmAssociationConfigurationFile();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmAssociationConfigurationFile")]
  public static extern void delete_DcmAssociationConfigurationFile(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_DcmAssociationConfiguration")]
  public static extern IntPtr new_DcmAssociationConfiguration();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_DcmAssociationConfiguration")]
  public static extern void delete_DcmAssociationConfiguration(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_setAssociationParameters")]
  public static extern IntPtr DcmAssociationConfiguration_setAssociationParameters(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_evaluateAssociationParameters")]
  public static extern IntPtr DcmAssociationConfiguration_evaluateAssociationParameters(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_addTransferSyntax")]
  public static extern IntPtr DcmAssociationConfiguration_addTransferSyntax(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_addPresentationContext")]
  public static extern IntPtr DcmAssociationConfiguration_addPresentationContext(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_addRole")]
  public static extern IntPtr DcmAssociationConfiguration_addRole(HandleRef jarg1, string jarg2, string jarg3, int jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_addExtendedNegotiation")]
  public static extern IntPtr DcmAssociationConfiguration_addExtendedNegotiation(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, uint jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_addProfile__SWIG_0")]
  public static extern IntPtr DcmAssociationConfiguration_addProfile__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_addProfile__SWIG_1")]
  public static extern IntPtr DcmAssociationConfiguration_addProfile__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_addProfile__SWIG_2")]
  public static extern IntPtr DcmAssociationConfiguration_addProfile__SWIG_2(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_isKnownProfile")]
  public static extern bool DcmAssociationConfiguration_isKnownProfile(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAssociationConfiguration_isValidSCPProfile")]
  public static extern bool DcmAssociationConfiguration_isValidSCPProfile(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_dcmPeerRequiresExactUIDCopy")]
  public static extern void set_dcmPeerRequiresExactUIDCopy(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmPeerRequiresExactUIDCopy")]
  public static extern IntPtr get_dcmPeerRequiresExactUIDCopy();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_dcmMaxOutgoingPDUSize")]
  public static extern void set_dcmMaxOutgoingPDUSize(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_dcmMaxOutgoingPDUSize")]
  public static extern IntPtr get_dcmMaxOutgoingPDUSize();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_Success")]
  public static extern int get_STATUS_Success();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_Pending")]
  public static extern int get_STATUS_Pending();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_STORE_Refused_OutOfResources")]
  public static extern int get_STATUS_STORE_Refused_OutOfResources();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_STORE_Refused_SOPClassNotSupported")]
  public static extern int get_STATUS_STORE_Refused_SOPClassNotSupported();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_STORE_Error_DataSetDoesNotMatchSOPClass")]
  public static extern int get_STATUS_STORE_Error_DataSetDoesNotMatchSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_STORE_Error_CannotUnderstand")]
  public static extern int get_STATUS_STORE_Error_CannotUnderstand();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_STORE_Warning_CoersionOfDataElements")]
  public static extern int get_STATUS_STORE_Warning_CoersionOfDataElements();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_STORE_Warning_DataSetDoesNotMatchSOPClass")]
  public static extern int get_STATUS_STORE_Warning_DataSetDoesNotMatchSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_STORE_Warning_ElementsDiscarded")]
  public static extern int get_STATUS_STORE_Warning_ElementsDiscarded();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_FIND_Refused_OutOfResources")]
  public static extern int get_STATUS_FIND_Refused_OutOfResources();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_FIND_Refused_SOPClassNotSupported")]
  public static extern int get_STATUS_FIND_Refused_SOPClassNotSupported();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_FIND_Failed_IdentifierDoesNotMatchSOPClass")]
  public static extern int get_STATUS_FIND_Failed_IdentifierDoesNotMatchSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_FIND_Failed_UnableToProcess")]
  public static extern int get_STATUS_FIND_Failed_UnableToProcess();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_FIND_Cancel_MatchingTerminatedDueToCancelRequest")]
  public static extern int get_STATUS_FIND_Cancel_MatchingTerminatedDueToCancelRequest();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_FIND_Pending_WarningUnsupportedOptionalKeys")]
  public static extern int get_STATUS_FIND_Pending_WarningUnsupportedOptionalKeys();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Refused_OutOfResourcesNumberOfMatches")]
  public static extern int get_STATUS_MOVE_Refused_OutOfResourcesNumberOfMatches();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Refused_OutOfResourcesSubOperations")]
  public static extern int get_STATUS_MOVE_Refused_OutOfResourcesSubOperations();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Failed_SOPClassNotSupported")]
  public static extern int get_STATUS_MOVE_Failed_SOPClassNotSupported();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Failed_MoveDestinationUnknown")]
  public static extern int get_STATUS_MOVE_Failed_MoveDestinationUnknown();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Failed_IdentifierDoesNotMatchSOPClass")]
  public static extern int get_STATUS_MOVE_Failed_IdentifierDoesNotMatchSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Failed_UnableToProcess")]
  public static extern int get_STATUS_MOVE_Failed_UnableToProcess();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Cancel_SubOperationsTerminatedDueToCancelIndication")]
  public static extern int get_STATUS_MOVE_Cancel_SubOperationsTerminatedDueToCancelIndication();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_MOVE_Warning_SubOperationsCompleteOneOrMoreFailures")]
  public static extern int get_STATUS_MOVE_Warning_SubOperationsCompleteOneOrMoreFailures();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_GET_Refused_OutOfResourcesNumberOfMatches")]
  public static extern int get_STATUS_GET_Refused_OutOfResourcesNumberOfMatches();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_GET_Refused_OutOfResourcesSubOperations")]
  public static extern int get_STATUS_GET_Refused_OutOfResourcesSubOperations();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_GET_Failed_SOPClassNotSupported")]
  public static extern int get_STATUS_GET_Failed_SOPClassNotSupported();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_GET_Failed_IdentifierDoesNotMatchSOPClass")]
  public static extern int get_STATUS_GET_Failed_IdentifierDoesNotMatchSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_GET_Failed_UnableToProcess")]
  public static extern int get_STATUS_GET_Failed_UnableToProcess();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_GET_Cancel_SubOperationsTerminatedDueToCancelIndication")]
  public static extern int get_STATUS_GET_Cancel_SubOperationsTerminatedDueToCancelIndication();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_GET_Warning_SubOperationsCompleteOneOrMoreFailures")]
  public static extern int get_STATUS_GET_Warning_SubOperationsCompleteOneOrMoreFailures();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_Cancel")]
  public static extern int get_STATUS_N_Cancel();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_AttributeListError")]
  public static extern int get_STATUS_N_AttributeListError();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_SOPClassNotSupported")]
  public static extern int get_STATUS_N_SOPClassNotSupported();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_ClassInstanceConflict")]
  public static extern int get_STATUS_N_ClassInstanceConflict();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_DuplicateSOPInstance")]
  public static extern int get_STATUS_N_DuplicateSOPInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_DuplicateInvocation")]
  public static extern int get_STATUS_N_DuplicateInvocation();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_InvalidArgumentValue")]
  public static extern int get_STATUS_N_InvalidArgumentValue();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_InvalidAttributeValue")]
  public static extern int get_STATUS_N_InvalidAttributeValue();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_InvalidObjectInstance")]
  public static extern int get_STATUS_N_InvalidObjectInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_MissingAttribute")]
  public static extern int get_STATUS_N_MissingAttribute();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_MissingAttributeValue")]
  public static extern int get_STATUS_N_MissingAttributeValue();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_MistypedArgument")]
  public static extern int get_STATUS_N_MistypedArgument();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_NoSuchArgument")]
  public static extern int get_STATUS_N_NoSuchArgument();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_NoSuchAttribute")]
  public static extern int get_STATUS_N_NoSuchAttribute();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_NoSuchEventType")]
  public static extern int get_STATUS_N_NoSuchEventType();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_NoSuchObjectInstance")]
  public static extern int get_STATUS_N_NoSuchObjectInstance();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_NoSuchSOPClass")]
  public static extern int get_STATUS_N_NoSuchSOPClass();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_ProcessingFailure")]
  public static extern int get_STATUS_N_ProcessingFailure();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_ResourceLimitation")]
  public static extern int get_STATUS_N_ResourceLimitation();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_UnrecognizedOperation")]
  public static extern int get_STATUS_N_UnrecognizedOperation();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFS_Warn_MemoryAllocation")]
  public static extern int get_STATUS_N_PRINT_BFS_Warn_MemoryAllocation();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFS_Warn_NoSessionPrinting")]
  public static extern int get_STATUS_N_PRINT_BFS_Warn_NoSessionPrinting();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFS_Warn_EmptyPage")]
  public static extern int get_STATUS_N_PRINT_BFS_Warn_EmptyPage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFB_Warn_EmptyPage")]
  public static extern int get_STATUS_N_PRINT_BFB_Warn_EmptyPage();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFS_Fail_NoFilmBox")]
  public static extern int get_STATUS_N_PRINT_BFS_Fail_NoFilmBox();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFS_Fail_PrintQueueFull")]
  public static extern int get_STATUS_N_PRINT_BFS_Fail_PrintQueueFull();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BSB_Fail_PrintQueueFull")]
  public static extern int get_STATUS_N_PRINT_BSB_Fail_PrintQueueFull();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFS_BFB_Fail_ImageSize")]
  public static extern int get_STATUS_N_PRINT_BFS_BFB_Fail_ImageSize();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_BFS_BFB_Fail_PositionCollision")]
  public static extern int get_STATUS_N_PRINT_BFS_BFB_Fail_PositionCollision();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_IB_Fail_InsufficientMemory")]
  public static extern int get_STATUS_N_PRINT_IB_Fail_InsufficientMemory();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_STATUS_N_PRINT_IB_Fail_MoreThanOneVOILUT")]
  public static extern int get_STATUS_N_PRINT_IB_Fail_MoreThanOneVOILUT();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_MessageID")]
  public static extern void set_T_DIMSE_C_StoreRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_MessageID")]
  public static extern ushort get_T_DIMSE_C_StoreRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_StoreRQ_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_StoreRQ_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_Priority")]
  public static extern void set_T_DIMSE_C_StoreRQ_Priority(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_Priority")]
  public static extern int get_T_DIMSE_C_StoreRQ_Priority(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_DataSetType")]
  public static extern void set_T_DIMSE_C_StoreRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_DataSetType")]
  public static extern int get_T_DIMSE_C_StoreRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_C_StoreRQ_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_C_StoreRQ_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_MoveOriginatorApplicationEntityTitle")]
  public static extern void set_T_DIMSE_C_StoreRQ_MoveOriginatorApplicationEntityTitle(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_MoveOriginatorApplicationEntityTitle")]
  public static extern string get_T_DIMSE_C_StoreRQ_MoveOriginatorApplicationEntityTitle(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_MoveOriginatorID")]
  public static extern void set_T_DIMSE_C_StoreRQ_MoveOriginatorID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_MoveOriginatorID")]
  public static extern ushort get_T_DIMSE_C_StoreRQ_MoveOriginatorID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRQ_opts")]
  public static extern void set_T_DIMSE_C_StoreRQ_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRQ_opts")]
  public static extern uint get_T_DIMSE_C_StoreRQ_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_STORE_MOVEORIGINATORAETITLE")]
  public static extern int get_O_STORE_MOVEORIGINATORAETITLE();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_STORE_MOVEORIGINATORID")]
  public static extern int get_O_STORE_MOVEORIGINATORID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_STORE_RQ_BLANK_PADDING")]
  public static extern int get_O_STORE_RQ_BLANK_PADDING();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_StoreRQ")]
  public static extern IntPtr new_T_DIMSE_C_StoreRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_StoreRQ")]
  public static extern void delete_T_DIMSE_C_StoreRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_C_StoreRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_C_StoreRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_StoreRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_StoreRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRSP_DataSetType")]
  public static extern void set_T_DIMSE_C_StoreRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRSP_DataSetType")]
  public static extern int get_T_DIMSE_C_StoreRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRSP_DimseStatus")]
  public static extern void set_T_DIMSE_C_StoreRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_C_StoreRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRSP_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_C_StoreRSP_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRSP_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_C_StoreRSP_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_StoreRSP_opts")]
  public static extern void set_T_DIMSE_C_StoreRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_StoreRSP_opts")]
  public static extern uint get_T_DIMSE_C_StoreRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_STORE_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_STORE_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_STORE_AFFECTEDSOPINSTANCEUID")]
  public static extern int get_O_STORE_AFFECTEDSOPINSTANCEUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_STORE_PEER_REQUIRES_EXACT_UID_COPY")]
  public static extern int get_O_STORE_PEER_REQUIRES_EXACT_UID_COPY();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_STORE_RSP_BLANK_PADDING")]
  public static extern int get_O_STORE_RSP_BLANK_PADDING();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_StoreRSP")]
  public static extern IntPtr new_T_DIMSE_C_StoreRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_StoreRSP")]
  public static extern void delete_T_DIMSE_C_StoreRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRQ_MessageID")]
  public static extern void set_T_DIMSE_C_EchoRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRQ_MessageID")]
  public static extern ushort get_T_DIMSE_C_EchoRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRQ_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_EchoRQ_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRQ_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_EchoRQ_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRQ_DataSetType")]
  public static extern void set_T_DIMSE_C_EchoRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRQ_DataSetType")]
  public static extern int get_T_DIMSE_C_EchoRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_EchoRQ")]
  public static extern IntPtr new_T_DIMSE_C_EchoRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_EchoRQ")]
  public static extern void delete_T_DIMSE_C_EchoRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_C_EchoRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_C_EchoRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_EchoRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_EchoRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRSP_DataSetType")]
  public static extern void set_T_DIMSE_C_EchoRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRSP_DataSetType")]
  public static extern int get_T_DIMSE_C_EchoRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRSP_DimseStatus")]
  public static extern void set_T_DIMSE_C_EchoRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_C_EchoRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_EchoRSP_opts")]
  public static extern void set_T_DIMSE_C_EchoRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_EchoRSP_opts")]
  public static extern uint get_T_DIMSE_C_EchoRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_ECHO_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_ECHO_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_EchoRSP")]
  public static extern IntPtr new_T_DIMSE_C_EchoRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_EchoRSP")]
  public static extern void delete_T_DIMSE_C_EchoRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRQ_MessageID")]
  public static extern void set_T_DIMSE_C_FindRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRQ_MessageID")]
  public static extern ushort get_T_DIMSE_C_FindRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRQ_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_FindRQ_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRQ_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_FindRQ_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRQ_Priority")]
  public static extern void set_T_DIMSE_C_FindRQ_Priority(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRQ_Priority")]
  public static extern int get_T_DIMSE_C_FindRQ_Priority(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRQ_DataSetType")]
  public static extern void set_T_DIMSE_C_FindRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRQ_DataSetType")]
  public static extern int get_T_DIMSE_C_FindRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_FindRQ")]
  public static extern IntPtr new_T_DIMSE_C_FindRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_FindRQ")]
  public static extern void delete_T_DIMSE_C_FindRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_C_FindRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_C_FindRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_FindRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_FindRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRSP_DataSetType")]
  public static extern void set_T_DIMSE_C_FindRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRSP_DataSetType")]
  public static extern int get_T_DIMSE_C_FindRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRSP_DimseStatus")]
  public static extern void set_T_DIMSE_C_FindRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_C_FindRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_FindRSP_opts")]
  public static extern void set_T_DIMSE_C_FindRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_FindRSP_opts")]
  public static extern uint get_T_DIMSE_C_FindRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_FIND_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_FIND_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_FindRSP")]
  public static extern IntPtr new_T_DIMSE_C_FindRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_FindRSP")]
  public static extern void delete_T_DIMSE_C_FindRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRQ_MessageID")]
  public static extern void set_T_DIMSE_C_GetRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRQ_MessageID")]
  public static extern ushort get_T_DIMSE_C_GetRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRQ_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_GetRQ_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRQ_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_GetRQ_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRQ_Priority")]
  public static extern void set_T_DIMSE_C_GetRQ_Priority(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRQ_Priority")]
  public static extern int get_T_DIMSE_C_GetRQ_Priority(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRQ_DataSetType")]
  public static extern void set_T_DIMSE_C_GetRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRQ_DataSetType")]
  public static extern int get_T_DIMSE_C_GetRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_GetRQ")]
  public static extern IntPtr new_T_DIMSE_C_GetRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_GetRQ")]
  public static extern void delete_T_DIMSE_C_GetRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_C_GetRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_C_GetRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_GetRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_GetRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_DataSetType")]
  public static extern void set_T_DIMSE_C_GetRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_DataSetType")]
  public static extern int get_T_DIMSE_C_GetRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_DimseStatus")]
  public static extern void set_T_DIMSE_C_GetRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_C_GetRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_NumberOfRemainingSubOperations")]
  public static extern void set_T_DIMSE_C_GetRSP_NumberOfRemainingSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_NumberOfRemainingSubOperations")]
  public static extern ushort get_T_DIMSE_C_GetRSP_NumberOfRemainingSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_NumberOfCompletedSubOperations")]
  public static extern void set_T_DIMSE_C_GetRSP_NumberOfCompletedSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_NumberOfCompletedSubOperations")]
  public static extern ushort get_T_DIMSE_C_GetRSP_NumberOfCompletedSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_NumberOfFailedSubOperations")]
  public static extern void set_T_DIMSE_C_GetRSP_NumberOfFailedSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_NumberOfFailedSubOperations")]
  public static extern ushort get_T_DIMSE_C_GetRSP_NumberOfFailedSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_NumberOfWarningSubOperations")]
  public static extern void set_T_DIMSE_C_GetRSP_NumberOfWarningSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_NumberOfWarningSubOperations")]
  public static extern ushort get_T_DIMSE_C_GetRSP_NumberOfWarningSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_GetRSP_opts")]
  public static extern void set_T_DIMSE_C_GetRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_GetRSP_opts")]
  public static extern uint get_T_DIMSE_C_GetRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_GET_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_GET_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_GET_NUMBEROFREMAININGSUBOPERATIONS")]
  public static extern int get_O_GET_NUMBEROFREMAININGSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_GET_NUMBEROFCOMPLETEDSUBOPERATIONS")]
  public static extern int get_O_GET_NUMBEROFCOMPLETEDSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_GET_NUMBEROFFAILEDSUBOPERATIONS")]
  public static extern int get_O_GET_NUMBEROFFAILEDSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_GET_NUMBEROFWARNINGSUBOPERATIONS")]
  public static extern int get_O_GET_NUMBEROFWARNINGSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_GetRSP")]
  public static extern IntPtr new_T_DIMSE_C_GetRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_GetRSP")]
  public static extern void delete_T_DIMSE_C_GetRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRQ_MessageID")]
  public static extern void set_T_DIMSE_C_MoveRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRQ_MessageID")]
  public static extern ushort get_T_DIMSE_C_MoveRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRQ_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_MoveRQ_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRQ_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_MoveRQ_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRQ_Priority")]
  public static extern void set_T_DIMSE_C_MoveRQ_Priority(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRQ_Priority")]
  public static extern int get_T_DIMSE_C_MoveRQ_Priority(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRQ_DataSetType")]
  public static extern void set_T_DIMSE_C_MoveRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRQ_DataSetType")]
  public static extern int get_T_DIMSE_C_MoveRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRQ_MoveDestination")]
  public static extern void set_T_DIMSE_C_MoveRQ_MoveDestination(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRQ_MoveDestination")]
  public static extern string get_T_DIMSE_C_MoveRQ_MoveDestination(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_MoveRQ")]
  public static extern IntPtr new_T_DIMSE_C_MoveRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_MoveRQ")]
  public static extern void delete_T_DIMSE_C_MoveRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_C_MoveRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_C_MoveRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_C_MoveRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_C_MoveRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_DataSetType")]
  public static extern void set_T_DIMSE_C_MoveRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_DataSetType")]
  public static extern int get_T_DIMSE_C_MoveRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_DimseStatus")]
  public static extern void set_T_DIMSE_C_MoveRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_C_MoveRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_NumberOfRemainingSubOperations")]
  public static extern void set_T_DIMSE_C_MoveRSP_NumberOfRemainingSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_NumberOfRemainingSubOperations")]
  public static extern ushort get_T_DIMSE_C_MoveRSP_NumberOfRemainingSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_NumberOfCompletedSubOperations")]
  public static extern void set_T_DIMSE_C_MoveRSP_NumberOfCompletedSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_NumberOfCompletedSubOperations")]
  public static extern ushort get_T_DIMSE_C_MoveRSP_NumberOfCompletedSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_NumberOfFailedSubOperations")]
  public static extern void set_T_DIMSE_C_MoveRSP_NumberOfFailedSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_NumberOfFailedSubOperations")]
  public static extern ushort get_T_DIMSE_C_MoveRSP_NumberOfFailedSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_NumberOfWarningSubOperations")]
  public static extern void set_T_DIMSE_C_MoveRSP_NumberOfWarningSubOperations(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_NumberOfWarningSubOperations")]
  public static extern ushort get_T_DIMSE_C_MoveRSP_NumberOfWarningSubOperations(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_MoveRSP_opts")]
  public static extern void set_T_DIMSE_C_MoveRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_MoveRSP_opts")]
  public static extern uint get_T_DIMSE_C_MoveRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_MOVE_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_MOVE_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_MOVE_NUMBEROFREMAININGSUBOPERATIONS")]
  public static extern int get_O_MOVE_NUMBEROFREMAININGSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_MOVE_NUMBEROFCOMPLETEDSUBOPERATIONS")]
  public static extern int get_O_MOVE_NUMBEROFCOMPLETEDSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_MOVE_NUMBEROFFAILEDSUBOPERATIONS")]
  public static extern int get_O_MOVE_NUMBEROFFAILEDSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_MOVE_NUMBEROFWARNINGSUBOPERATIONS")]
  public static extern int get_O_MOVE_NUMBEROFWARNINGSUBOPERATIONS();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_MoveRSP")]
  public static extern IntPtr new_T_DIMSE_C_MoveRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_MoveRSP")]
  public static extern void delete_T_DIMSE_C_MoveRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_CancelRQ_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_C_CancelRQ_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_CancelRQ_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_C_CancelRQ_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_C_CancelRQ_DataSetType")]
  public static extern void set_T_DIMSE_C_CancelRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_C_CancelRQ_DataSetType")]
  public static extern int get_T_DIMSE_C_CancelRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_C_CancelRQ")]
  public static extern IntPtr new_T_DIMSE_C_CancelRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_C_CancelRQ")]
  public static extern void delete_T_DIMSE_C_CancelRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRQ_MessageID")]
  public static extern void set_T_DIMSE_N_EventReportRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRQ_MessageID")]
  public static extern ushort get_T_DIMSE_N_EventReportRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRQ_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_EventReportRQ_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRQ_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_EventReportRQ_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRQ_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_EventReportRQ_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRQ_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_EventReportRQ_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRQ_DataSetType")]
  public static extern void set_T_DIMSE_N_EventReportRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRQ_DataSetType")]
  public static extern int get_T_DIMSE_N_EventReportRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRQ_EventTypeID")]
  public static extern void set_T_DIMSE_N_EventReportRQ_EventTypeID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRQ_EventTypeID")]
  public static extern ushort get_T_DIMSE_N_EventReportRQ_EventTypeID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_EventReportRQ")]
  public static extern IntPtr new_T_DIMSE_N_EventReportRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_EventReportRQ")]
  public static extern void delete_T_DIMSE_N_EventReportRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_N_EventReportRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_N_EventReportRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_EventReportRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_EventReportRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRSP_DimseStatus")]
  public static extern void set_T_DIMSE_N_EventReportRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_N_EventReportRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRSP_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_EventReportRSP_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRSP_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_EventReportRSP_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRSP_DataSetType")]
  public static extern void set_T_DIMSE_N_EventReportRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRSP_DataSetType")]
  public static extern int get_T_DIMSE_N_EventReportRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRSP_EventTypeID")]
  public static extern void set_T_DIMSE_N_EventReportRSP_EventTypeID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRSP_EventTypeID")]
  public static extern ushort get_T_DIMSE_N_EventReportRSP_EventTypeID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_EventReportRSP_opts")]
  public static extern void set_T_DIMSE_N_EventReportRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_EventReportRSP_opts")]
  public static extern uint get_T_DIMSE_N_EventReportRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NEVENTREPORT_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_NEVENTREPORT_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NEVENTREPORT_AFFECTEDSOPINSTANCEUID")]
  public static extern int get_O_NEVENTREPORT_AFFECTEDSOPINSTANCEUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NEVENTREPORT_EVENTTYPEID")]
  public static extern int get_O_NEVENTREPORT_EVENTTYPEID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_EventReportRSP")]
  public static extern IntPtr new_T_DIMSE_N_EventReportRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_EventReportRSP")]
  public static extern void delete_T_DIMSE_N_EventReportRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRQ_MessageID")]
  public static extern void set_T_DIMSE_N_GetRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRQ_MessageID")]
  public static extern ushort get_T_DIMSE_N_GetRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRQ_RequestedSOPClassUID")]
  public static extern void set_T_DIMSE_N_GetRQ_RequestedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRQ_RequestedSOPClassUID")]
  public static extern string get_T_DIMSE_N_GetRQ_RequestedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRQ_RequestedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_GetRQ_RequestedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRQ_RequestedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_GetRQ_RequestedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRQ_DataSetType")]
  public static extern void set_T_DIMSE_N_GetRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRQ_DataSetType")]
  public static extern int get_T_DIMSE_N_GetRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRQ_ListCount")]
  public static extern void set_T_DIMSE_N_GetRQ_ListCount(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRQ_ListCount")]
  public static extern int get_T_DIMSE_N_GetRQ_ListCount(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_GetRQ")]
  public static extern IntPtr new_T_DIMSE_N_GetRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_GetRQ")]
  public static extern void delete_T_DIMSE_N_GetRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_N_GetRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_N_GetRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_GetRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_GetRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRSP_DimseStatus")]
  public static extern void set_T_DIMSE_N_GetRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_N_GetRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRSP_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_GetRSP_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRSP_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_GetRSP_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRSP_DataSetType")]
  public static extern void set_T_DIMSE_N_GetRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRSP_DataSetType")]
  public static extern int get_T_DIMSE_N_GetRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_GetRSP_opts")]
  public static extern void set_T_DIMSE_N_GetRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_GetRSP_opts")]
  public static extern uint get_T_DIMSE_N_GetRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NGET_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_NGET_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NGET_AFFECTEDSOPINSTANCEUID")]
  public static extern int get_O_NGET_AFFECTEDSOPINSTANCEUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_GetRSP")]
  public static extern IntPtr new_T_DIMSE_N_GetRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_GetRSP")]
  public static extern void delete_T_DIMSE_N_GetRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRQ_MessageID")]
  public static extern void set_T_DIMSE_N_SetRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRQ_MessageID")]
  public static extern ushort get_T_DIMSE_N_SetRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRQ_RequestedSOPClassUID")]
  public static extern void set_T_DIMSE_N_SetRQ_RequestedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRQ_RequestedSOPClassUID")]
  public static extern string get_T_DIMSE_N_SetRQ_RequestedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRQ_RequestedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_SetRQ_RequestedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRQ_RequestedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_SetRQ_RequestedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRQ_DataSetType")]
  public static extern void set_T_DIMSE_N_SetRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRQ_DataSetType")]
  public static extern int get_T_DIMSE_N_SetRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_SetRQ")]
  public static extern IntPtr new_T_DIMSE_N_SetRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_SetRQ")]
  public static extern void delete_T_DIMSE_N_SetRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_N_SetRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_N_SetRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_SetRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_SetRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRSP_DimseStatus")]
  public static extern void set_T_DIMSE_N_SetRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_N_SetRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRSP_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_SetRSP_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRSP_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_SetRSP_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRSP_DataSetType")]
  public static extern void set_T_DIMSE_N_SetRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRSP_DataSetType")]
  public static extern int get_T_DIMSE_N_SetRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_SetRSP_opts")]
  public static extern void set_T_DIMSE_N_SetRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_SetRSP_opts")]
  public static extern uint get_T_DIMSE_N_SetRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NSET_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_NSET_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NSET_AFFECTEDSOPINSTANCEUID")]
  public static extern int get_O_NSET_AFFECTEDSOPINSTANCEUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_SetRSP")]
  public static extern IntPtr new_T_DIMSE_N_SetRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_SetRSP")]
  public static extern void delete_T_DIMSE_N_SetRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRQ_MessageID")]
  public static extern void set_T_DIMSE_N_ActionRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRQ_MessageID")]
  public static extern ushort get_T_DIMSE_N_ActionRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRQ_RequestedSOPClassUID")]
  public static extern void set_T_DIMSE_N_ActionRQ_RequestedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRQ_RequestedSOPClassUID")]
  public static extern string get_T_DIMSE_N_ActionRQ_RequestedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRQ_RequestedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_ActionRQ_RequestedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRQ_RequestedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_ActionRQ_RequestedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRQ_ActionTypeID")]
  public static extern void set_T_DIMSE_N_ActionRQ_ActionTypeID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRQ_ActionTypeID")]
  public static extern ushort get_T_DIMSE_N_ActionRQ_ActionTypeID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRQ_DataSetType")]
  public static extern void set_T_DIMSE_N_ActionRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRQ_DataSetType")]
  public static extern int get_T_DIMSE_N_ActionRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_ActionRQ")]
  public static extern IntPtr new_T_DIMSE_N_ActionRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_ActionRQ")]
  public static extern void delete_T_DIMSE_N_ActionRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_N_ActionRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_N_ActionRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_ActionRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_ActionRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRSP_DimseStatus")]
  public static extern void set_T_DIMSE_N_ActionRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_N_ActionRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRSP_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_ActionRSP_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRSP_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_ActionRSP_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRSP_ActionTypeID")]
  public static extern void set_T_DIMSE_N_ActionRSP_ActionTypeID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRSP_ActionTypeID")]
  public static extern ushort get_T_DIMSE_N_ActionRSP_ActionTypeID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRSP_DataSetType")]
  public static extern void set_T_DIMSE_N_ActionRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRSP_DataSetType")]
  public static extern int get_T_DIMSE_N_ActionRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_ActionRSP_opts")]
  public static extern void set_T_DIMSE_N_ActionRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_ActionRSP_opts")]
  public static extern uint get_T_DIMSE_N_ActionRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NACTION_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_NACTION_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NACTION_AFFECTEDSOPINSTANCEUID")]
  public static extern int get_O_NACTION_AFFECTEDSOPINSTANCEUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NACTION_ACTIONTYPEID")]
  public static extern int get_O_NACTION_ACTIONTYPEID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_ActionRSP")]
  public static extern IntPtr new_T_DIMSE_N_ActionRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_ActionRSP")]
  public static extern void delete_T_DIMSE_N_ActionRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRQ_MessageID")]
  public static extern void set_T_DIMSE_N_CreateRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRQ_MessageID")]
  public static extern ushort get_T_DIMSE_N_CreateRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRQ_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_CreateRQ_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRQ_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_CreateRQ_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRQ_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_CreateRQ_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRQ_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_CreateRQ_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRQ_DataSetType")]
  public static extern void set_T_DIMSE_N_CreateRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRQ_DataSetType")]
  public static extern int get_T_DIMSE_N_CreateRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRQ_opts")]
  public static extern void set_T_DIMSE_N_CreateRQ_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRQ_opts")]
  public static extern uint get_T_DIMSE_N_CreateRQ_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NCREATE_AFFECTEDSOPINSTANCEUID")]
  public static extern int get_O_NCREATE_AFFECTEDSOPINSTANCEUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_CreateRQ")]
  public static extern IntPtr new_T_DIMSE_N_CreateRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_CreateRQ")]
  public static extern void delete_T_DIMSE_N_CreateRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_N_CreateRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_N_CreateRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_CreateRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_CreateRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRSP_DimseStatus")]
  public static extern void set_T_DIMSE_N_CreateRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_N_CreateRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRSP_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_CreateRSP_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRSP_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_CreateRSP_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRSP_DataSetType")]
  public static extern void set_T_DIMSE_N_CreateRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRSP_DataSetType")]
  public static extern int get_T_DIMSE_N_CreateRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_CreateRSP_opts")]
  public static extern void set_T_DIMSE_N_CreateRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_CreateRSP_opts")]
  public static extern uint get_T_DIMSE_N_CreateRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NCREATE_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_NCREATE_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_CreateRSP")]
  public static extern IntPtr new_T_DIMSE_N_CreateRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_CreateRSP")]
  public static extern void delete_T_DIMSE_N_CreateRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRQ_MessageID")]
  public static extern void set_T_DIMSE_N_DeleteRQ_MessageID(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRQ_MessageID")]
  public static extern ushort get_T_DIMSE_N_DeleteRQ_MessageID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRQ_RequestedSOPClassUID")]
  public static extern void set_T_DIMSE_N_DeleteRQ_RequestedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRQ_RequestedSOPClassUID")]
  public static extern string get_T_DIMSE_N_DeleteRQ_RequestedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRQ_RequestedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_DeleteRQ_RequestedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRQ_RequestedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_DeleteRQ_RequestedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRQ_DataSetType")]
  public static extern void set_T_DIMSE_N_DeleteRQ_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRQ_DataSetType")]
  public static extern int get_T_DIMSE_N_DeleteRQ_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_DeleteRQ")]
  public static extern IntPtr new_T_DIMSE_N_DeleteRQ();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_DeleteRQ")]
  public static extern void delete_T_DIMSE_N_DeleteRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRSP_MessageIDBeingRespondedTo")]
  public static extern void set_T_DIMSE_N_DeleteRSP_MessageIDBeingRespondedTo(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRSP_MessageIDBeingRespondedTo")]
  public static extern ushort get_T_DIMSE_N_DeleteRSP_MessageIDBeingRespondedTo(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRSP_AffectedSOPClassUID")]
  public static extern void set_T_DIMSE_N_DeleteRSP_AffectedSOPClassUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRSP_AffectedSOPClassUID")]
  public static extern string get_T_DIMSE_N_DeleteRSP_AffectedSOPClassUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRSP_DimseStatus")]
  public static extern void set_T_DIMSE_N_DeleteRSP_DimseStatus(HandleRef jarg1, ushort jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRSP_DimseStatus")]
  public static extern ushort get_T_DIMSE_N_DeleteRSP_DimseStatus(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRSP_AffectedSOPInstanceUID")]
  public static extern void set_T_DIMSE_N_DeleteRSP_AffectedSOPInstanceUID(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRSP_AffectedSOPInstanceUID")]
  public static extern string get_T_DIMSE_N_DeleteRSP_AffectedSOPInstanceUID(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRSP_DataSetType")]
  public static extern void set_T_DIMSE_N_DeleteRSP_DataSetType(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRSP_DataSetType")]
  public static extern int get_T_DIMSE_N_DeleteRSP_DataSetType(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_N_DeleteRSP_opts")]
  public static extern void set_T_DIMSE_N_DeleteRSP_opts(HandleRef jarg1, uint jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_N_DeleteRSP_opts")]
  public static extern uint get_T_DIMSE_N_DeleteRSP_opts(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NDELETE_AFFECTEDSOPCLASSUID")]
  public static extern int get_O_NDELETE_AFFECTEDSOPCLASSUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_O_NDELETE_AFFECTEDSOPINSTANCEUID")]
  public static extern int get_O_NDELETE_AFFECTEDSOPINSTANCEUID();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_N_DeleteRSP")]
  public static extern IntPtr new_T_DIMSE_N_DeleteRSP();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_N_DeleteRSP")]
  public static extern void delete_T_DIMSE_N_DeleteRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_CommandField")]
  public static extern void set_T_DIMSE_Message_CommandField(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_CommandField")]
  public static extern int get_T_DIMSE_Message_CommandField(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg")]
  public static extern IntPtr get_T_DIMSE_Message_msg(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_Message")]
  public static extern IntPtr new_T_DIMSE_Message();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_Message")]
  public static extern void delete_T_DIMSE_Message(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CStoreRQ")]
  public static extern void set_T_DIMSE_Message_msg_CStoreRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CStoreRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CStoreRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CEchoRQ")]
  public static extern void set_T_DIMSE_Message_msg_CEchoRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CEchoRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CEchoRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CFindRQ")]
  public static extern void set_T_DIMSE_Message_msg_CFindRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CFindRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CFindRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CGetRQ")]
  public static extern void set_T_DIMSE_Message_msg_CGetRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CGetRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CGetRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CMoveRQ")]
  public static extern void set_T_DIMSE_Message_msg_CMoveRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CMoveRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CMoveRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CCancelRQ")]
  public static extern void set_T_DIMSE_Message_msg_CCancelRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CCancelRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CCancelRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NEventReportRQ")]
  public static extern void set_T_DIMSE_Message_msg_NEventReportRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NEventReportRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NEventReportRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NGetRQ")]
  public static extern void set_T_DIMSE_Message_msg_NGetRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NGetRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NGetRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NSetRQ")]
  public static extern void set_T_DIMSE_Message_msg_NSetRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NSetRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NSetRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NActionRQ")]
  public static extern void set_T_DIMSE_Message_msg_NActionRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NActionRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NActionRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NCreateRQ")]
  public static extern void set_T_DIMSE_Message_msg_NCreateRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NCreateRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NCreateRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NDeleteRQ")]
  public static extern void set_T_DIMSE_Message_msg_NDeleteRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NDeleteRQ")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NDeleteRQ(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CStoreRSP")]
  public static extern void set_T_DIMSE_Message_msg_CStoreRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CStoreRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CStoreRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CEchoRSP")]
  public static extern void set_T_DIMSE_Message_msg_CEchoRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CEchoRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CEchoRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CFindRSP")]
  public static extern void set_T_DIMSE_Message_msg_CFindRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CFindRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CFindRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CGetRSP")]
  public static extern void set_T_DIMSE_Message_msg_CGetRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CGetRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CGetRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_CMoveRSP")]
  public static extern void set_T_DIMSE_Message_msg_CMoveRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_CMoveRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_CMoveRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NEventReportRSP")]
  public static extern void set_T_DIMSE_Message_msg_NEventReportRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NEventReportRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NEventReportRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NGetRSP")]
  public static extern void set_T_DIMSE_Message_msg_NGetRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NGetRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NGetRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NSetRSP")]
  public static extern void set_T_DIMSE_Message_msg_NSetRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NSetRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NSetRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NActionRSP")]
  public static extern void set_T_DIMSE_Message_msg_NActionRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NActionRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NActionRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NCreateRSP")]
  public static extern void set_T_DIMSE_Message_msg_NCreateRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NCreateRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NCreateRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_Message_msg_NDeleteRSP")]
  public static extern void set_T_DIMSE_Message_msg_NDeleteRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_Message_msg_NDeleteRSP")]
  public static extern IntPtr get_T_DIMSE_Message_msg_NDeleteRSP(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_Message_msg")]
  public static extern IntPtr new_T_DIMSE_Message_msg();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_Message_msg")]
  public static extern void delete_T_DIMSE_Message_msg(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_g_dimse_send_groupLength_encoding")]
  public static extern void set_g_dimse_send_groupLength_encoding(int jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_g_dimse_send_groupLength_encoding")]
  public static extern int get_g_dimse_send_groupLength_encoding();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_g_dimse_send_sequenceType_encoding")]
  public static extern void set_g_dimse_send_sequenceType_encoding(int jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_g_dimse_send_sequenceType_encoding")]
  public static extern int get_g_dimse_send_sequenceType_encoding();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_g_dimse_save_dimse_data")]
  public static extern void set_g_dimse_save_dimse_data(bool jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_g_dimse_save_dimse_data")]
  public static extern bool get_g_dimse_save_dimse_data();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_echoUser")]
  public static extern IntPtr DIMSE_echoUser(HandleRef jarg1, ushort jarg2, int jarg3, int jarg4, ushort[] jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendEchoResponse")]
  public static extern IntPtr DIMSE_sendEchoResponse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, ushort jarg4, HandleRef jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_StoreProgress_state")]
  public static extern void set_T_DIMSE_StoreProgress_state(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_StoreProgress_state")]
  public static extern int get_T_DIMSE_StoreProgress_state(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_StoreProgress_callbackCount")]
  public static extern void set_T_DIMSE_StoreProgress_callbackCount(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_StoreProgress_callbackCount")]
  public static extern int get_T_DIMSE_StoreProgress_callbackCount(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_StoreProgress_progressBytes")]
  public static extern void set_T_DIMSE_StoreProgress_progressBytes(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_StoreProgress_progressBytes")]
  public static extern int get_T_DIMSE_StoreProgress_progressBytes(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_StoreProgress_totalBytes")]
  public static extern void set_T_DIMSE_StoreProgress_totalBytes(HandleRef jarg1, int jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_StoreProgress_totalBytes")]
  public static extern int get_T_DIMSE_StoreProgress_totalBytes(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_StoreProgress")]
  public static extern IntPtr new_T_DIMSE_StoreProgress();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_StoreProgress")]
  public static extern void delete_T_DIMSE_StoreProgress(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_DetectedCancelParameters_cancelEncountered")]
  public static extern void set_T_DIMSE_DetectedCancelParameters_cancelEncountered(HandleRef jarg1, bool jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_DetectedCancelParameters_cancelEncountered")]
  public static extern bool get_T_DIMSE_DetectedCancelParameters_cancelEncountered(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_DetectedCancelParameters_presId")]
  public static extern void set_T_DIMSE_DetectedCancelParameters_presId(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_DetectedCancelParameters_presId")]
  public static extern IntPtr get_T_DIMSE_DetectedCancelParameters_presId(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_set_T_DIMSE_DetectedCancelParameters_req")]
  public static extern void set_T_DIMSE_DetectedCancelParameters_req(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_get_T_DIMSE_DetectedCancelParameters_req")]
  public static extern IntPtr get_T_DIMSE_DetectedCancelParameters_req(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_T_DIMSE_DetectedCancelParameters")]
  public static extern IntPtr new_T_DIMSE_DetectedCancelParameters();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_T_DIMSE_DetectedCancelParameters")]
  public static extern void delete_T_DIMSE_DetectedCancelParameters(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_storeUser__SWIG_0")]
  public static extern IntPtr DIMSE_storeUser__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, string jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, int jarg8, int jarg9, HandleRef jarg10, HandleRef jarg11, HandleRef jarg12, int jarg13);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_storeUser__SWIG_1")]
  public static extern IntPtr DIMSE_storeUser__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, string jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, int jarg8, int jarg9, HandleRef jarg10, HandleRef jarg11, HandleRef jarg12);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_storeUser__SWIG_2")]
  public static extern IntPtr DIMSE_storeUser__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, string jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, int jarg8, int jarg9, HandleRef jarg10, HandleRef jarg11);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_storeProvider")]
  public static extern IntPtr DIMSE_storeProvider(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, string jarg4, int jarg5, HandleRef jarg6, HandleRef jarg7, HandleRef jarg8, int jarg9, int jarg10);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendStoreResponse")]
  public static extern IntPtr DIMSE_sendStoreResponse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_findUser")]
  public static extern IntPtr DIMSE_findUser(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, int jarg7, int jarg8, HandleRef jarg9, HandleRef jarg10);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_findProvider")]
  public static extern IntPtr DIMSE_findProvider(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6, int jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendFindResponse")]
  public static extern IntPtr DIMSE_sendFindResponse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_moveUser")]
  public static extern IntPtr DIMSE_moveUser(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, int jarg7, int jarg8, HandleRef jarg9, HandleRef jarg10, HandleRef jarg11, HandleRef jarg12, HandleRef jarg13, HandleRef jarg14);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_moveProvider")]
  public static extern IntPtr DIMSE_moveProvider(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6, int jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendMoveResponse")]
  public static extern IntPtr DIMSE_sendMoveResponse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_getUser")]
  public static extern IntPtr DIMSE_getUser(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, int jarg7, int jarg8, HandleRef jarg9, HandleRef jarg10, HandleRef jarg11, HandleRef jarg12, HandleRef jarg13, HandleRef jarg14);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_getProvider")]
  public static extern IntPtr DIMSE_getProvider(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6, int jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendGetResponse")]
  public static extern IntPtr DIMSE_sendGetResponse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendCancelRequest")]
  public static extern IntPtr DIMSE_sendCancelRequest(HandleRef jarg1, HandleRef jarg2, ushort jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_checkForCancelRQ")]
  public static extern IntPtr DIMSE_checkForCancelRQ(HandleRef jarg1, HandleRef jarg2, ushort jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendMessageUsingFileData__SWIG_0")]
  public static extern IntPtr DIMSE_sendMessageUsingFileData__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, string jarg5, HandleRef jarg6, HandleRef jarg7, HandleRef jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendMessageUsingFileData__SWIG_1")]
  public static extern IntPtr DIMSE_sendMessageUsingFileData__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, string jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendMessageUsingMemoryData__SWIG_0")]
  public static extern IntPtr DIMSE_sendMessageUsingMemoryData__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, HandleRef jarg8);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_sendMessageUsingMemoryData__SWIG_1")]
  public static extern IntPtr DIMSE_sendMessageUsingMemoryData__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_receiveCommand__SWIG_0")]
  public static extern IntPtr DIMSE_receiveCommand__SWIG_0(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_receiveCommand__SWIG_1")]
  public static extern IntPtr DIMSE_receiveCommand__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_receiveDataSetInMemory")]
  public static extern IntPtr DIMSE_receiveDataSetInMemory(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_createFilestream")]
  public static extern IntPtr DIMSE_createFilestream(string jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, int jarg5, HandleRef jarg6);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_receiveDataSetInFile")]
  public static extern IntPtr DIMSE_receiveDataSetInFile(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_debug")]
  public static extern void DIMSE_debug(int jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_warning")]
  public static extern void DIMSE_warning(HandleRef jarg1, string jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCommand")]
  public static extern void DIMSE_printCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCEchoRQ")]
  public static extern void DIMSE_printCEchoRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCEchoRSP")]
  public static extern void DIMSE_printCEchoRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCStoreRQ")]
  public static extern void DIMSE_printCStoreRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCStoreRSP")]
  public static extern void DIMSE_printCStoreRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCGetRQ")]
  public static extern void DIMSE_printCGetRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCGetRSP")]
  public static extern void DIMSE_printCGetRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCMoveRQ")]
  public static extern void DIMSE_printCMoveRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCMoveRSP")]
  public static extern void DIMSE_printCMoveRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCFindRQ")]
  public static extern void DIMSE_printCFindRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCFindRSP")]
  public static extern void DIMSE_printCFindRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printCCancelRQ")]
  public static extern void DIMSE_printCCancelRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNEventReportRQ")]
  public static extern void DIMSE_printNEventReportRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNEventReportRSP")]
  public static extern void DIMSE_printNEventReportRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNGetRQ")]
  public static extern void DIMSE_printNGetRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNGetRSP")]
  public static extern void DIMSE_printNGetRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNSetRQ")]
  public static extern void DIMSE_printNSetRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNSetRSP")]
  public static extern void DIMSE_printNSetRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNActionRQ")]
  public static extern void DIMSE_printNActionRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNActionRSP")]
  public static extern void DIMSE_printNActionRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNCreateRQ")]
  public static extern void DIMSE_printNCreateRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNCreateRSP")]
  public static extern void DIMSE_printNCreateRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNDeleteRQ")]
  public static extern void DIMSE_printNDeleteRQ(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printNDeleteRSP")]
  public static extern void DIMSE_printNDeleteRSP(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printMessage__SWIG_0")]
  public static extern void DIMSE_printMessage__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DIMSE_printMessage__SWIG_1")]
  public static extern void DIMSE_printMessage__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_stripTrailingSpaces")]
  public static extern string DU_stripTrailingSpaces(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_stripLeadingSpaces")]
  public static extern string DU_stripLeadingSpaces(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_stripLeadingAndTrailingSpaces")]
  public static extern string DU_stripLeadingAndTrailingSpaces(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_getStringDOElement")]
  public static extern bool DU_getStringDOElement(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_putStringDOElement")]
  public static extern bool DU_putStringDOElement(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_getShortDOElement")]
  public static extern bool DU_getShortDOElement(HandleRef jarg1, HandleRef jarg2, ushort[] jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_putShortDOElement")]
  public static extern bool DU_putShortDOElement(HandleRef jarg1, HandleRef jarg2, ushort jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_findSOPClassAndInstanceInDataSet__SWIG_0")]
  public static extern bool DU_findSOPClassAndInstanceInDataSet__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_findSOPClassAndInstanceInDataSet__SWIG_1")]
  public static extern bool DU_findSOPClassAndInstanceInDataSet__SWIG_1(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_findSOPClassAndInstanceInFile__SWIG_0")]
  public static extern bool DU_findSOPClassAndInstanceInFile__SWIG_0(string jarg1, string jarg2, string jarg3, bool jarg4);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_findSOPClassAndInstanceInFile__SWIG_1")]
  public static extern bool DU_findSOPClassAndInstanceInFile__SWIG_1(string jarg1, string jarg2, string jarg3);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_fileSize")]
  public static extern uint DU_fileSize(string jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_cstoreStatusString")]
  public static extern string DU_cstoreStatusString(ushort jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_cfindStatusString")]
  public static extern string DU_cfindStatusString(ushort jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_cmoveStatusString")]
  public static extern string DU_cmoveStatusString(ushort jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DU_cgetStatusString")]
  public static extern string DU_cgetStatusString(ushort jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_new_LST_HEAD")]
  public static extern IntPtr new_LST_HEAD();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_delete_LST_HEAD")]
  public static extern void delete_LST_HEAD(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_HEAD_push_back")]
  public static extern void LST_HEAD_push_back(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_HEAD_dequeue")]
  public static extern IntPtr LST_HEAD_dequeue(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_HEAD_size")]
  public static extern uint LST_HEAD_size(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_HEAD_front")]
  public static extern IntPtr LST_HEAD_front(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_HEAD_position")]
  public static extern IntPtr LST_HEAD_position(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_HEAD_next")]
  public static extern IntPtr LST_HEAD_next(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_HEAD_current")]
  public static extern IntPtr LST_HEAD_current(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Create")]
  public static extern IntPtr LST_Create();

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Destroy")]
  public static extern IntPtr LST_Destroy(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Enqueue")]
  public static extern IntPtr LST_Enqueue(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Dequeue")]
  public static extern IntPtr LST_Dequeue(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Pop")]
  public static extern IntPtr LST_Pop(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Count")]
  public static extern uint LST_Count(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Head")]
  public static extern IntPtr LST_Head(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Current")]
  public static extern IntPtr LST_Current(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Next")]
  public static extern IntPtr LST_Next(HandleRef jarg1);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_LST_Position")]
  public static extern IntPtr LST_Position(HandleRef jarg1, HandleRef jarg2);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionConstUpcast")]
  public static extern IntPtr OFConditionConstUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_OFConditionStringUpcast")]
  public static extern IntPtr OFConditionStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmInputFilterUpcast")]
  public static extern IntPtr DcmInputFilterUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOutputFilterUpcast")]
  public static extern IntPtr DcmOutputFilterUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTagUpcast")]
  public static extern IntPtr DcmTagUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDictEntryUpcast")]
  public static extern IntPtr DcmDictEntryUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmElementUpcast")]
  public static extern IntPtr DcmElementUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmItemUpcast")]
  public static extern IntPtr DcmItemUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmMetaInfoUpcast")]
  public static extern IntPtr DcmMetaInfoUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDatasetUpcast")]
  public static extern IntPtr DcmDatasetUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSequenceOfItemsUpcast")]
  public static extern IntPtr DcmSequenceOfItemsUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFileFormatUpcast")]
  public static extern IntPtr DcmFileFormatUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPixelSequenceUpcast")]
  public static extern IntPtr DcmPixelSequenceUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmByteStringUpcast")]
  public static extern IntPtr DcmByteStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmApplicationEntityUpcast")]
  public static extern IntPtr DcmApplicationEntityUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAgeStringUpcast")]
  public static extern IntPtr DcmAgeStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCodeStringUpcast")]
  public static extern IntPtr DcmCodeStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateUpcast")]
  public static extern IntPtr DcmDateUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDecimalStringUpcast")]
  public static extern IntPtr DcmDecimalStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmDateTimeUpcast")]
  public static extern IntPtr DcmDateTimeUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmIntegerStringUpcast")]
  public static extern IntPtr DcmIntegerStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmTimeUpcast")]
  public static extern IntPtr DcmTimeUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUniqueIdentifierUpcast")]
  public static extern IntPtr DcmUniqueIdentifierUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmCharStringUpcast")]
  public static extern IntPtr DcmCharStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongStringUpcast")]
  public static extern IntPtr DcmLongStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmLongTextUpcast")]
  public static extern IntPtr DcmLongTextUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmPersonNameUpcast")]
  public static extern IntPtr DcmPersonNameUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortStringUpcast")]
  public static extern IntPtr DcmShortStringUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmShortTextUpcast")]
  public static extern IntPtr DcmShortTextUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnlimitedTextUpcast")]
  public static extern IntPtr DcmUnlimitedTextUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherByteOtherWordUpcast")]
  public static extern IntPtr DcmOtherByteOtherWordUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmAttributeTagUpcast")]
  public static extern IntPtr DcmAttributeTagUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedShortUpcast")]
  public static extern IntPtr DcmSignedShortUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedShortUpcast")]
  public static extern IntPtr DcmUnsignedShortUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmSignedLongUpcast")]
  public static extern IntPtr DcmSignedLongUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongUpcast")]
  public static extern IntPtr DcmUnsignedLongUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmUnsignedLongOffsetUpcast")]
  public static extern IntPtr DcmUnsignedLongOffsetUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointSingleUpcast")]
  public static extern IntPtr DcmFloatingPointSingleUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmFloatingPointDoubleUpcast")]
  public static extern IntPtr DcmFloatingPointDoubleUpcast(IntPtr objectRef);

  [DllImport("ClearCanvas.Dcmtk.dll", EntryPoint="CSharp_DcmOtherFloatUpcast")]
  public static extern IntPtr DcmOtherFloatUpcast(IntPtr objectRef);
}

}
