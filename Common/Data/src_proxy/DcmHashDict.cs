/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;
using System.Runtime.InteropServices;

public class DcmHashDict : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DcmHashDict(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DcmHashDict obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DcmHashDict() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_DcmHashDict(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public DcmHashDict(int hashTabLen) : this(DCMTKPINVOKE.new_DcmHashDict__SWIG_0(hashTabLen), true) {
  }

  public DcmHashDict() : this(DCMTKPINVOKE.new_DcmHashDict__SWIG_1(), true) {
  }

  public int size() {
    int ret = DCMTKPINVOKE.DcmHashDict_size(swigCPtr);
    return ret;
  }

  public void clear() {
    DCMTKPINVOKE.DcmHashDict_clear(swigCPtr);
  }

  public void put(DcmDictEntry e) {
    DCMTKPINVOKE.DcmHashDict_put(swigCPtr, DcmDictEntry.getCPtr(e));
  }

  public DcmDictEntry get(DcmTagKey key, string privCreator) {
    IntPtr cPtr = DCMTKPINVOKE.DcmHashDict_get(swigCPtr, DcmTagKey.getCPtr(key), privCreator);
    DcmDictEntry ret = (cPtr == IntPtr.Zero) ? null : new DcmDictEntry(cPtr, false);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void del(DcmTagKey k, string privCreator) {
    DCMTKPINVOKE.DcmHashDict_del(swigCPtr, DcmTagKey.getCPtr(k), privCreator);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public DcmHashDictIterator begin() {
    DcmHashDictIterator ret = new DcmHashDictIterator(DCMTKPINVOKE.DcmHashDict_begin(swigCPtr), true);
    return ret;
  }

  public DcmHashDictIterator end() {
    DcmHashDictIterator ret = new DcmHashDictIterator(DCMTKPINVOKE.DcmHashDict_end(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_ostream loadSummary(SWIGTYPE_p_ostream outStream) {
    SWIGTYPE_p_ostream ret = new SWIGTYPE_p_ostream(DCMTKPINVOKE.DcmHashDict_loadSummary(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream)), false);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
