/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;
using System.Runtime.InteropServices;

public class DcmItem : DcmObject {
  private HandleRef swigCPtr;

  internal DcmItem(IntPtr cPtr, bool cMemoryOwn) : base(DCMTKPINVOKE.DcmItemUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DcmItem obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DcmItem() {
    Dispose();
  }

  public override void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_DcmItem(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
    base.Dispose();
  }

  public DcmItem() : this(DCMTKPINVOKE.new_DcmItem__SWIG_0(), true) {
  }

  public DcmItem(DcmTag tag, uint len) : this(DCMTKPINVOKE.new_DcmItem__SWIG_1(DcmTag.getCPtr(tag), len), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public DcmItem(DcmTag tag) : this(DCMTKPINVOKE.new_DcmItem__SWIG_2(DcmTag.getCPtr(tag)), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public DcmItem(DcmItem old) : this(DCMTKPINVOKE.new_DcmItem__SWIG_3(DcmItem.getCPtr(old)), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public override DcmEVR ident() {
    DcmEVR ret = (DcmEVR)DCMTKPINVOKE.DcmItem_ident(swigCPtr);
    return ret;
  }

  public override uint getVM() {
    uint ret = DCMTKPINVOKE.DcmItem_getVM(swigCPtr);
    return ret;
  }

  public virtual uint card() {
    uint ret = DCMTKPINVOKE.DcmItem_card(swigCPtr);
    return ret;
  }

  public override bool isLeaf() {
    bool ret = DCMTKPINVOKE.DcmItem_isLeaf(swigCPtr);
    return ret;
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags, int level, string pixelFileName, SWIGTYPE_p_size_t pixelCounter) {
    DCMTKPINVOKE.DcmItem_print__SWIG_0(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags, level, pixelFileName, SWIGTYPE_p_size_t.getCPtr(pixelCounter));
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags, int level, string pixelFileName) {
    DCMTKPINVOKE.DcmItem_print__SWIG_1(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags, level, pixelFileName);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags, int level) {
    DCMTKPINVOKE.DcmItem_print__SWIG_2(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags, level);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void print(SWIGTYPE_p_ostream outStream, uint flags) {
    DCMTKPINVOKE.DcmItem_print__SWIG_3(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void print(SWIGTYPE_p_ostream outStream) {
    DCMTKPINVOKE.DcmItem_print__SWIG_4(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream));
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public override uint calcElementLength(E_TransferSyntax xfer, E_EncodingType enctype) {
    uint ret = DCMTKPINVOKE.DcmItem_calcElementLength(swigCPtr, (int)xfer, (int)enctype);
    return ret;
  }

  public override uint getLength(E_TransferSyntax xfer, E_EncodingType enctype) {
    uint ret = DCMTKPINVOKE.DcmItem_getLength__SWIG_0(swigCPtr, (int)xfer, (int)enctype);
    return ret;
  }

  public override uint getLength(E_TransferSyntax xfer) {
    uint ret = DCMTKPINVOKE.DcmItem_getLength__SWIG_1(swigCPtr, (int)xfer);
    return ret;
  }

  public override uint getLength() {
    uint ret = DCMTKPINVOKE.DcmItem_getLength__SWIG_2(swigCPtr);
    return ret;
  }

  public override void transferInit() {
    DCMTKPINVOKE.DcmItem_transferInit(swigCPtr);
  }

  public override void transferEnd() {
    DCMTKPINVOKE.DcmItem_transferEnd(swigCPtr);
  }

  public override bool canWriteXfer(E_TransferSyntax newXfer, E_TransferSyntax oldXfer) {
    bool ret = DCMTKPINVOKE.DcmItem_canWriteXfer(swigCPtr, (int)newXfer, (int)oldXfer);
    return ret;
  }

  public override OFCondition read(DcmInputStream inStream, E_TransferSyntax ixfer, E_GrpLenEncoding glenc, uint maxReadLength) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_read__SWIG_0(swigCPtr, DcmInputStream.getCPtr(inStream), (int)ixfer, (int)glenc, maxReadLength), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition read(DcmInputStream inStream, E_TransferSyntax ixfer, E_GrpLenEncoding glenc) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_read__SWIG_1(swigCPtr, DcmInputStream.getCPtr(inStream), (int)ixfer, (int)glenc), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition read(DcmInputStream inStream, E_TransferSyntax ixfer) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_read__SWIG_2(swigCPtr, DcmInputStream.getCPtr(inStream), (int)ixfer), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition write(DcmOutputStream outStream, E_TransferSyntax oxfer, E_EncodingType enctype) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_write__SWIG_0(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer, (int)enctype), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition write(DcmOutputStream outStream, E_TransferSyntax oxfer) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_write__SWIG_1(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition writeXML(SWIGTYPE_p_ostream outStream, uint flags) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_writeXML__SWIG_0(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream), flags), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition writeXML(SWIGTYPE_p_ostream outStream) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_writeXML__SWIG_1(swigCPtr, SWIGTYPE_p_ostream.getCPtr(outStream)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition writeSignatureFormat(DcmOutputStream outStream, E_TransferSyntax oxfer, E_EncodingType enctype) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_writeSignatureFormat__SWIG_0(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer, (int)enctype), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition writeSignatureFormat(DcmOutputStream outStream, E_TransferSyntax oxfer) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_writeSignatureFormat__SWIG_1(swigCPtr, DcmOutputStream.getCPtr(outStream), (int)oxfer), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool containsUnknownVR() {
    bool ret = DCMTKPINVOKE.DcmItem_containsUnknownVR(swigCPtr);
    return ret;
  }

  public virtual OFCondition insert(DcmElement elem, bool replaceOld, bool checkInsertOrder) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_insert__SWIG_0(swigCPtr, DcmElement.getCPtr(elem), replaceOld, checkInsertOrder), true);
    return ret;
  }

  public virtual OFCondition insert(DcmElement elem, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_insert__SWIG_1(swigCPtr, DcmElement.getCPtr(elem), replaceOld), true);
    return ret;
  }

  public virtual OFCondition insert(DcmElement elem) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_insert__SWIG_2(swigCPtr, DcmElement.getCPtr(elem)), true);
    return ret;
  }

  public virtual DcmElement getElement(uint num) {
    IntPtr cPtr = DCMTKPINVOKE.DcmItem_getElement(swigCPtr, num);
    DcmElement ret = (cPtr == IntPtr.Zero) ? null : new DcmElement(cPtr, false);
    return ret;
  }

  public override OFCondition nextObject(SWIGTYPE_p_DcmStack stack, bool intoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_nextObject(swigCPtr, SWIGTYPE_p_DcmStack.getCPtr(stack), intoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override DcmObject nextInContainer(DcmObject obj) {
    IntPtr cPtr = DCMTKPINVOKE.DcmItem_nextInContainer(swigCPtr, DcmObject.getCPtr(obj));
    DcmObject ret = (cPtr == IntPtr.Zero) ? null : new DcmObject(cPtr, false);
    return ret;
  }

  public virtual DcmElement remove(uint num) {
    IntPtr cPtr = DCMTKPINVOKE.DcmItem_remove__SWIG_0(swigCPtr, num);
    DcmElement ret = (cPtr == IntPtr.Zero) ? null : new DcmElement(cPtr, false);
    return ret;
  }

  public virtual DcmElement remove(DcmObject elem) {
    IntPtr cPtr = DCMTKPINVOKE.DcmItem_remove__SWIG_1(swigCPtr, DcmObject.getCPtr(elem));
    DcmElement ret = (cPtr == IntPtr.Zero) ? null : new DcmElement(cPtr, false);
    return ret;
  }

  public virtual DcmElement remove(DcmTagKey tag) {
    IntPtr cPtr = DCMTKPINVOKE.DcmItem_remove__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tag));
    DcmElement ret = (cPtr == IntPtr.Zero) ? null : new DcmElement(cPtr, false);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition clear() {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_clear(swigCPtr), true);
    return ret;
  }

  public override OFCondition verify(bool autocorrect) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_verify__SWIG_0(swigCPtr, autocorrect), true);
    return ret;
  }

  public override OFCondition verify() {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_verify__SWIG_1(swigCPtr), true);
    return ret;
  }

  public override OFCondition search(DcmTagKey xtag, SWIGTYPE_p_DcmStack resultStack, E_SearchMode mode, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_search__SWIG_0(swigCPtr, DcmTagKey.getCPtr(xtag), SWIGTYPE_p_DcmStack.getCPtr(resultStack), (int)mode, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition search(DcmTagKey xtag, SWIGTYPE_p_DcmStack resultStack, E_SearchMode mode) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_search__SWIG_1(swigCPtr, DcmTagKey.getCPtr(xtag), SWIGTYPE_p_DcmStack.getCPtr(resultStack), (int)mode), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition search(DcmTagKey xtag, SWIGTYPE_p_DcmStack resultStack) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_search__SWIG_2(swigCPtr, DcmTagKey.getCPtr(xtag), SWIGTYPE_p_DcmStack.getCPtr(resultStack)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition searchErrors(SWIGTYPE_p_DcmStack resultStack) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_searchErrors(swigCPtr, SWIGTYPE_p_DcmStack.getCPtr(resultStack)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override OFCondition loadAllDataIntoMemory() {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_loadAllDataIntoMemory(swigCPtr), true);
    return ret;
  }

  public virtual OFCondition computeGroupLengthAndPadding(E_GrpLenEncoding glenc, E_PaddingEncoding padenc, E_TransferSyntax xfer, E_EncodingType enctype, uint padlen, uint subPadlen, uint instanceLength) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_computeGroupLengthAndPadding__SWIG_0(swigCPtr, (int)glenc, (int)padenc, (int)xfer, (int)enctype, padlen, subPadlen, instanceLength), true);
    return ret;
  }

  public virtual OFCondition computeGroupLengthAndPadding(E_GrpLenEncoding glenc, E_PaddingEncoding padenc, E_TransferSyntax xfer, E_EncodingType enctype, uint padlen, uint subPadlen) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_computeGroupLengthAndPadding__SWIG_1(swigCPtr, (int)glenc, (int)padenc, (int)xfer, (int)enctype, padlen, subPadlen), true);
    return ret;
  }

  public virtual OFCondition computeGroupLengthAndPadding(E_GrpLenEncoding glenc, E_PaddingEncoding padenc, E_TransferSyntax xfer, E_EncodingType enctype, uint padlen) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_computeGroupLengthAndPadding__SWIG_2(swigCPtr, (int)glenc, (int)padenc, (int)xfer, (int)enctype, padlen), true);
    return ret;
  }

  public virtual OFCondition computeGroupLengthAndPadding(E_GrpLenEncoding glenc, E_PaddingEncoding padenc, E_TransferSyntax xfer, E_EncodingType enctype) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_computeGroupLengthAndPadding__SWIG_3(swigCPtr, (int)glenc, (int)padenc, (int)xfer, (int)enctype), true);
    return ret;
  }

  public virtual OFCondition computeGroupLengthAndPadding(E_GrpLenEncoding glenc, E_PaddingEncoding padenc, E_TransferSyntax xfer) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_computeGroupLengthAndPadding__SWIG_4(swigCPtr, (int)glenc, (int)padenc, (int)xfer), true);
    return ret;
  }

  public virtual OFCondition computeGroupLengthAndPadding(E_GrpLenEncoding glenc, E_PaddingEncoding padenc) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_computeGroupLengthAndPadding__SWIG_5(swigCPtr, (int)glenc, (int)padenc), true);
    return ret;
  }

  public virtual OFCondition computeGroupLengthAndPadding(E_GrpLenEncoding glenc) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_computeGroupLengthAndPadding__SWIG_6(swigCPtr, (int)glenc), true);
    return ret;
  }

  public bool tagExists(DcmTagKey key, bool searchIntoSub) {
    bool ret = DCMTKPINVOKE.DcmItem_tagExists__SWIG_0(swigCPtr, DcmTagKey.getCPtr(key), searchIntoSub);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool tagExists(DcmTagKey key) {
    bool ret = DCMTKPINVOKE.DcmItem_tagExists__SWIG_1(swigCPtr, DcmTagKey.getCPtr(key));
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool tagExistsWithValue(DcmTagKey key, bool searchIntoSub) {
    bool ret = DCMTKPINVOKE.DcmItem_tagExistsWithValue__SWIG_0(swigCPtr, DcmTagKey.getCPtr(key), searchIntoSub);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool tagExistsWithValue(DcmTagKey key) {
    bool ret = DCMTKPINVOKE.DcmItem_tagExistsWithValue__SWIG_1(swigCPtr, DcmTagKey.getCPtr(key));
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetElement(DcmTagKey tagKey, SWIGTYPE_p_p_DcmElement element, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetElement__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), SWIGTYPE_p_p_DcmElement.getCPtr(element), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetElement(DcmTagKey tagKey, SWIGTYPE_p_p_DcmElement element) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetElement__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), SWIGTYPE_p_p_DcmElement.getCPtr(element)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetElements(DcmTagKey tagKey, SWIGTYPE_p_DcmStack resultStack) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetElements(swigCPtr, DcmTagKey.getCPtr(tagKey), SWIGTYPE_p_DcmStack.getCPtr(resultStack)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetString(DcmTagKey tagKey, ref IntPtr val, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetString__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetString(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetString__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetOFString(DcmTagKey tagKey, StringBuilder val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetOFString__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetOFString(DcmTagKey tagKey, StringBuilder val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetOFString__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetOFString(DcmTagKey tagKey, StringBuilder val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetOFString__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetOFStringArray(DcmTagKey tagKey, StringBuilder val, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetOFStringArray__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), val, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetOFStringArray(DcmTagKey tagKey, StringBuilder val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetOFStringArray__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint8(DcmTagKey tagKey, out byte val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint8__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint8(DcmTagKey tagKey, out byte val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint8__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint8(DcmTagKey tagKey, out byte val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint8__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint8Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint8Array__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint8Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint8Array__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint8Array(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint8Array__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint16(DcmTagKey tagKey, out ushort val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint16__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint16(DcmTagKey tagKey, out ushort val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint16__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint16(DcmTagKey tagKey, out ushort val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint16__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint16Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint16Array__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint16Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint16Array__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint16Array(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint16Array__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint16(DcmTagKey tagKey, out short val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint16__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint16(DcmTagKey tagKey, out short val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint16__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint16(DcmTagKey tagKey, out short val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint16__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint16Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint16Array__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint16Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint16Array__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint16Array(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint16Array__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint32(DcmTagKey tagKey, out uint val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint32__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint32(DcmTagKey tagKey, out uint val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint32__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint32(DcmTagKey tagKey, out uint val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint32__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint32Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint32Array__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint32Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint32Array__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetUint32Array(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetUint32Array__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint32(DcmTagKey tagKey, out int val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint32__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint32(DcmTagKey tagKey, out int val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint32__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint32(DcmTagKey tagKey, out int val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint32__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint32Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint32Array__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint32Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint32Array__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSint32Array(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSint32Array__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetLongInt(DcmTagKey tagKey, out int val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetLongInt__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetLongInt(DcmTagKey tagKey, out int val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetLongInt__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetLongInt(DcmTagKey tagKey, out int val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetLongInt__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat32(DcmTagKey tagKey, out float val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat32__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat32(DcmTagKey tagKey, out float val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat32__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat32(DcmTagKey tagKey, out float val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat32__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat32Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat32Array__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat32Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat32Array__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat32Array(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat32Array__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat64(DcmTagKey tagKey, out double val, uint pos, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat64__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat64(DcmTagKey tagKey, out double val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat64__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), out val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat64(DcmTagKey tagKey, out double val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat64__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), out val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat64Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat64Array__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat64Array(DcmTagKey tagKey, ref IntPtr val, SWIGTYPE_p_unsigned_long count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat64Array__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val, SWIGTYPE_p_unsigned_long.getCPtr(count)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetFloat64Array(DcmTagKey tagKey, ref IntPtr val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetFloat64Array__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey), ref val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSequence(DcmTagKey seqTagKey, SWIGTYPE_p_p_DcmSequenceOfItems sequence, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSequence__SWIG_0(swigCPtr, DcmTagKey.getCPtr(seqTagKey), SWIGTYPE_p_p_DcmSequenceOfItems.getCPtr(sequence), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSequence(DcmTagKey seqTagKey, SWIGTYPE_p_p_DcmSequenceOfItems sequence) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSequence__SWIG_1(swigCPtr, DcmTagKey.getCPtr(seqTagKey), SWIGTYPE_p_p_DcmSequenceOfItems.getCPtr(sequence)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSequenceItem(DcmTagKey seqTagKey, SWIGTYPE_p_p_DcmItem item, int itemNum) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSequenceItem__SWIG_0(swigCPtr, DcmTagKey.getCPtr(seqTagKey), SWIGTYPE_p_p_DcmItem.getCPtr(item), itemNum), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndGetSequenceItem(DcmTagKey seqTagKey, SWIGTYPE_p_p_DcmItem item) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndGetSequenceItem__SWIG_1(swigCPtr, DcmTagKey.getCPtr(seqTagKey), SWIGTYPE_p_p_DcmItem.getCPtr(item)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findOrCreateSequenceItem(DcmTag seqTag, SWIGTYPE_p_p_DcmItem item, int itemNum) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findOrCreateSequenceItem__SWIG_0(swigCPtr, DcmTag.getCPtr(seqTag), SWIGTYPE_p_p_DcmItem.getCPtr(item), itemNum), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findOrCreateSequenceItem(DcmTag seqTag, SWIGTYPE_p_p_DcmItem item) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findOrCreateSequenceItem__SWIG_1(swigCPtr, DcmTag.getCPtr(seqTag), SWIGTYPE_p_p_DcmItem.getCPtr(item)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndDeleteElement(DcmTagKey tagKey, bool allOccurrences, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndDeleteElement__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), allOccurrences, searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndDeleteElement(DcmTagKey tagKey, bool allOccurrences) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndDeleteElement__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), allOccurrences), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndDeleteElement(DcmTagKey tagKey) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndDeleteElement__SWIG_2(swigCPtr, DcmTagKey.getCPtr(tagKey)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndCopyElement(DcmTagKey tagKey, SWIGTYPE_p_p_DcmElement newElement, bool searchIntoSub) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndCopyElement__SWIG_0(swigCPtr, DcmTagKey.getCPtr(tagKey), SWIGTYPE_p_p_DcmElement.getCPtr(newElement), searchIntoSub), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition findAndCopyElement(DcmTagKey tagKey, SWIGTYPE_p_p_DcmElement newElement) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_findAndCopyElement__SWIG_1(swigCPtr, DcmTagKey.getCPtr(tagKey), SWIGTYPE_p_p_DcmElement.getCPtr(newElement)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertString(DcmTag tag, string val, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertString__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertString(DcmTag tag, string val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertString__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertOFStringArray(DcmTag tag, string val, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertOFStringArray__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertOFStringArray(DcmTag tag, string val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertOFStringArray__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint8Array(DcmTag tag, byte[] val, uint count, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint8Array__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, count, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint8Array(DcmTag tag, byte[] val, uint count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint8Array__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, count), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint16(DcmTag tag, ushort val, uint pos, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint16__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, pos, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint16(DcmTag tag, ushort val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint16__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint16(DcmTag tag, ushort val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint16__SWIG_2(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint16Array(DcmTag tag, ushort[] val, uint count, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint16Array__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, count, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint16Array(DcmTag tag, ushort[] val, uint count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint16Array__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, count), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint16(DcmTag tag, short val, uint pos, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint16__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, pos, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint16(DcmTag tag, short val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint16__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint16(DcmTag tag, short val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint16__SWIG_2(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint16Array(DcmTag tag, short[] val, uint count, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint16Array__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, count, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint16Array(DcmTag tag, short[] val, uint count) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint16Array__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, count), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint32(DcmTag tag, uint val, uint pos, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint32__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, pos, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint32(DcmTag tag, uint val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint32__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertUint32(DcmTag tag, uint val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertUint32__SWIG_2(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint32(DcmTag tag, int val, uint pos, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint32__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, pos, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint32(DcmTag tag, int val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint32__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertSint32(DcmTag tag, int val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertSint32__SWIG_2(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertFloat32(DcmTag tag, float val, uint pos, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertFloat32__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, pos, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertFloat32(DcmTag tag, float val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertFloat32__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertFloat32(DcmTag tag, float val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertFloat32__SWIG_2(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertFloat64(DcmTag tag, double val, uint pos, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertFloat64__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), val, pos, replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertFloat64(DcmTag tag, double val, uint pos) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertFloat64__SWIG_1(swigCPtr, DcmTag.getCPtr(tag), val, pos), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition putAndInsertFloat64(DcmTag tag, double val) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_putAndInsertFloat64__SWIG_2(swigCPtr, DcmTag.getCPtr(tag), val), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition insertEmptyElement(DcmTag tag, bool replaceOld) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_insertEmptyElement__SWIG_0(swigCPtr, DcmTag.getCPtr(tag), replaceOld), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OFCondition insertEmptyElement(DcmTag tag) {
    OFCondition ret = new OFCondition(DCMTKPINVOKE.DcmItem_insertEmptyElement__SWIG_1(swigCPtr, DcmTag.getCPtr(tag)), true);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
