#region License

// Copyright (c) 2006-2008, ClearCanvas Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, 
// are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice, 
//      this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, 
//      this list of conditions and the following disclaimer in the documentation 
//      and/or other materials provided with the distribution.
//    * Neither the name of ClearCanvas Inc. nor the names of its contributors 
//      may be used to endorse or promote products derived from this software without 
//      specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
// OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
// OF SUCH DAMAGE.

#endregion

using System;

namespace ClearCanvas.ImageServer.Web.Common.WebControls
{
    /// <summary>
    /// Provide validation functionality which is carried out by a Web Service.
    /// </summary>
    /// <remarks>
    /// The Web service must have [ScriptService] attribute in order to be accessible by the javascript generated by this control.
    /// The web service url is specified in <see cref="ServicePath"/> and the method to called is specified by <see cref="ServiceOperation"/>.
    /// For client-side validation, the parameter(s) which will be passed to the web service is generated by the javascript method whose name
    /// is specified in <see cref="ParamsFunction"/>. For server-side validation, a derived class must implement <see cref="BaseValidator.OnServerSideEvaluate"/>.
    /// </remarks>
    public class WebServiceValidator : BaseValidator
    {
        #region Private members
        private string _servicePath = "Not Specified";
        private string _serviceOperation = "Not Specified";
        private string _paramsFunction;
        #endregion Private members


        #region Public Properties

        /// <summary>
        /// The relative path to the asmx web service 
        /// eg. /Services/ValidationServices.asmx
        /// </summary>
        public string ServicePath
        {
            get { return _servicePath; }
            set { _servicePath = value; }
        }

        

        /// <summary>
        /// Name of the service operation
        /// </summary>
        public string ServiceOperation
        {
            get { return _serviceOperation; }
            set { _serviceOperation = value; }
        }

        /// <summary>
        /// Name of the javascript function used to create the parameter object passed to the service.
        /// </summary>
        /// 
        /// <example>
        /// The following example shows the javascript function that create the parameter object
        /// which contains a single parameter 'path' (as specified in ValidateFilesystemPath argument).
        /// The value for this parameter is taken from the text box with ID of 'PathTextBox'.
        /// 
        /// 
        /// Web service code:
        /// <code>
        /// [WebMethod]
        /// public ValidationResult ValidateFilesystemPath(string path)
        /// {
        ///     .....
        /// }
        /// </code>
        /// 
        /// Javascript code:
        /// 
        /// <code>
        ///  function CreateParams()
        ///  {
        ///     control = document.getElementById('PathTextBox');
        ///     params = new Array();
        ///     params.path=control.value;
        ///  
        ///     return params;
        ///  }
        ///  </code>
        /// 
        /// ASPX code:
        /// 
        /// <code>
        /// <clearcanvas:WebServiceValidator 
        ///       runat="server" ID="PathValidator" 
        ///       ControlToValidate="PathTextBox" 
        ///       InvalidInputBackColor="#FAFFB5" 
        ///       ServicePath="/Services/ValidationServices.asmx" 
        ///       ServiceOperation="ValidateFilesystemPath" 
        ///       ParamsFunction="CreateParams"
        ///       Display="None" 
        ///       ValidationGroup="vg1" />
        /// </code>
        /// 
        /// </example>
        public string ParamsFunction
        {
            get { return _paramsFunction; }
            set { _paramsFunction = value; }
        }


        #endregion Public Properties

        #region Protected Properties
        protected string ServiceURL
        {
            get
            {
                string baseUrl = Page.Request.Url.Scheme + "://" + Page.Request.Url.Authority +
                        Page.Request.ApplicationPath.TrimEnd('/');
                return baseUrl + Page.ResolveUrl(ServicePath); 
            }
        }

       
        #endregion Protected Properties


        #region Protected Methods
        protected override void OnInit(EventArgs e)
        {

            base.OnInit(e);

            if (EnableClientScript)
            {
                RegisterWebServiceInitScripts();
            }
            
        }

        

        protected void RegisterWebServiceInitScripts()
        {
            ScriptTemplate template = new ScriptTemplate(GetType().Assembly, "ClearCanvas.ImageServer.Web.Common.WebControls.WebServiceValidator_Init.js");
            template.Replace("@@WEBSERVICE_URL@@", ServiceURL);
            Page.ClientScript.RegisterStartupScript(GetType(), "WebServiceInit", template.Script, true);
        }    

        

        //protected override void RegisterClientSideValidationExtensionScripts()
        //{
        //    ScriptTemplate template = new ScriptTemplate(GetType().Assembly, "ClearCanvas.ImageServer.Web.Common.WebControls.WebServiceValidator_ClientValidation.js");
        //    template.Replace("@@FUNCTION_NAME@@", ClientEvalFunctionName);
        //    template.Replace("@@INPUT_CLIENTID@@", GetControlRenderID(ControlToValidate));
        //    template.Replace("@@WEBSERVICE_OPERATION@@", ServiceOperation);
        //    template.Replace("@@WEBSERVICE_URL@@", ServiceURL);
        //    template.Replace("@@PARAMETER_FUNCTION@@", ParamsFunction);
        //    template.Replace("@@INPUT_NAME@@", InputName);
        //    template.Replace("@@INVALID_INPUT_POPUP_TOOLTIP@@", InputName);
        //    template.Replace("@@CLIENTID@@", ClientID);
            
            
        //    Page.ClientScript.RegisterClientScriptBlock(GetType(), ClientEvalFunctionName, template.Script, true);
        //}

        protected override void RegisterClientSideValidationExtensionScripts()
        {
            
            ScriptTemplate template = new ScriptTemplate(this, "ClearCanvas.ImageServer.Web.Common.WebControls.WebServiceValidator.js");
            template.Replace("@@WEBSERVICE_OPERATION@@", ServiceOperation);
            template.Replace("@@WEBSERVICE_URL@@", ServiceURL);
            template.Replace("@@PARAMETER_FUNCTION@@", ParamsFunction);

            Page.ClientScript.RegisterClientScriptBlock(GetType(), ClientID + "_ValidatorClass", template.Script, true);
        }

        protected override bool OnServerSideEvaluate()
        {
            return true;
        }

        #endregion Protected Methods


       
    }
}
