<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="ShredHostServiceSettings" type="ClearCanvas.Server.ShredHost.ShredHostServiceSettings, ClearCanvas.Server.ShredHost, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" allowLocation="true" allowDefinition="Everywhere" allowExeDefinition="MachineToApplication" restartOnExternalChanges="true" requirePermission="true" />
	</configSections>

	<ShredHostServiceSettings ShredHostHttpPort="50220" SharedHttpPort="50221" SharedTcpPort="50222" />

	<system.serviceModel>
		<bindings>
			<basicHttpBinding>
				<binding name="BasicHttpBinding_IHeaderRetrievalService" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
                    maxBufferPoolSize="524288" maxReceivedMessageSize="65536" transferMode="Streamed"
                    messageEncoding="Mtom" textEncoding="utf-8" useDefaultWebProxy="true"
                    allowCookies="false">
					<readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
					
				</binding>
			</basicHttpBinding>
			<wsHttpBinding>
				<binding name="WSHttpBinding_IHeaderRetrievalService" closeTimeout="00:01:00" 
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
                    maxBufferPoolSize="524288" maxReceivedMessageSize="65536" 
                    messageEncoding="Text"  textEncoding="utf-8" useDefaultWebProxy="true"
                    allowCookies="false">
					<readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
					<reliableSession ordered="true" inactivityTimeout="00:10:00"
                        enabled="false" />
					<security mode="Message">
						<message clientCredentialType="Certificate"/>
					</security>
				</binding>
			</wsHttpBinding>
			<netTcpBinding>
				<binding name="NetTcpBinding_IHeaderRetrievalService" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    transactionFlow="false" transferMode="Streamed" transactionProtocol="OleTransactions"
                    hostNameComparisonMode="StrongWildcard" listenBacklog="10"
                    maxBufferPoolSize="524288" maxBufferSize="65536" maxConnections="10"
                    maxReceivedMessageSize="65536">
					<readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
					<reliableSession ordered="true" inactivityTimeout="00:10:00"
                        enabled="false" />
					<security mode="Message">
						<transport clientCredentialType="Windows" protectionLevel="EncryptAndSign" />
						<message clientCredentialType="Certificate" />
					</security>
				</binding>
			</netTcpBinding>
		</bindings>
		<client>
		</client>
		<services>
			<service
				name="ClearCanvas.ImageServer.Services.Streaming.HeaderRetrieval.HeaderRetrievalService"
				behaviorConfiguration="HeaderStreamServiceBehavior"/>
		</services>
		<behaviors>
			<serviceBehaviors>
				<behavior name="HeaderStreamServiceBehavior">
					<serviceThrottling maxConcurrentCalls="100" maxConcurrentSessions="100" maxConcurrentInstances="100"/>
					<serviceCredentials>
						<!-- ImageServer is the self-signed certificate created by InstallServerCert.bat 
										  
							 If you would like to use a different certificate, change this setting.
												  
								findValue = the subject used in your certificate (do not include "CN = " in the setting)
								storeLocation = where you installed the certificate (possible values: LocalMachine or CurrentUser)
								storeName = where you installed the certificate. Possible values: My(Personal), TrustedPeople, Root, TrustedPublisher
						-->						
						<serviceCertificate findValue="ImageServer" storeLocation="LocalMachine" storeName="My"  x509FindType="FindBySubjectName" />

						<clientCertificate>
								<!-- 
								Setting the certificateValidationMode to PeerOrChainTrust means that if the certificate 
								is in the server's Trusted People store, then it will be trusted without performing a
								validation of the certificate's issuer chain. This setting is used here for convenience so that the 
								sample can be run without having to have certificates issued by a certificate authority (CA).
								This setting is less secure than the default, ChainTrust. The security implications of this 
								setting should be carefully considered before using PeerOrChainTrust in production code. 
								
								Rules of thumbs:
									use None to always accept the client certificate
									use PeerOrChainTrust to validate the client certificate. 
											The client certificte must be issued by a CA or imported into the server LocalMachine Trusted People store. Otherwise, the client will receive "caller is not authenticated to call this service"
									use ChainTrust (most secure) to check if the client certificate is issued by a CA. If not, the client will receive "caller is not authenticated to call this service" 
															   
								-->
								<authentication certificateValidationMode="None"  />
						</clientCertificate>
					</serviceCredentials>								
				</behavior>
				
				<behavior name="serviceBehavior">
					<serviceAuthorization impersonateCallerForAllOperations="false"/>
					<serviceCredentials>
						<windowsAuthentication allowAnonymousLogons="false" includeWindowsGroups="true" />
					</serviceCredentials>
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>

	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<probing privatePath="common;plugins" />
		</assemblyBinding>
	</runtime>
	
</configuration>

