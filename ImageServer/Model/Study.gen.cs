#region License

// Copyright (c) 2006-2008, ClearCanvas Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, 
// are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice, 
//      this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, 
//      this list of conditions and the following disclaimer in the documentation 
//      and/or other materials provided with the distribution.
//    * Neither the name of ClearCanvas Inc. nor the names of its contributors 
//      may be used to endorse or promote products derived from this software without 
//      specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
// OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
// OF SUCH DAMAGE.

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model
{
    using System;
    using ClearCanvas.Dicom;
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;
    using ClearCanvas.ImageServer.Model.EntityBrokers;

    [Serializable]
    public partial class Study: ServerEntity
    {
        #region Constructors
        public Study():base("Study")
        {}
        #endregion

        #region Private Members
        private System.String _accessionNumber;
        private System.Int32 _numberOfStudyRelatedInstances;
        private System.Int32 _numberOfStudyRelatedSeries;
        private ClearCanvas.ImageServer.Enterprise.ServerEntityKey _patientKey;
        private System.String _patientId;
        private System.String _patientsBirthDate;
        private System.String _patientsName;
        private System.String _patientsSex;
        private System.String _referringPhysiciansName;
        private ClearCanvas.ImageServer.Enterprise.ServerEntityKey _serverPartitionKey;
        private System.String _studyDate;
        private System.String _studyDescription;
        private System.String _studyId;
        private System.String _studyInstanceUid;
        private StudyStatusEnum _studyStatusEnum;
        private System.String _studyTime;
        #endregion

        #region Public Properties
        [DicomField(DicomTags.AccessionNumber, DefaultValue = DicomFieldDefault.Null)]
        public System.String AccessionNumber
        {
        get { return _accessionNumber; }
        set { _accessionNumber = value; }
        }
        [DicomField(DicomTags.NumberOfStudyRelatedInstances, DefaultValue = DicomFieldDefault.Null)]
        public System.Int32 NumberOfStudyRelatedInstances
        {
        get { return _numberOfStudyRelatedInstances; }
        set { _numberOfStudyRelatedInstances = value; }
        }
        [DicomField(DicomTags.NumberOfStudyRelatedSeries, DefaultValue = DicomFieldDefault.Null)]
        public System.Int32 NumberOfStudyRelatedSeries
        {
        get { return _numberOfStudyRelatedSeries; }
        set { _numberOfStudyRelatedSeries = value; }
        }
        public ClearCanvas.ImageServer.Enterprise.ServerEntityKey PatientKey
        {
        get { return _patientKey; }
        set { _patientKey = value; }
        }
        [DicomField(DicomTags.PatientId, DefaultValue = DicomFieldDefault.Null)]
        public System.String PatientId
        {
        get { return _patientId; }
        set { _patientId = value; }
        }
        [DicomField(DicomTags.PatientsBirthDate, DefaultValue = DicomFieldDefault.Null)]
        public System.String PatientsBirthDate
        {
        get { return _patientsBirthDate; }
        set { _patientsBirthDate = value; }
        }
        [DicomField(DicomTags.PatientsName, DefaultValue = DicomFieldDefault.Null)]
        public System.String PatientsName
        {
        get { return _patientsName; }
        set { _patientsName = value; }
        }
        [DicomField(DicomTags.PatientsSex, DefaultValue = DicomFieldDefault.Null)]
        public System.String PatientsSex
        {
        get { return _patientsSex; }
        set { _patientsSex = value; }
        }
        [DicomField(DicomTags.ReferringPhysiciansName, DefaultValue = DicomFieldDefault.Null)]
        public System.String ReferringPhysiciansName
        {
        get { return _referringPhysiciansName; }
        set { _referringPhysiciansName = value; }
        }
        public ClearCanvas.ImageServer.Enterprise.ServerEntityKey ServerPartitionKey
        {
        get { return _serverPartitionKey; }
        set { _serverPartitionKey = value; }
        }
        [DicomField(DicomTags.StudyDate, DefaultValue = DicomFieldDefault.Null)]
        public System.String StudyDate
        {
        get { return _studyDate; }
        set { _studyDate = value; }
        }
        [DicomField(DicomTags.StudyDescription, DefaultValue = DicomFieldDefault.Null)]
        public System.String StudyDescription
        {
        get { return _studyDescription; }
        set { _studyDescription = value; }
        }
        [DicomField(DicomTags.StudyId, DefaultValue = DicomFieldDefault.Null)]
        public System.String StudyId
        {
        get { return _studyId; }
        set { _studyId = value; }
        }
        [DicomField(DicomTags.StudyInstanceUid, DefaultValue = DicomFieldDefault.Null)]
        public System.String StudyInstanceUid
        {
        get { return _studyInstanceUid; }
        set { _studyInstanceUid = value; }
        }
        public StudyStatusEnum StudyStatusEnum
        {
        get { return _studyStatusEnum; }
        set { _studyStatusEnum = value; }
        }
        [DicomField(DicomTags.StudyTime, DefaultValue = DicomFieldDefault.Null)]
        public System.String StudyTime
        {
        get { return _studyTime; }
        set { _studyTime = value; }
        }
        #endregion

        #region Static Methods
        static public Study Load(ServerEntityKey key)
        {
            using (IReadContext read = PersistentStoreRegistry.GetDefaultStore().OpenReadContext())
            {
                return Load(read, key);
            }
        }
        static public Study Load(IReadContext read, ServerEntityKey key)
        {
            IStudyEntityBroker broker = read.GetBroker<IStudyEntityBroker>();
            Study theObject = broker.Load(key);
            return theObject;
        }
        #endregion
    }
}
