#region License

// Copyright (c) 2006-2009, ClearCanvas Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, 
// are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice, 
//      this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, 
//      this list of conditions and the following disclaimer in the documentation 
//      and/or other materials provided with the distribution.
//    * Neither the name of ClearCanvas Inc. nor the names of its contributors 
//      may be used to endorse or promote products derived from this software without 
//      specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
// OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
// OF SUCH DAMAGE.

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;

    public partial class StudySelectCriteria : EntitySelectCriteria
    {
        public StudySelectCriteria()
        : base("Study")
        {}
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="AccessionNumber")]
        public ISearchCondition<System.String> AccessionNumber
        {
            get
            {
              if (!SubCriteria.ContainsKey("AccessionNumber"))
              {
                 SubCriteria["AccessionNumber"] = new SearchCondition<System.String>("AccessionNumber");
              }
              return (ISearchCondition<System.String>)SubCriteria["AccessionNumber"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="IssuerOfPatientId")]
        public ISearchCondition<System.String> IssuerOfPatientId
        {
            get
            {
              if (!SubCriteria.ContainsKey("IssuerOfPatientId"))
              {
                 SubCriteria["IssuerOfPatientId"] = new SearchCondition<System.String>("IssuerOfPatientId");
              }
              return (ISearchCondition<System.String>)SubCriteria["IssuerOfPatientId"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="NumberOfStudyRelatedInstances")]
        public ISearchCondition<System.Int32> NumberOfStudyRelatedInstances
        {
            get
            {
              if (!SubCriteria.ContainsKey("NumberOfStudyRelatedInstances"))
              {
                 SubCriteria["NumberOfStudyRelatedInstances"] = new SearchCondition<System.Int32>("NumberOfStudyRelatedInstances");
              }
              return (ISearchCondition<System.Int32>)SubCriteria["NumberOfStudyRelatedInstances"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="NumberOfStudyRelatedSeries")]
        public ISearchCondition<System.Int32> NumberOfStudyRelatedSeries
        {
            get
            {
              if (!SubCriteria.ContainsKey("NumberOfStudyRelatedSeries"))
              {
                 SubCriteria["NumberOfStudyRelatedSeries"] = new SearchCondition<System.Int32>("NumberOfStudyRelatedSeries");
              }
              return (ISearchCondition<System.Int32>)SubCriteria["NumberOfStudyRelatedSeries"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="PatientGUID")]
        public ISearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey> PatientKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientKey"))
              {
                 SubCriteria["PatientKey"] = new SearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey>("PatientKey");
              }
              return (ISearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey>)SubCriteria["PatientKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="PatientId")]
        public ISearchCondition<System.String> PatientId
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientId"))
              {
                 SubCriteria["PatientId"] = new SearchCondition<System.String>("PatientId");
              }
              return (ISearchCondition<System.String>)SubCriteria["PatientId"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="PatientsAge")]
        public ISearchCondition<System.String> PatientsAge
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientsAge"))
              {
                 SubCriteria["PatientsAge"] = new SearchCondition<System.String>("PatientsAge");
              }
              return (ISearchCondition<System.String>)SubCriteria["PatientsAge"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="PatientsBirthDate")]
        public ISearchCondition<System.String> PatientsBirthDate
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientsBirthDate"))
              {
                 SubCriteria["PatientsBirthDate"] = new SearchCondition<System.String>("PatientsBirthDate");
              }
              return (ISearchCondition<System.String>)SubCriteria["PatientsBirthDate"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="PatientsName")]
        public ISearchCondition<System.String> PatientsName
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientsName"))
              {
                 SubCriteria["PatientsName"] = new SearchCondition<System.String>("PatientsName");
              }
              return (ISearchCondition<System.String>)SubCriteria["PatientsName"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="PatientsSex")]
        public ISearchCondition<System.String> PatientsSex
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientsSex"))
              {
                 SubCriteria["PatientsSex"] = new SearchCondition<System.String>("PatientsSex");
              }
              return (ISearchCondition<System.String>)SubCriteria["PatientsSex"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="ReferringPhysiciansName")]
        public ISearchCondition<System.String> ReferringPhysiciansName
        {
            get
            {
              if (!SubCriteria.ContainsKey("ReferringPhysiciansName"))
              {
                 SubCriteria["ReferringPhysiciansName"] = new SearchCondition<System.String>("ReferringPhysiciansName");
              }
              return (ISearchCondition<System.String>)SubCriteria["ReferringPhysiciansName"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="ServerPartitionGUID")]
        public ISearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey> ServerPartitionKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("ServerPartitionKey"))
              {
                 SubCriteria["ServerPartitionKey"] = new SearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey>("ServerPartitionKey");
              }
              return (ISearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey>)SubCriteria["ServerPartitionKey"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="SpecificCharacterSet")]
        public ISearchCondition<System.String> SpecificCharacterSet
        {
            get
            {
              if (!SubCriteria.ContainsKey("SpecificCharacterSet"))
              {
                 SubCriteria["SpecificCharacterSet"] = new SearchCondition<System.String>("SpecificCharacterSet");
              }
              return (ISearchCondition<System.String>)SubCriteria["SpecificCharacterSet"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="StudyDate")]
        public ISearchCondition<System.String> StudyDate
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyDate"))
              {
                 SubCriteria["StudyDate"] = new SearchCondition<System.String>("StudyDate");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyDate"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="StudyDescription")]
        public ISearchCondition<System.String> StudyDescription
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyDescription"))
              {
                 SubCriteria["StudyDescription"] = new SearchCondition<System.String>("StudyDescription");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyDescription"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="StudyId")]
        public ISearchCondition<System.String> StudyId
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyId"))
              {
                 SubCriteria["StudyId"] = new SearchCondition<System.String>("StudyId");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyId"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="StudyInstanceUid")]
        public ISearchCondition<System.String> StudyInstanceUid
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyInstanceUid"))
              {
                 SubCriteria["StudyInstanceUid"] = new SearchCondition<System.String>("StudyInstanceUid");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyInstanceUid"];
            } 
        }
        [EntityFieldDatabaseMappingAttribute(TableName="Study", ColumnName="StudyTime")]
        public ISearchCondition<System.String> StudyTime
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyTime"))
              {
                 SubCriteria["StudyTime"] = new SearchCondition<System.String>("StudyTime");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyTime"];
            } 
        }
    }
}
