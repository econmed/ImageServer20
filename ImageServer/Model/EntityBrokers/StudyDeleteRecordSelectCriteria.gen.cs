#region License

// Copyright (c) 2006-2008, ClearCanvas Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, 
// are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice, 
//      this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, 
//      this list of conditions and the following disclaimer in the documentation 
//      and/or other materials provided with the distribution.
//    * Neither the name of ClearCanvas Inc. nor the names of its contributors 
//      may be used to endorse or promote products derived from this software without 
//      specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
// OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
// OF SUCH DAMAGE.

#endregion

// This file is auto-generated by the ClearCanvas.Model.SqlServer2005.CodeGenerator project.

namespace ClearCanvas.ImageServer.Model.EntityBrokers
{
    using ClearCanvas.Enterprise.Core;
    using ClearCanvas.ImageServer.Enterprise;

    public partial class StudyDeleteRecordSelectCriteria : EntitySelectCriteria
    {
        public StudyDeleteRecordSelectCriteria()
        : base("StudyDeleteRecord")
        {}
        public ISearchCondition<System.String> AccessionNumber
        {
            get
            {
              if (!SubCriteria.ContainsKey("AccessionNumber"))
              {
                 SubCriteria["AccessionNumber"] = new SearchCondition<System.String>("AccessionNumber");
              }
              return (ISearchCondition<System.String>)SubCriteria["AccessionNumber"];
            } 
        }
        public ISearchCondition<System.Xml.XmlDocument> ArchiveInfo
        {
            get
            {
              if (!SubCriteria.ContainsKey("ArchiveInfo"))
              {
                 SubCriteria["ArchiveInfo"] = new SearchCondition<System.Xml.XmlDocument>("ArchiveInfo");
              }
              return (ISearchCondition<System.Xml.XmlDocument>)SubCriteria["ArchiveInfo"];
            } 
        }
        public ISearchCondition<System.String> BackupPath
        {
            get
            {
              if (!SubCriteria.ContainsKey("BackupPath"))
              {
                 SubCriteria["BackupPath"] = new SearchCondition<System.String>("BackupPath");
              }
              return (ISearchCondition<System.String>)SubCriteria["BackupPath"];
            } 
        }
        public ISearchCondition<System.String> ExtendedInfo
        {
            get
            {
              if (!SubCriteria.ContainsKey("ExtendedInfo"))
              {
                 SubCriteria["ExtendedInfo"] = new SearchCondition<System.String>("ExtendedInfo");
              }
              return (ISearchCondition<System.String>)SubCriteria["ExtendedInfo"];
            } 
        }
        public ISearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey> FilesystemKey
        {
            get
            {
              if (!SubCriteria.ContainsKey("FilesystemKey"))
              {
                 SubCriteria["FilesystemKey"] = new SearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey>("FilesystemKey");
              }
              return (ISearchCondition<ClearCanvas.ImageServer.Enterprise.ServerEntityKey>)SubCriteria["FilesystemKey"];
            } 
        }
        public ISearchCondition<System.String> PatientId
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientId"))
              {
                 SubCriteria["PatientId"] = new SearchCondition<System.String>("PatientId");
              }
              return (ISearchCondition<System.String>)SubCriteria["PatientId"];
            } 
        }
        public ISearchCondition<System.String> PatientsName
        {
            get
            {
              if (!SubCriteria.ContainsKey("PatientsName"))
              {
                 SubCriteria["PatientsName"] = new SearchCondition<System.String>("PatientsName");
              }
              return (ISearchCondition<System.String>)SubCriteria["PatientsName"];
            } 
        }
        public ISearchCondition<System.String> Reason
        {
            get
            {
              if (!SubCriteria.ContainsKey("Reason"))
              {
                 SubCriteria["Reason"] = new SearchCondition<System.String>("Reason");
              }
              return (ISearchCondition<System.String>)SubCriteria["Reason"];
            } 
        }
        public ISearchCondition<System.String> ServerPartitionAE
        {
            get
            {
              if (!SubCriteria.ContainsKey("ServerPartitionAE"))
              {
                 SubCriteria["ServerPartitionAE"] = new SearchCondition<System.String>("ServerPartitionAE");
              }
              return (ISearchCondition<System.String>)SubCriteria["ServerPartitionAE"];
            } 
        }
        public ISearchCondition<System.String> StudyDate
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyDate"))
              {
                 SubCriteria["StudyDate"] = new SearchCondition<System.String>("StudyDate");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyDate"];
            } 
        }
        public ISearchCondition<System.String> StudyDescription
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyDescription"))
              {
                 SubCriteria["StudyDescription"] = new SearchCondition<System.String>("StudyDescription");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyDescription"];
            } 
        }
        public ISearchCondition<System.String> StudyId
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyId"))
              {
                 SubCriteria["StudyId"] = new SearchCondition<System.String>("StudyId");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyId"];
            } 
        }
        public ISearchCondition<System.String> StudyInstanceUid
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyInstanceUid"))
              {
                 SubCriteria["StudyInstanceUid"] = new SearchCondition<System.String>("StudyInstanceUid");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyInstanceUid"];
            } 
        }
        public ISearchCondition<System.String> StudyTime
        {
            get
            {
              if (!SubCriteria.ContainsKey("StudyTime"))
              {
                 SubCriteria["StudyTime"] = new SearchCondition<System.String>("StudyTime");
              }
              return (ISearchCondition<System.String>)SubCriteria["StudyTime"];
            } 
        }
        public ISearchCondition<System.DateTime> Timestamp
        {
            get
            {
              if (!SubCriteria.ContainsKey("Timestamp"))
              {
                 SubCriteria["Timestamp"] = new SearchCondition<System.DateTime>("Timestamp");
              }
              return (ISearchCondition<System.DateTime>)SubCriteria["Timestamp"];
            } 
        }
    }
}
