using System;
using System.Collections;
using System.Text;

using Iesi.Collections;
using ClearCanvas.Enterprise;
using <%= @namespace %>.Brokers;


namespace <%= @namespace %> {

    /// <summary>
    /// Base interface for service layers that make use of this domain model.
    /// This file is machine generated - changes will be lost.
    /// </summary>
	public interface I<%= shortName %>ServiceLayer : IServiceLayer
	{
		<% @entityDefs.each do |e| %>
		/// <summary>
		/// Provides notification when a <see cref="<%= e.className %>"/> entity changes.  This
		/// is actually just a convenience method that allows a client to hook into notifications
		/// from the transaction monitor associated with the session.  If you subscribe to this event,
		/// it is extremely important to explicitly unsubscribe.
		/// </summary>
		event EventHandler<EntityChangeEventArgs> <%= e.className %>Changed;
	  	<% end %>
	
		<% @enumDefs.each do |e| %>
		/// <summary>
		/// Returns the <see cref="<%= e.enumName %>"/> enum table
		/// </summary>
		EnumTable<<%= e.enumName %>, <%= e.className %>> <%= e.className %>Table { get; }
	  	<% end %>
  	
	}
}