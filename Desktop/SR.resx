<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationName" xml:space="preserve">
    <value>ClearCanvas Workstation</value>
  </data>
  <data name="ExceptionActionBuilderEventDoesNotExist" xml:space="preserve">
    <value>The event {0} does not exist for class {1}.</value>
  </data>
  <data name="ExceptionActionBuilderMethodDoesNotExist" xml:space="preserve">
    <value>The method {0} does not exist for class {1}, or it does not have the correct signature.</value>
  </data>
  <data name="ExceptionActionBuilderPropertyDoesNotExist" xml:space="preserve">
    <value>The property {0} does not exist for class {1}, or it does not have the correct return type.</value>
  </data>
  <data name="ExceptionActionBuilderPropertyDoesNotHavePublicGetMethod" xml:space="preserve">
    <value>The property {0} on class {1} does not have a public get method.</value>
  </data>
  <data name="ExceptionActiveWorkspaceCannotBeNull" xml:space="preserve">
    <value>Cannot set the active workspace to null.</value>
  </data>
  <data name="ExceptionAssociateViewAttributeNotSpecified" xml:space="preserve">
    <value>An AssociateViewAttribute must be specified for the input Type in order to create the Associated View.</value>
  </data>
  <data name="ExceptionCannotLoadExceptionDialogSetting" xml:space="preserve">
    <value>Cannot load exception dialog settings - defaulting to detailed view</value>
  </data>
  <data name="ExceptionCannotSetPaneAfterContainerStarted" xml:space="preserve">
    <value>Cannot set pane after container has been started.</value>
  </data>
  <data name="ExceptionComponentAlreadyStarted" xml:space="preserve">
    <value>Component has already been started.</value>
  </data>
  <data name="ExceptionComponentNeverStarted" xml:space="preserve">
    <value>Component was never started, or has already been stopped.</value>
  </data>
  <data name="ExceptionContainerAlreadyStarted" xml:space="preserve">
    <value>Container has already been started</value>
  </data>
  <data name="ExceptionContainerNeverStarted" xml:space="preserve">
    <value>Container was never started, or has already been stopped.</value>
  </data>
  <data name="ExceptionDesktopViewNotCreated" xml:space="preserve">
    <value>The main desktop view has not been created.</value>
  </data>
  <data name="ExceptionInvalidActionPath" xml:space="preserve">
    <value>Invalid action path.  Path must have 2 or more segments.</value>
  </data>
  <data name="ExceptionObjectAlreadyInCollection" xml:space="preserve">
    <value>Collection already contains this object</value>
  </data>
  <data name="ExceptionObjectWithNameAlreadyExists" xml:space="preserve">
    <value>An object with the name {0} already exists</value>
  </data>
  <data name="ExceptionStackComponentCannotExit" xml:space="preserve">
    <value>Component cannot exit because it is not at the top of the component stack.</value>
  </data>
  <data name="ExceptionStackComponentCannotPop" xml:space="preserve">
    <value>Cannot pop - component stack is empty.</value>
  </data>
  <data name="ExceptionTableColumnMustBeAddedToDetermineWidth" xml:space="preserve">
    <value>This column must be added to a table to determine its percentage width.</value>
  </data>
  <data name="ExceptionTableItemNotFoundInCollection" xml:space="preserve">
    <value>Table item not found in collection.</value>
  </data>
  <data name="FormatDesktopWindowTitle" xml:space="preserve">
    <value>{0} [{1}]</value>
  </data>
  <data name="InvalidCustomDateFormat" xml:space="preserve">
    <value>The custom date format must be from the available list.</value>
  </data>
  <data name="MenuAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="MenuCloseWindow" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="MenuCloseWorkspace" xml:space="preserve">
    <value>Close Workspace</value>
  </data>
  <data name="MenuContents" xml:space="preserve">
    <value>Contents</value>
  </data>
  <data name="MenuEdit" xml:space="preserve">
    <value>&amp;Edit</value>
  </data>
  <data name="MenuFile" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="MenuIndex" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="MenuOptions" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="MenuTools" xml:space="preserve">
    <value>&amp;Tools</value>
  </data>
  <data name="MenuUtilities" xml:space="preserve">
    <value>Utilities</value>
  </data>
  <data name="MessageConfirmCancelTask" xml:space="preserve">
    <value>The background task is still running.  Are you sure you want to cancel?</value>
  </data>
  <data name="MessageConfirmDiscardChangesBeforeClosing" xml:space="preserve">
    <value>Data has been modified and changes will be lost.  Discard changes and close?</value>
  </data>
  <data name="MessageNoConfigurationPagesExist" xml:space="preserve">
    <value>No configuration pages exist.</value>
  </data>
  <data name="TitleCloseAssistant" xml:space="preserve">
    <value>Close Assistant</value>
  </data>
  <data name="TitleDateFormat" xml:space="preserve">
    <value>Date Format</value>
  </data>
  <data name="TitleMenuOptions" xml:space="preserve">
    <value>Options</value>
  </data>
</root>