#region License

// Copyright (c) 2006-2007, ClearCanvas Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, 
// are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice, 
//      this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, 
//      this list of conditions and the following disclaimer in the documentation 
//      and/or other materials provided with the distribution.
//    * Neither the name of ClearCanvas Inc. nor the names of its contributors 
//      may be used to endorse or promote products derived from this software without 
//      specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
// OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
// GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
// ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
// OF SUCH DAMAGE.

#endregion

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Dicom.DataStore {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ClearCanvas.Dicom.DataStore.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only update an existing series from a Dicom data set with the same SeriesInstanceUid..
        /// </summary>
        internal static string ExceptionCanOnlyUpdateExistingSeriesWithSameSeriesUid {
            get {
                return ResourceManager.GetString("ExceptionCanOnlyUpdateExistingSeriesWithSameSeriesUid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only update an existing sop instance from a Dicom data set with the same SopInstanceUid..
        /// </summary>
        internal static string ExceptionCanOnlyUpdateExistingSopWithSameSopInstanceUid {
            get {
                return ResourceManager.GetString("ExceptionCanOnlyUpdateExistingSopWithSameSopInstanceUid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only update an existing study from a Dicom data set with the same StudyInstanceUid..
        /// </summary>
        internal static string ExceptionCanOnlyUpdateExistingStudyWithSameStudyUid {
            get {
                return ResourceManager.GetString("ExceptionCanOnlyUpdateExistingStudyWithSameStudyUid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to clear all studies from the data store..
        /// </summary>
        internal static string ExceptionFailedToClearAllStudies {
            get {
                return ResourceManager.GetString("ExceptionFailedToClearAllStudies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to clear the specified series from the data store..
        /// </summary>
        internal static string ExceptionFailedToClearSeries {
            get {
                return ResourceManager.GetString("ExceptionFailedToClearSeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to clear the specified sop instance(s) from the data store..
        /// </summary>
        internal static string ExceptionFailedToClearSopInstances {
            get {
                return ResourceManager.GetString("ExceptionFailedToClearSopInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to clear the specified study(s) from the data store..
        /// </summary>
        internal static string ExceptionFailedToClearStudies {
            get {
                return ResourceManager.GetString("ExceptionFailedToClearStudies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to commit images to the data store..
        /// </summary>
        internal static string ExceptionFailedToCommitImagesToDatastore {
            get {
                return ResourceManager.GetString("ExceptionFailedToCommitImagesToDatastore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to perform a study query..
        /// </summary>
        internal static string ExceptionFailedToPerformStudyQuery {
            get {
                return ResourceManager.GetString("ExceptionFailedToPerformStudyQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to retrieve all studies from the datastore..
        /// </summary>
        internal static string ExceptionFailedToRetrieveAllStudies {
            get {
                return ResourceManager.GetString("ExceptionFailedToRetrieveAllStudies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save series to the data store..
        /// </summary>
        internal static string ExceptionFailedToStoreSeries {
            get {
                return ResourceManager.GetString("ExceptionFailedToStoreSeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save sop instance(s) to the data store..
        /// </summary>
        internal static string ExceptionFailedToStoreSopInstances {
            get {
                return ResourceManager.GetString("ExceptionFailedToStoreSopInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save study(s) to the data store..
        /// </summary>
        internal static string ExceptionFailedToStoreStudies {
            get {
                return ResourceManager.GetString("ExceptionFailedToStoreStudies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize associated collection (Type {0}) for Type {1}..
        /// </summary>
        internal static string ExceptionFormatFailedToInitializeAssociatedCollection {
            get {
                return ResourceManager.GetString("ExceptionFormatFailedToInitializeAssociatedCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to retrieve the series &apos;{0}&apos; from the datastore..
        /// </summary>
        internal static string ExceptionFormatFailedToRetrieveSeries {
            get {
                return ResourceManager.GetString("ExceptionFormatFailedToRetrieveSeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to retrieve the sop instance &apos;{0}&apos; from the datastore..
        /// </summary>
        internal static string ExceptionFormatFailedToRetrieveSop {
            get {
                return ResourceManager.GetString("ExceptionFormatFailedToRetrieveSop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to retrieve the study &apos;{0}&apos; from the datastore..
        /// </summary>
        internal static string ExceptionFormatFailedToRetrieveStudy {
            get {
                return ResourceManager.GetString("ExceptionFormatFailedToRetrieveStudy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SeriesInstanceUid &apos;{0}&apos; already belongs to a different existing study (&apos;{1}&apos;)..
        /// </summary>
        internal static string ExceptionFormatSeriesAlreadyBelongsToExistingStudy {
            get {
                return ResourceManager.GetString("ExceptionFormatSeriesAlreadyBelongsToExistingStudy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to determine whether or not the series &apos;{0}&apos; exists in the datastore..
        /// </summary>
        internal static string ExceptionFormatSeriesExistsFailed {
            get {
                return ResourceManager.GetString("ExceptionFormatSeriesExistsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SopInstanceUid &apos;{0}&apos; already belongs to a different existing series (&apos;{1}&apos;)..
        /// </summary>
        internal static string ExceptionFormatSopAlreadyBelongsToExistingSeries {
            get {
                return ResourceManager.GetString("ExceptionFormatSopAlreadyBelongsToExistingSeries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to determine whether or not the sop instance &apos;{0}&apos; exists in the datastore..
        /// </summary>
        internal static string ExceptionFormatSopExistsFailed {
            get {
                return ResourceManager.GetString("ExceptionFormatSopExistsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to determine whether or not the study &apos;{0}&apos; exists in the datastore..
        /// </summary>
        internal static string ExceptionFormatStudyExistsFailed {
            get {
                return ResourceManager.GetString("ExceptionFormatStudyExistsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ModalitiesInStudy Key Attribute cannot contain wildcards..
        /// </summary>
        internal static string ExceptionModalitiesInStudyWildcardsNotSupported {
            get {
                return ResourceManager.GetString("ExceptionModalitiesInStudyWildcardsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sessions may only be used on a single thread..
        /// </summary>
        internal static string ExceptionSessionsCanOnlyBeUsedOnOneThread {
            get {
                return ResourceManager.GetString("ExceptionSessionsCanOnlyBeUsedOnOneThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tag name cannot be null or empty..
        /// </summary>
        internal static string ExceptionTagNameCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ExceptionTagNameCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Uri cannot be null or empty..
        /// </summary>
        internal static string ExceptionUriCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ExceptionUriCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load Dicom dictionary with name &apos;{0}&apos;..
        /// </summary>
        internal static string FormatDicomDictionaryFailedToLoad {
            get {
                return ResourceManager.GetString("FormatDicomDictionaryFailedToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A corresponding column does not exist in the dictionary for path &apos;{0}&apos;..
        /// </summary>
        internal static string FormatSpecifiedColumnDoesNotExistForPath {
            get {
                return ResourceManager.GetString("FormatSpecifiedColumnDoesNotExistForPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A corresponding column does not exist in the dictionary for tag &apos;{0}&apos;..
        /// </summary>
        internal static string FormatSpecifiedColumnDoesNotExistForTag {
            get {
                return ResourceManager.GetString("FormatSpecifiedColumnDoesNotExistForTag", resourceCulture);
            }
        }
    }
}
