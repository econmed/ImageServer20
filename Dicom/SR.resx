<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceptionNullReference" xml:space="preserve">
    <value>{0} is null</value>
  </data>
  <data name="ExceptionDICOMTag" xml:space="preserve">
    <value>Tag: {0} - {1}</value>
  </data>
  <data name="ExceptionDICOMFile" xml:space="preserve">
    <value>File: {0} - {1}</value>
  </data>
  <data name="ExceptionDecodingBadModuleNumber" xml:space="preserve">
    <value>The module number provided from the OFFIS toolkit is unexpected and cannot be dealt with in this version of the software.</value>
  </data>
  <data name="ExceptionOffisAssociationBadPresentationContextId" xml:space="preserve">
    <value>Bad presentation context ID</value>
  </data>
  <data name="ExceptionOffisAssociationMissingTransferSyntax" xml:space="preserve">
    <value>Missing transfer syntax</value>
  </data>
  <data name="ExceptionOffisAssociationNullKey" xml:space="preserve">
    <value>User passed in a NULL key</value>
  </data>
  <data name="ExceptionOffisAssociationShutdownApplication" xml:space="preserve">
    <value>Application shutdown requested</value>
  </data>
  <data name="ExceptionOffisDimseBadCommandType" xml:space="preserve">
    <value>Bad command type</value>
  </data>
  <data name="ExceptionOffisDimseBadData" xml:space="preserve">
    <value>Inappropriate data for message</value>
  </data>
  <data name="ExceptionOffisDimseBadMessage" xml:space="preserve">
    <value>Badly formed message</value>
  </data>
  <data name="ExceptionOffisDimseIllegalAssociation" xml:space="preserve">
    <value>Caller passed in an illegal association</value>
  </data>
  <data name="ExceptionOffisDimseNoDataAvailable" xml:space="preserve">
    <value>No data available (timeout occurred in non-blocking mode)</value>
  </data>
  <data name="ExceptionOffisDimseNoDataDictionary" xml:space="preserve">
    <value>Data dictionary missing</value>
  </data>
  <data name="ExceptionOffisDimseNoValidPresentationContextId" xml:space="preserve">
    <value>No valid Presentation Context ID</value>
  </data>
  <data name="ExceptionOffisDimseNullKey" xml:space="preserve">
    <value>Caller passed in a NULL key</value>
  </data>
  <data name="ExceptionOffisDimseOutOfResources" xml:space="preserve">
    <value>Out of resources</value>
  </data>
  <data name="ExceptionOffisDimseParseFailed" xml:space="preserve">
    <value>Failed to parse received message</value>
  </data>
  <data name="ExceptionOffisDimseReadPDVFailed" xml:space="preserve">
    <value>Read PDV failed</value>
  </data>
  <data name="ExceptionOffisDimseReceiveFailed" xml:space="preserve">
    <value>Failed to receive message</value>
  </data>
  <data name="ExceptionOffisDimseSendFailed" xml:space="preserve">
    <value>Failed to send message</value>
  </data>
  <data name="ExceptionOffisDimseUnexpectedPDVType" xml:space="preserve">
    <value>Unexpected PDV type</value>
  </data>
  <data name="ExceptionOffisDulAssociationRejected" xml:space="preserve">
    <value>Association rejected</value>
  </data>
  <data name="ExceptionOffisDulIllegalAccept" xml:space="preserve">
    <value>Attempt to accept by requestor</value>
  </data>
  <data name="ExceptionOffisDulIllegalKey" xml:space="preserve">
    <value>Illegal key</value>
  </data>
  <data name="ExceptionOffisDulIllegalPdu" xml:space="preserve">
    <value>Illegal or ill-formed PDU</value>
  </data>
  <data name="ExceptionOffisDulIllegalPduLength" xml:space="preserve">
    <value>Illegal PDU length</value>
  </data>
  <data name="ExceptionOffisDulIllegalRequest" xml:space="preserve">
    <value>Attempt to request by acceptor</value>
  </data>
  <data name="ExceptionOffisDulIncorrectBufferLength" xml:space="preserve">
    <value>Incorrect buffer space allocated for data</value>
  </data>
  <data name="ExceptionOffisDulInsufficientBufferLength" xml:space="preserve">
    <value>Insufficient buffer space allocated for data</value>
  </data>
  <data name="ExceptionOffisDulListError" xml:space="preserve">
    <value>List error</value>
  </data>
  <data name="ExceptionOffisDulNetworkClosed" xml:space="preserve">
    <value>Network closed</value>
  </data>
  <data name="ExceptionOffisDulNoAssociationRequest" xml:space="preserve">
    <value>No requests for associations for this server</value>
  </data>
  <data name="ExceptionOffisDulNoPdvs" xml:space="preserve">
    <value>No PDVs available in current buffer</value>
  </data>
  <data name="ExceptionOffisDulNullKey" xml:space="preserve">
    <value>NULL key passed to routine</value>
  </data>
  <data name="ExceptionOffisDulPCTranslationFailure" xml:space="preserve">
    <value>Presentation Context translation failure</value>
  </data>
  <data name="ExceptionOffisDulPDataPduArrived" xml:space="preserve">
    <value>P-Data PDU arrived</value>
  </data>
  <data name="ExceptionOffisDulPeerAbortedAssociation" xml:space="preserve">
    <value>Peer aborted association (or never connected)</value>
  </data>
  <data name="ExceptionOffisDulPeerRequestedRelease" xml:space="preserve">
    <value>Peer requested release</value>
  </data>
  <data name="ExceptionOffisDulReadTimeout" xml:space="preserve">
    <value>Network read timeout</value>
  </data>
  <data name="ExceptionOffisDulRequestAssociationFailed" xml:space="preserve">
    <value>Failed to establish association</value>
  </data>
  <data name="ExceptionOffisDulUnexpectedPdu" xml:space="preserve">
    <value>Received unexpected PDU</value>
  </data>
  <data name="ExceptionOffisDulUnsupportedPeerProtocol" xml:space="preserve">
    <value>Unsupported peer protocol</value>
  </data>
  <data name="ExceptionOffisDulWrongDataType" xml:space="preserve">
    <value>Wrong data type specified for request</value>
  </data>
  <data name="ExceptionOffisFormatNetwork" xml:space="preserve">
    <value>- {0} - {1} @ {2} {3} (Error 0x{4:x4})</value>
    <comment>0 - module name, 1 is error text in english, 2 is the AE Title, 3 is the hostname:port string, 4 is error code in hex</comment>
  </data>
  <data name="ExceptionOffisModuleAssociation" xml:space="preserve">
    <value>Association</value>
    <comment>English text indicating error occurred in the Association Module</comment>
  </data>
  <data name="ExceptionOffisModuleDimse" xml:space="preserve">
    <value>DIMSE</value>
    <comment>English text indicating error occured in the DIMSE Module</comment>
  </data>
  <data name="ExceptionOffisModuleDul" xml:space="preserve">
    <value>DICOM Upper Layer</value>
    <comment>English text indicating error occurred in the DUL Module TEST</comment>
  </data>
  <data name="ExceptionOffisUnknownError" xml:space="preserve">
    <value>An unknown error occurred in the OFFIS DICOM subsystem</value>
  </data>
  <data name="ExceptionDicomSaveDirectoryDoesNotExist" xml:space="preserve">
    <value>The specified directory where incoming DICOM objects should be saved does not exist - {0}</value>
    <comment>0 - path of save directory</comment>
  </data>
  <data name="ExceptionDicomNullDataset" xml:space="preserve">
    <value>The passed in dataset is null</value>
    <comment>Currently used in the client calls to affect a Retrieve</comment>
  </data>
  <data name="ExceptionDicomConnectionTimeoutOutOfRange" xml:space="preserve">
    <value>The connection timeout value must be between 1 and 32767</value>
  </data>
  <data name="ExceptionDicomPatientLevelQueryInvalid" xml:space="preserve">
    <value>PATIENT level query using the Study Root Query/Retrieve Information model is invalid</value>
  </data>
  <data name="ExceptionDicomCannotHandleNonDcmNetModules" xml:space="preserve">
    <value>The OFFIS error parser cannot handle errors from modules other than DcmNet</value>
  </data>
  <data name="ExceptionDicomListeningPortOutOfRange" xml:space="preserve">
    <value>The listeningPort must be greater than zero and less than System.Int32.MaxValue</value>
  </data>
  <data name="ExceptionDicomSaveDirectoryNull" xml:space="preserve">
    <value>The directory where inbound DICOM objects are stored cannot be null</value>
  </data>
  <data name="ExceptionGeneralPersonsNameNull" xml:space="preserve">
    <value>Patient's Name cannot be null</value>
  </data>
  <data name="ExceptionGeneralUidCompareToTypeIncorrect" xml:space="preserve">
    <value>The argument to CompareTo for the type Uid is not itself of type Uid</value>
  </data>
  <data name="ExceptionDicomAETitleNull" xml:space="preserve">
    <value>The AE Title cannot be null</value>
  </data>
  <data name="ExceptionDicomHostnameNull" xml:space="preserve">
    <value>The hostname cannot be null</value>
  </data>
  <data name="ExceptionDicomHostnameZeroLength" xml:space="preserve">
    <value>The hostname cannot be zero-length</value>
  </data>
  <data name="ExceptionDicomAETitleZeroLength" xml:space="preserve">
    <value>The AE Title cannot be zero-length</value>
  </data>
  <data name="ExceptionDicomFindDatasetNull" xml:space="preserve">
    <value>The find dataset cannot be null</value>
  </data>
  <data name="ExceptionDicomMoveDatasetNull" xml:space="preserve">
    <value>The move dataset cannot be null</value>
  </data>
  <data name="ExceptionGeneralAccessionNull" xml:space="preserve">
    <value>The Accession Number cannot be null</value>
  </data>
  <data name="ExceptionGeneralAccessionZeroLength" xml:space="preserve">
    <value>The Accession Number cannot be zero-length</value>
  </data>
  <data name="ExceptionGeneralUidNull" xml:space="preserve">
    <value>The UID cannot be null</value>
  </data>
  <data name="ExceptionGeneralUidZeroLength" xml:space="preserve">
    <value>The UID cannot be zero-length</value>
  </data>
  <data name="ExceptionGeneralEqualsWrongType" xml:space="preserve">
    <value>The object passed is is not of the right type for Equals comparison.</value>
  </data>
  <data name="ExceptionDicomTransferSyntaxNotSupported" xml:space="preserve">
    <value>Transfer syntax {0} for SOP UID = {1} not supported.  Compressed pixel data cannot be loaded at this time.</value>
  </data>
  <data name="ExceptionGeneralPatientIdNull" xml:space="preserve">
    <value>Patient's Id cannot be null</value>
  </data>
</root>