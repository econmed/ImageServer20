/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;
using System.Runtime.InteropServices;

public class OFCondition : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal OFCondition(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(OFCondition obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~OFCondition() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_OFCondition(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public OFCondition(OFConditionString baseCond) : this(DCMTKPINVOKE.new_OFCondition__SWIG_0(OFConditionString.getCPtr(baseCond)), true) {
  }

  public OFCondition(OFConditionConst baseCond) : this(DCMTKPINVOKE.new_OFCondition__SWIG_1(OFConditionConst.getCPtr(baseCond)), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public OFCondition() : this(DCMTKPINVOKE.new_OFCondition__SWIG_2(), true) {
  }

  public OFCondition(OFCondition arg) : this(DCMTKPINVOKE.new_OFCondition__SWIG_3(OFCondition.getCPtr(arg)), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public ushort module() {
    ushort ret = DCMTKPINVOKE.OFCondition_module(swigCPtr);
    return ret;
  }

  public ushort code() {
    ushort ret = DCMTKPINVOKE.OFCondition_code(swigCPtr);
    return ret;
  }

  public OFStatus status() {
    OFStatus ret = (OFStatus)DCMTKPINVOKE.OFCondition_status(swigCPtr);
    return ret;
  }

  public string text() {
    string ret = DCMTKPINVOKE.OFCondition_text(swigCPtr);
    return ret;
  }

  public bool good() {
    bool ret = DCMTKPINVOKE.OFCondition_good(swigCPtr);
    return ret;
  }

  public bool bad() {
    bool ret = DCMTKPINVOKE.OFCondition_bad(swigCPtr);
    return ret;
  }

}

}
