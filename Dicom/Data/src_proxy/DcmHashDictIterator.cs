/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;
using System.Runtime.InteropServices;

public class DcmHashDictIterator : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DcmHashDictIterator(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DcmHashDictIterator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DcmHashDictIterator() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_DcmHashDictIterator(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public DcmHashDictIterator() : this(DCMTKPINVOKE.new_DcmHashDictIterator__SWIG_0(), true) {
  }

  public DcmHashDictIterator(DcmHashDict d, bool atEnd) : this(DCMTKPINVOKE.new_DcmHashDictIterator__SWIG_1(DcmHashDict.getCPtr(d), atEnd), true) {
  }

  public DcmHashDictIterator(DcmHashDict d) : this(DCMTKPINVOKE.new_DcmHashDictIterator__SWIG_2(DcmHashDict.getCPtr(d)), true) {
  }

  public DcmHashDictIterator(DcmHashDictIterator i) : this(DCMTKPINVOKE.new_DcmHashDictIterator__SWIG_3(DcmHashDictIterator.getCPtr(i)), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public DcmDictEntry __ref__() {
    IntPtr cPtr = DCMTKPINVOKE.DcmHashDictIterator___ref__(swigCPtr);
    DcmDictEntry ret = (cPtr == IntPtr.Zero) ? null : new DcmDictEntry(cPtr, false);
    return ret;
  }

}

}
