/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.25
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace ClearCanvas.Common.Dicom {

using System;
using System.Text;
using System.Runtime.InteropServices;

public class OFDate : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal OFDate(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(OFDate obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~OFDate() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      DCMTKPINVOKE.delete_OFDate(swigCPtr);
    }
    swigCPtr = new HandleRef(null, IntPtr.Zero);
    GC.SuppressFinalize(this);
  }

  public OFDate() : this(DCMTKPINVOKE.new_OFDate__SWIG_0(), true) {
  }

  public OFDate(OFDate dateVal) : this(DCMTKPINVOKE.new_OFDate__SWIG_1(OFDate.getCPtr(dateVal)), true) {
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
  }

  public OFDate(uint year, uint month, uint day) : this(DCMTKPINVOKE.new_OFDate__SWIG_2(year, month, day), true) {
  }

  public virtual void clear() {
    DCMTKPINVOKE.OFDate_clear(swigCPtr);
  }

  public virtual bool isValid() {
    bool ret = DCMTKPINVOKE.OFDate_isValid(swigCPtr);
    return ret;
  }

  public bool setDate(uint year, uint month, uint day) {
    bool ret = DCMTKPINVOKE.OFDate_setDate(swigCPtr, year, month, day);
    return ret;
  }

  public bool setYear(uint year) {
    bool ret = DCMTKPINVOKE.OFDate_setYear(swigCPtr, year);
    return ret;
  }

  public bool setMonth(uint month) {
    bool ret = DCMTKPINVOKE.OFDate_setMonth(swigCPtr, month);
    return ret;
  }

  public bool setDay(uint day) {
    bool ret = DCMTKPINVOKE.OFDate_setDay(swigCPtr, day);
    return ret;
  }

  public bool setCurrentDate() {
    bool ret = DCMTKPINVOKE.OFDate_setCurrentDate(swigCPtr);
    return ret;
  }

  public bool setISOFormattedDate(string formattedDate) {
    bool ret = DCMTKPINVOKE.OFDate_setISOFormattedDate(swigCPtr, formattedDate);
    if (DCMTKPINVOKE.SWIGPendingException.Pending) throw DCMTKPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getYear() {
    uint ret = DCMTKPINVOKE.OFDate_getYear(swigCPtr);
    return ret;
  }

  public uint getMonth() {
    uint ret = DCMTKPINVOKE.OFDate_getMonth(swigCPtr);
    return ret;
  }

  public uint getDay() {
    uint ret = DCMTKPINVOKE.OFDate_getDay(swigCPtr);
    return ret;
  }

  public bool getISOFormattedDate(StringBuilder formattedDate, bool showDelimiter) {
    bool ret = DCMTKPINVOKE.OFDate_getISOFormattedDate__SWIG_0(swigCPtr, formattedDate, showDelimiter);
    return ret;
  }

  public bool getISOFormattedDate(StringBuilder formattedDate) {
    bool ret = DCMTKPINVOKE.OFDate_getISOFormattedDate__SWIG_1(swigCPtr, formattedDate);
    return ret;
  }

  public static OFDate getCurrentDate() {
    OFDate ret = new OFDate(DCMTKPINVOKE.OFDate_getCurrentDate(), true);
    return ret;
  }

}

}
