//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageViewer.Shreds.DicomServer
{
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DicomSendRequest : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DestinationAETitleField;
        
        private string DestinationHostNameField;
        
        private int PortField;
        
        private string[] UidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DestinationAETitle
        {
            get
            {
                return this.DestinationAETitleField;
            }
            set
            {
                this.DestinationAETitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DestinationHostName
        {
            get
            {
                return this.DestinationHostNameField;
            }
            set
            {
                this.DestinationHostNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Port
        {
            get
            {
                return this.PortField;
            }
            set
            {
                this.PortField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] Uids
        {
            get
            {
                return this.UidsField;
            }
            set
            {
                this.UidsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class DicomRetrieveRequest : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int PortField;
        
        private ClearCanvas.ImageViewer.Shreds.DicomServer.RetrieveLevel RetrieveLevelField;
        
        private string SourceAETitleField;
        
        private string SourceHostNameField;
        
        private string[] UidsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Port
        {
            get
            {
                return this.PortField;
            }
            set
            {
                this.PortField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClearCanvas.ImageViewer.Shreds.DicomServer.RetrieveLevel RetrieveLevel
        {
            get
            {
                return this.RetrieveLevelField;
            }
            set
            {
                this.RetrieveLevelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SourceAETitle
        {
            get
            {
                return this.SourceAETitleField;
            }
            set
            {
                this.SourceAETitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SourceHostName
        {
            get
            {
                return this.SourceHostNameField;
            }
            set
            {
                this.SourceHostNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] Uids
        {
            get
            {
                return this.UidsField;
            }
            set
            {
                this.UidsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    public enum RetrieveLevel : int
    {
        
        Study = 0,
        
        Series = 1,
        
        Image = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class GetServerSettingResponse : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AETitleField;
        
        private string HostNameField;
        
        private string InterimStorageDirectoryField;
        
        private int PortField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AETitle
        {
            get
            {
                return this.AETitleField;
            }
            set
            {
                this.AETitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string HostName
        {
            get
            {
                return this.HostNameField;
            }
            set
            {
                this.HostNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string InterimStorageDirectory
        {
            get
            {
                return this.InterimStorageDirectoryField;
            }
            set
            {
                this.InterimStorageDirectoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Port
        {
            get
            {
                return this.PortField;
            }
            set
            {
                this.PortField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdateServerSettingRequest : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AETitleField;
        
        private string HostNameField;
        
        private string InterimStorageDirectoryField;
        
        private int PortField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string AETitle
        {
            get
            {
                return this.AETitleField;
            }
            set
            {
                this.AETitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string HostName
        {
            get
            {
                return this.HostNameField;
            }
            set
            {
                this.HostNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string InterimStorageDirectory
        {
            get
            {
                return this.InterimStorageDirectoryField;
            }
            set
            {
                this.InterimStorageDirectoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Port
        {
            get
            {
                return this.PortField;
            }
            set
            {
                this.PortField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IDicomServerService")]
public interface IDicomServerService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDicomServerService/Send", ReplyAction="http://tempuri.org/IDicomServerService/SendResponse")]
    void Send(ClearCanvas.ImageViewer.Shreds.DicomServer.DicomSendRequest request);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDicomServerService/Retrieve", ReplyAction="http://tempuri.org/IDicomServerService/RetrieveResponse")]
    void Retrieve(ClearCanvas.ImageViewer.Shreds.DicomServer.DicomRetrieveRequest request);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDicomServerService/GetServerSetting", ReplyAction="http://tempuri.org/IDicomServerService/GetServerSettingResponse")]
    ClearCanvas.ImageViewer.Shreds.DicomServer.GetServerSettingResponse GetServerSetting();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDicomServerService/UpdateServerSetting", ReplyAction="http://tempuri.org/IDicomServerService/UpdateServerSettingResponse")]
    void UpdateServerSetting(ClearCanvas.ImageViewer.Shreds.DicomServer.UpdateServerSettingRequest request);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IDicomServerServiceChannel : IDicomServerService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class DicomServerServiceClient : System.ServiceModel.ClientBase<IDicomServerService>, IDicomServerService
{
    
    public DicomServerServiceClient()
    {
    }
    
    public DicomServerServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public DicomServerServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DicomServerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DicomServerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void Send(ClearCanvas.ImageViewer.Shreds.DicomServer.DicomSendRequest request)
    {
        base.Channel.Send(request);
    }
    
    public void Retrieve(ClearCanvas.ImageViewer.Shreds.DicomServer.DicomRetrieveRequest request)
    {
        base.Channel.Retrieve(request);
    }
    
    public ClearCanvas.ImageViewer.Shreds.DicomServer.GetServerSettingResponse GetServerSetting()
    {
        return base.Channel.GetServerSetting();
    }
    
    public void UpdateServerSetting(ClearCanvas.ImageViewer.Shreds.DicomServer.UpdateServerSettingRequest request)
    {
        base.Channel.UpdateServerSetting(request);
    }
}
