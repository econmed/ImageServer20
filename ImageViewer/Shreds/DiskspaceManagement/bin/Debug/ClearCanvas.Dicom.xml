<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClearCanvas.Dicom</name>
    </assembly>
    <members>
        <member name="T:ClearCanvas.Dicom.SR">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDecodingBadModuleNumber">
            <summary>
              Looks up a localized string similar to The module number provided from the OFFIS toolkit is unexpected and cannot be dealt with in this version of the software..
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomAETitleNull">
            <summary>
              Looks up a localized string similar to The AE Title cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomAETitleZeroLength">
            <summary>
              Looks up a localized string similar to The AE Title cannot be zero-length.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomCannotHandleNonDcmNetModules">
            <summary>
              Looks up a localized string similar to The OFFIS error parser cannot handle errors from modules other than DcmNet.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomConnectionTimeoutOutOfRange">
            <summary>
              Looks up a localized string similar to The connection timeout value must be between 1 and 32767.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDICOMFile">
            <summary>
              Looks up a localized string similar to File: {0} - {1}.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomFindDatasetNull">
            <summary>
              Looks up a localized string similar to The find dataset cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomHostnameNull">
            <summary>
              Looks up a localized string similar to The hostname cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomHostnameZeroLength">
            <summary>
              Looks up a localized string similar to The hostname cannot be zero-length.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomListeningPortOutOfRange">
            <summary>
              Looks up a localized string similar to The listeningPort must be greater than zero and less than System.Int32.MaxValue.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomMoveDatasetNull">
            <summary>
              Looks up a localized string similar to The move dataset cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomNullDataset">
            <summary>
              Looks up a localized string similar to The passed in dataset is null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomPatientLevelQueryInvalid">
            <summary>
              Looks up a localized string similar to PATIENT level query using the Study Root Query/Retrieve Information model is invalid.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomSaveDirectoryDoesNotExist">
            <summary>
              Looks up a localized string similar to The specified directory where incoming DICOM objects should be saved does not exist - {0}.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomSaveDirectoryNull">
            <summary>
              Looks up a localized string similar to The directory where inbound DICOM objects are stored cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDICOMTag">
            <summary>
              Looks up a localized string similar to Tag: {0} - {1}.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionDicomTransferSyntaxNotSupported">
            <summary>
              Looks up a localized string similar to Transfer syntax {0} for SOP UID = {1} not supported.  Compressed pixel data cannot be loaded at this time..
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralAccessionNull">
            <summary>
              Looks up a localized string similar to The Accession Number cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralAccessionZeroLength">
            <summary>
              Looks up a localized string similar to The Accession Number cannot be zero-length.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralEqualsWrongType">
            <summary>
              Looks up a localized string similar to The object passed is is not of the right type for Equals comparison..
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralPatientIdNull">
            <summary>
              Looks up a localized string similar to Patient&apos;s Id cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralPersonsNameNull">
            <summary>
              Looks up a localized string similar to Patient&apos;s Name cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralUidCompareToTypeIncorrect">
            <summary>
              Looks up a localized string similar to The argument to CompareTo for the type Uid is not itself of type Uid.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralUidNull">
            <summary>
              Looks up a localized string similar to The UID cannot be null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionGeneralUidZeroLength">
            <summary>
              Looks up a localized string similar to The UID cannot be zero-length.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionNullReference">
            <summary>
              Looks up a localized string similar to {0} is null.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisAssociationBadPresentationContextId">
            <summary>
              Looks up a localized string similar to Bad presentation context ID.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisAssociationMissingTransferSyntax">
            <summary>
              Looks up a localized string similar to Missing transfer syntax.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisAssociationNullKey">
            <summary>
              Looks up a localized string similar to User passed in a NULL key.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisAssociationShutdownApplication">
            <summary>
              Looks up a localized string similar to Application shutdown requested.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseBadCommandType">
            <summary>
              Looks up a localized string similar to Bad command type.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseBadData">
            <summary>
              Looks up a localized string similar to Inappropriate data for message.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseBadMessage">
            <summary>
              Looks up a localized string similar to Badly formed message.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseIllegalAssociation">
            <summary>
              Looks up a localized string similar to Caller passed in an illegal association.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseNoDataAvailable">
            <summary>
              Looks up a localized string similar to No data available (timeout occurred in non-blocking mode).
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseNoDataDictionary">
            <summary>
              Looks up a localized string similar to Data dictionary missing.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseNoValidPresentationContextId">
            <summary>
              Looks up a localized string similar to No valid Presentation Context ID.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseNullKey">
            <summary>
              Looks up a localized string similar to Caller passed in a NULL key.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseOutOfResources">
            <summary>
              Looks up a localized string similar to Out of resources.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseParseFailed">
            <summary>
              Looks up a localized string similar to Failed to parse received message.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseReadPDVFailed">
            <summary>
              Looks up a localized string similar to Read PDV failed.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseReceiveFailed">
            <summary>
              Looks up a localized string similar to Failed to receive message.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseSendFailed">
            <summary>
              Looks up a localized string similar to Failed to send message.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDimseUnexpectedPDVType">
            <summary>
              Looks up a localized string similar to Unexpected PDV type.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulAssociationRejected">
            <summary>
              Looks up a localized string similar to Association rejected.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulIllegalAccept">
            <summary>
              Looks up a localized string similar to Attempt to accept by requestor.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulIllegalKey">
            <summary>
              Looks up a localized string similar to Illegal key.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulIllegalPdu">
            <summary>
              Looks up a localized string similar to Illegal or ill-formed PDU.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulIllegalPduLength">
            <summary>
              Looks up a localized string similar to Illegal PDU length.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulIllegalRequest">
            <summary>
              Looks up a localized string similar to Attempt to request by acceptor.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulIncorrectBufferLength">
            <summary>
              Looks up a localized string similar to Incorrect buffer space allocated for data.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulInsufficientBufferLength">
            <summary>
              Looks up a localized string similar to Insufficient buffer space allocated for data.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulListError">
            <summary>
              Looks up a localized string similar to List error.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulNetworkClosed">
            <summary>
              Looks up a localized string similar to Network closed.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulNoAssociationRequest">
            <summary>
              Looks up a localized string similar to No requests for associations for this server.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulNoPdvs">
            <summary>
              Looks up a localized string similar to No PDVs available in current buffer.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulNullKey">
            <summary>
              Looks up a localized string similar to NULL key passed to routine.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulPCTranslationFailure">
            <summary>
              Looks up a localized string similar to Presentation Context translation failure.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulPDataPduArrived">
            <summary>
              Looks up a localized string similar to P-Data PDU arrived.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulPeerAbortedAssociation">
            <summary>
              Looks up a localized string similar to Peer aborted association (or never connected).
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulPeerRequestedRelease">
            <summary>
              Looks up a localized string similar to Peer requested release.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulReadTimeout">
            <summary>
              Looks up a localized string similar to Network read timeout.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulRequestAssociationFailed">
            <summary>
              Looks up a localized string similar to Failed to establish association.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulUnexpectedPdu">
            <summary>
              Looks up a localized string similar to Received unexpected PDU.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulUnsupportedPeerProtocol">
            <summary>
              Looks up a localized string similar to Unsupported peer protocol.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisDulWrongDataType">
            <summary>
              Looks up a localized string similar to Wrong data type specified for request.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisFormatNetwork">
            <summary>
              Looks up a localized string similar to - {0} - {1} @ {2} {3} (Error 0x{4:x4}).
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisModuleAssociation">
            <summary>
              Looks up a localized string similar to Association.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisModuleDimse">
            <summary>
              Looks up a localized string similar to DIMSE.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisModuleDul">
            <summary>
              Looks up a localized string similar to DICOM Upper Layer.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionOffisUnknownError">
            <summary>
              Looks up a localized string similar to An unknown error occurred in the OFFIS DICOM subsystem.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.SR.ExceptionPoorlyFormattedDateRange">
            <summary>
              Looks up a localized string similar to Poorly formatted Dicom date range {0}..
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.DicomHelper">
            <summary>
            Encapsulates a set of static functions that helps with work on various aspects to
            do with the OFFIS DICOM Toolkit.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomHelper.CheckReturnValue(ClearCanvas.Dicom.OffisWrapper.OFCondition,ClearCanvas.Dicom.OffisWrapper.DcmTagKey,System.Boolean@)">
            <summary>
            Check the OFCondition object that is returned from many of the OFFIS functions/methods.
            Used in the extraction of a DICOM tag. If the condition is that the tag does not exist,
            this will not be considered an exception, and execution will proceed normally.
            </summary>
            <exception cref="T:ClearCanvas.Dicom.GeneralDicomException">GeneralDicomException</exception>
            <param name="status">The condition object that will be checked.</param>
            <param name="tag">The tag that was to be extracted.</param>
            <param name="tagExists">Output argument that will indicate whether or not
            the tag that was to be extracted exists in the dataset.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomHelper.CheckReturnValue(ClearCanvas.Dicom.OffisWrapper.OFCondition,System.String)">
            <summary>
            Checks the condition returned when loading a DICOM file. If there was a problem
            in loading the file, an exception will be thrown.
            </summary>
            <exception cref="!:GeneralDicomExceptoin">GeneralDicomException</exception>
            <param name="status">The condition object to be checked.</param>
            <param name="filename">The filename that was to be loaded.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomHelper.CompareConditions(ClearCanvas.Dicom.OffisWrapper.OFCondition,ClearCanvas.Dicom.OffisWrapper.OFCondition)">
            <summary>
            Compares one OFCondition condition object with another for semantic equality. This was created
            because the static OFCondition objects that the OFFIS toolkit creates when the library is 
            initialized cannot be used as-is in the C# world. For example, DUL_PEERREQUESTEDRELEASE is 
            a OFCondition object that can be compared to condition objects returned from certain network
            functions. The object, however, cannot be compared directly, since the addresses where they
            reside in the C++ world and C# world are different. This function compares their semantic
            meanings for equality.
            </summary>
            <param name="condition1">The first condition object.</param>
            <param name="condition2">The second condition object.</param>
            <returns></returns>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomHelper.NormalizeDirectory(System.String)">
            <summary>
            Utility function that checks for the validity of a directory path
            that is passed in. It will also return the "normalized" path. Right now,
            that just means there will be a trailing backslash appended, which is the
            correct denotation for a directory.
            </summary>
            <param name="directory">Directory path to check and normalize.</param>
            <returns>Normalized directory path.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomHelper.GetDateStringFromDicomDA(System.String)">
            <summary>
            Convert from a DICOM DT string into a string that uses
            the currently configured culture. Makes use of the DateParser
            static class.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.DateParser">
            <summary>
            The DateParser class parses dates that are formatted correctly according to Dicom.
            
            We use the TryParseExact function to parse the dates because it is far more efficient
            than ParseExact since it does not throw exceptions.
            
            See http://blogs.msdn.com/ianhu/archive/2005/12/19/505702.aspx for a good profile
            comparision of the different Parse/Convert methods.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.DateParser.Parse(System.String,System.DateTime@)">
            <summary>
            Attempts to parse the date string exactly, according to accepted Dicom format(s).
            Will *not* throw an exception if the format is invalid.
            </summary>
            <param name="dicomDate">the dicom date string</param>
            <param name="date">returns the date as a DateTime object</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.DicomClient">
            <summary>
            Main entry point for DICOM networking functionality. Allows the client to 
            perform C-ECHO, C-FIND and C-MOVE commands. Both C-FIND and C-MOVE 
            implement the Study Root Query/Retrieve Information Model.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.#ctor(ClearCanvas.Dicom.Network.ApplicationEntity)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="ownAEParameters">The AE parameters of the DICOM client. That is,
            the user's AE parameters that will be passed to the server as the source
            of the DICOM commands, and will also become the destination for the receiving
            of DICOM data.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.SetGlobalConnectionTimeout(System.Int32)">
            <summary>
            Set the overall connection timeout period in the underlying OFFIS DICOM
            library.
            </summary>
            <param name="timeout">Timeout period in seconds. Default is 120 seconds.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.SetReverseDnsLookupFlag(System.Boolean)">
            <summary>
            Enables or disables the use of reverse DNS lookups for
            completing DICOM associations. 
            </summary>
            <param name="enable">True - turn on, False - turn off. Default is False.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Verify(ClearCanvas.Dicom.Network.ApplicationEntity)">
            <summary>
            Verifies that a remote AE has an operational DICOM implementation using
            C-ECHO. Note that a successful verify does not necessarily mean that
            the remote AE will be able to perform any particular service, since 
            the implementation at this time verifies support for the Verification
            Service Class only.
            </summary>
            <param name="serverAE">The AE parameters of the remote AE server.</param>
            <returns></returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.PatientId,ClearCanvas.Dicom.PersonName)">
             <summary>
             This variation on the function takes Patient ID and Patient's Name. This query takes 
             place at the STUDY level and the the following tags are used as the key:
             Query Retrieve Level, Study Date, Study Time, Accession Number, Patient's Name,
             Patient ID, Study Instance UID, Modalities In Study, Study Description,
             Specific Character Set, Patient's Birth Date, Number Of Study Related Series,
             and Number Of Study Related Instances.
             </summary>
             <overloads>There are currently seven overloads of this function. Query the 
             remote AE to determine what studies the server contains using a C-FIND. This 
             implementation uses the Study Root Query/Retrieve Information Model.
             <example>
             <code>
            ApplicationEntity myOwnAEParameters = new ApplicationEntity(new HostName("localhost"),
                new AETitle("CCNETTEST"), new ListeningPort(110));
            ApplicationEntity serverAE = new ApplicationEntity(new HostName("192.168.0.100"),
                new AETitle("CONQUESTSRV1"), new ListeningPort(5678));
            
            DicomClient dicomClient = new DicomClient(myOwnAEParameters);
            
            if (!dicomClient.Verify(serverAE))
                throw new Exception("Target server is not running");
            
            ReadOnlyQueryResultCollection results = dicomClient.Query(serverAE, new PatientId(""), new PatientsName(""));
            
            Assert.IsTrue(results.Count &gt; 0);
            
            foreach (QueryResult qr in results)
            {   
                foreach (DicomTag dicomTag in qr.DicomTags)
                {
                    Console.WriteLine("{0} - {1}", dicomTag.ToString(), qr[dicomTag]);
                }
            
                Console.WriteLine("Patient's Name: {0}", qr.PatientsName);
                Console.WriteLine("Patien ID: {0}", qr.PatientId);
            }
             </code>
             </example>
             </overloads>
             <param name="serverAE">AE parameters of the remote AE server.</param>
             <param name="patientId">Key for searching: the relevant Patient ID.</param>
             <param name="patientsName">Key for searching: the relevant Patient's Name.</param>
             <returns>A read-only version of the <see cref="!:QueryResultCollection">QueryResultCollection</see>.
             Each C-FIND result is represented by one item in the collection, and it is possible to 
             enumerate over all the items.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.PatientId)">
            <summary>
            This variation on the function takes Patient ID.
            </summary>
            <param name="serverAE">AE parameters of the remote AE server.</param>
            <param name="patientId">Key for searching: the relevant Patient ID.</param>
            <returns>A read-only version of the <see cref="!:QueryResultCollection">QueryResultCollection</see>.
            Each C-FIND result is represented by one item in the collection, and it is possible to 
            enumerate over all the items.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.PersonName)">
            <summary>
            This variation on the function takes Patient's Name.
            </summary>
            <param name="serverAE">AE parameters of the remote AE server.</param>
            <param name="patientsName">Key for searching: the relevant Patient's Name.</param>
            <returns>A read-only version of the <see cref="!:QueryResultCollection">QueryResultCollection</see>.
            Each C-FIND result is represented by one item in the collection, and it is possible to 
            enumerate over all the items.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.Uid)">
            <summary>
            Overload of the Query method that accepts a Study Instance UID.
            </summary>
            <param name="serverAE">AE parameters of the remote AE server.</param>
            <param name="studyInstanceUid">Key for searching: the relevant study's Study Instance UID.</param>
            <returns>A read-only version of the <see cref="!:QueryResultCollection">QueryResultCollection</see>.
            Each C-FIND result is represented by one item in the collection, and it is possible to 
            enumerate over all the items.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.PatientId,ClearCanvas.Dicom.Accession)">
            <summary>
            Overload of the Query method that accepts Patient ID and Accession Number.
            </summary>
            <param name="serverAE">AE parameters of the remote AE server.</param>
            <param name="patientId">Key for searching: The relevant Patient ID.</param>
            <param name="accession">Key for searching: The relevant Accession Number.</param>
            <returns>A read-only version of the <see cref="!:QueryResultCollection">QueryResultCollection</see>.
            Each C-FIND result is represented by one item in the collection, and it is possible to 
            enumerate over all the items.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.PersonName,ClearCanvas.Dicom.Accession)">
            <summary>
            Overload of the Query method that accepts Patient's Name and Accession Number.
            </summary>
            <param name="serverAE">AE parameters of the remote AE server.</param>
            <param name="patientsName">Key for searching: The relevant Patient's Name.</param>
            <param name="accession">Key for searching: The relevant Accession Number.</param>
            <returns>A read-only version of the <see cref="!:QueryResultCollection">QueryResultCollection</see>.
            Each C-FIND result is represented by one item in the collection, and it is possible to 
            enumerate over all the items.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.PatientId,ClearCanvas.Dicom.PersonName,ClearCanvas.Dicom.Accession)">
            <summary>
            This is currently the most generalized version of Query that other versions will call.
            Overload of the Query method that accepts Patient ID, Patient's Name and Accession Number.
            </summary>
            <param name="serverAE">AE parameters of the remote AE server.</param>
            <param name="patientId">Key for searching: The relevant Patient ID.</param>
            <param name="patientsName">Key for searching: The relevant Patient's Name.</param>
            <param name="accession">Key for searching: The relevant Accession Number.</param>
            <returns>A read-only version of the <see cref="!:QueryResultCollection">QueryResultCollection</see>.
            Each C-FIND result is represented by one item in the collection, and it is possible to 
            enumerate over all the items.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.QueryKey)">
            <summary>
            The general overload for the Query method that allows an almost arbitary list of
            tags to be queried for. 
            </summary>
            <param name="serverAE">The target AE.</param>
            <param name="key">The set of query keys.</param>
            <returns>A collection of studies from the server that satisifes the query key.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.QuerySeries(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.Uid)">
            <summary>
            Query for the series that belong to a particular Study. The following tags
            are part of the query key at the SERIES level: Query Retrieve Level, 
            Modality, Series Instance Uid, Series Description, Series Number and
            Number Of Series Related Instances.
            </summary>
            <param name="serverAE">Server's AE parameters.</param>
            <param name="studyInstanceUid">Study Instance UID of the study that 
            the user wants to query the series for.</param>
            <returns>A read-only collection of query results. Successful results
            includes the Study UID, the Series UID, the Series Description and
            the Series Number.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.QuerySopInstance(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.Uid)">
            <summary>
            Perform a query at the Composite Object Instance ("IMAGE") level. Can be used to determine
            the number of Sop Instances that are in a given Study, if the server does not support querying
            for the Number Of Study Related Instances tag. The following tags are part of this query: SOP Class UID
            and SOP Instance UID.
            </summary>
            <param name="serverAE">The target AE.</param>
            <param name="studyInstanceUid">The relevant Study's Study Instance Uid.</param>
            <returns>A read-only collection of query results that will include the SOP Class UID and
            SOP Instance UID. Use the Count property to determine the number of results returned.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Retrieve(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.Uid,System.String)">
             <summary>
             Performs a DICOM retrieve using C-MOVE with the Study Root Query/Retrieve Information Model.
             A DICOM listener will automatically be created to receive the incoming DICOM data. The listener's
             AE parameters are defined by the ApplicationEntity used in the construction of the 
             <see cref="T:ClearCanvas.Dicom.Network.DicomClient">DicomClient</see>.
             </summary>
             <param name="serverAE">AE parameters of the server who will provided the C-MOVE service.</param>
             <param name="studyInstanceUid">Study Instance UID of the study to be retrieved.</param>
             <param name="saveDirectory">A path to a directory on the local filesystem that will receive
             the incoming DICOM data objects.</param>
             <example>
             <code>
             ApplicationEntity myOwnAEParameters = new ApplicationEntity(new HostName("localhost"),
                 new AETitle("CCNETTEST"), new ListeningPort(4000));
             ApplicationEntity serverAE = new ApplicationEntity(new HostName("localhost"),
                 new AETitle("CONQUESTSRV1"), new ListeningPort(5678));
            
             DicomClient dicomClient = new DicomClient(myOwnAEParameters);
            
             if (!dicomClient.Verify(serverAE))
                 throw new Exception("Target server is not running");
            
             dicomClient.SopInstanceReceivedEvent += SopInstanceReceivedEventHandler;
             dicomClient.Retrieve(serverAE, new Uid("1.3.46.670589.5.2.10.2156913941.892665384.993397"), "C:\\temp\\");
             dicomClient.SopInstanceReceivedEvent -= SopInstanceReceivedEventHandler;
             </code>
             </example>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.RetrieveSeries(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.Uid,System.String)">
            <summary>
            Retrieves a series from the server.
            </summary>
            <param name="serverAE">Server's AE parameters.</param>
            <param name="seriesInstanceUid">The Series Instance UID of the series that the
            user wants to retrieve.</param>
            <param name="saveDirectory">The path to where the incoming images are stored.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Store(ClearCanvas.Dicom.Network.ApplicationEntity,System.String,System.Boolean)">
            <summary>
            Performs a C-STORE, i.e. send, an object to a target AE.
            </summary>
            <param name="serverAE">The target AE.</param>
            <param name="directory">The folder/directory from which the objects to be sent will be obtained.</param>
            <param name="recursivelyDescend">Whether the search for objects from the 'directory' location will 
            descend recursively or not.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Store(ClearCanvas.Dicom.Network.ApplicationEntity,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Overload of the Store function, that allows you to specify a list of files to send,
            rather than specifying a root location. The SOP Classes of the files will be 
            determined automatically by parsing the headers of all the files.
            </summary>
            <param name="serverAE">The target AE.</param>
            <param name="files">The list of files in any collection that implements the
            IEnumerable interface.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Store(ClearCanvas.Dicom.Network.ApplicationEntity,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Overload of the Store function, that allows you to specify a list of files to send,
            rather than specifying a root location. The SOP Classes of the files is also provided.
            </summary>
            <param name="serverAE">The target AE.</param>
            <param name="files">The list of files in any collection that implements the
            IEnumerable interface.</param>
            <param name="sopClassUids">The list of SOP Classes in any collection that implements
            the IEnumerable interface. The list should be normalized to maximize efficiency, i.e.
            there should be no duplicate entries.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Store(ClearCanvas.Dicom.Network.ApplicationEntity,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Overload of the Store function, that allows you to specify a list of files to send,
            rather than specifying a root location. The SOP Classes of the files is also provided, along
            with the Transfer Syntaxes of the stored objects. This is the most efficient version of the 
            method as it avoids parsing of every file's DICOM header.
            </summary>
            <param name="serverAE">The target AE.</param>
            <param name="files">The list of files in any collection that implements the
            IEnumerable interface.</param>
            <param name="sopClassUids">The list of SOP Classes in any collection that implements
            the IEnumerable interface. The list should be normalized to maximize efficiency, i.e.
            there should be no duplicate entries.</param>
            <param name="transferSyntaxUids">The list of Transfer Syntaxes in any collection that implements
            the IEnumerable interface. The list should be normalized to maximize efficiency, i.e.
            there should be no duplicate entries.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Retrieve(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.OffisWrapper.DcmDataset,System.String)">
            <summary>
            The low-level version of Retrieve that just takes in a dataset that has already been
            properly initialized with the appropriate tags for the C-MOVE command.
            </summary>
            <param name="serverAE">The application entity that will serve our Retrieve request.</param>
            <param name="cMoveDataset">The dataset containing the parameters for this Retrieve.</param>
            <param name="saveDirectory">The path on the local filesystem that will store the
            DICOM objects that are received.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.OffisWrapper.DcmDataset)">
            <summary>
            The low-level version of Query that just takes in a dataset that has been properly 
            initialized and set to use tags that are appropriate for the C-FIND command.
            </summary>
            <param name="serverAE">The application entity that will serve our Query request.</param>
            <param name="cFindDataset">The dataset containing the parameters for this Query.</param>
            <returns>A read-only collection of matching results from the server in response to our Query.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.InitializeStandardCFindDataset(ClearCanvas.Dicom.OffisWrapper.DcmDataset@,ClearCanvas.Dicom.Network.DicomClient.QRLevel)">
            <summary>
            Initializes a dataset with the required tags to ensure the C-FIND will work.
            </summary>
            <param name="cFindDataset">Dataset to be filled with certain required tags</param>
            <param name="level">Query/Retrieve level</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.InitializeStandardCMoveDataset(ClearCanvas.Dicom.OffisWrapper.DcmDataset@,ClearCanvas.Dicom.Network.DicomClient.QRLevel)">
            <summary>
            Initializes a dataset with the required tags to ensure the C-MOVE will work.
            </summary>
            <param name="cMoveDataset">Dataset to be filled with certain required tags</param>
            <param name="level">Query/Retrieve level</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.InitializeQueryState">
            <summary>
            Instantiates a new list object, so that any old results will be left
            available (as long as it hasn't be GC'd).
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomClient.TriggerQueryCompletedEvent(ClearCanvas.Dicom.ReadOnlyQueryResultCollection)">
            <summary>
            Invoke the event firing helper 
            </summary>
            <param name="results">Collection of query results or null if no results.
            were returned</param>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient._sopInstanceReceivedEvent">
            <summary>
            Fires when a new SOP Instance has arrived and has been successfully
            written to the local filesystem.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient._queryResultReceivedEvent">
            <summary>
            Fires when a C-FIND result is received.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient._queryCompletedEvent">
            <summary>
            Fires when the C-FIND query has completed and all results received.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient._sendProgressUpdatedEvent">
            <summary>
            This event is not yet implemented.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient._seriesCompletedEvent">
            <summary>
            This event is not yet implemented.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient._studyCompletedEvent">
            <summary>
            This event is not yet implemented.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient._retrieveProgressUpdatedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient.SopInstanceReceived">
            <summary>
            Event accessor.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient.QueryResultReceived">
            <summary>
            Event accessor.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomClient.QueryCompleted">
            <summary>
            Event accessor.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.DicomClient.QRLevel">
            <summary>
            Specifies the query level to be executed on a C-FIND (<see cref="M:ClearCanvas.Dicom.Network.DicomClient.Query(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.PatientId,ClearCanvas.Dicom.PersonName)">Query</see>) or C-MOVE
            (<see cref="M:ClearCanvas.Dicom.Network.DicomClient.Retrieve(ClearCanvas.Dicom.Network.ApplicationEntity,ClearCanvas.Dicom.Uid,System.String)">Retrieve</see>) commands.
            </summary>
        </member>
        <member name="F:ClearCanvas.Dicom.Network.DicomClient.QRLevel.Patient">
            <summary>
            Query at the Patient level, will return for example Patient's Name, Patient's Birthdate,
            one result per patient that matches search keys.
            </summary>
        </member>
        <member name="F:ClearCanvas.Dicom.Network.DicomClient.QRLevel.Study">
            <summary>
            Query at the Study level, will return for example, Study Date, Study Description, 
            one result per study that matches search keys.
            </summary>
        </member>
        <member name="F:ClearCanvas.Dicom.Network.DicomClient.QRLevel.Series">
            <summary>
            Query at the Series level, will return for example, Modality, Series Description,
            one result per series that matches search keys.
            </summary>
        </member>
        <member name="F:ClearCanvas.Dicom.Network.DicomClient.QRLevel.CompositeObjectInstance">
            <summary>
            Query at the Composite Object Instance level, will return for example Bits Allocated, 
            Planar Configuration, one result per SOP Instance that matches search keys.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.ApplicationEntity">
            <summary>
            Describes the network parameters that define an Application Entity.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ApplicationEntity.#ctor(ClearCanvas.Dicom.Network.HostName,ClearCanvas.Dicom.AETitle,ClearCanvas.Dicom.Network.ListeningPort)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="hostname">The Hostname or IP address.</param>
            <param name="aeTitle">The AE Title.</param>
            <param name="listenPort">The port on which this target AE will listen for incoming associations.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ApplicationEntity.#ctor(ClearCanvas.Dicom.Network.HostName,ClearCanvas.Dicom.AETitle,ClearCanvas.Dicom.Network.ListeningPort,System.UInt16)">
            <summary>
            Overloaded version of the constructor that allows client to
            set the connection timeout value.
            </summary>
            <param name="hostname">The Hostname or IP address.</param>
            <param name="aeTitle">The AE Title.</param>
            <param name="listenPort">The port on which this AE will listen for incoming associations.</param>
            <param name="connectionTimeout">The timeout value for making associations and network connections.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ApplicationEntity.#ctor(ClearCanvas.Dicom.Network.HostName,ClearCanvas.Dicom.AETitle,ClearCanvas.Dicom.Network.ListeningPort,System.UInt16,System.UInt16)">
            <summary>
            Overloaded version of the constructor that allows client to set both the
            connection timeout and operation timeout.
            </summary>
            <param name="hostname">The Hostname or IP address.</param>
            <param name="aeTitle">The AE Title.</param>
            <param name="listenPort">The port on which this AE will listen for incoming associations.</param>
            <param name="connectionTimeout">The timeout value for making associations and network connections.</param>
            <param name="operationTimeout">The timeout value for individual DICOM commands, such as C-STORE.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ApplicationEntity.#ctor">
            <summary>
            Mandatory parameterless constructor for Hibernate
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ApplicationEntity.ToString">
            <summary>
            Provides a string representation of an Application Entity.
            </summary>
            <returns>The String representation.</returns>D
        </member>
        <member name="P:ClearCanvas.Dicom.Network.ApplicationEntity.Host">
            <summary>
            Gets the Hostname as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.Network.ApplicationEntity.AE">
            <summary>
            Gets the AE Title as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.Network.ApplicationEntity.Port">
            <summary>
            Gets the listening port as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.Network.ApplicationEntity.ConnectionTimeout">
            <summary>
            Sets the timeout value for making DICOM associations
            and network connections to the target/remote Application
            Entity.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.Network.ApplicationEntity.OperationTimeout">
            <summary>
            Sets the timeout value for completing network operations
            such as a single C-STORE command.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.QueryResultList">
            <summary>
            List of C-FIND query results. Each result represents the data
            from a particular C-FIND Response.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.QueryResultList.Add(ClearCanvas.Dicom.QueryResult)">
            <summary>
            Add a new result item into the list.
            </summary>
            <param name="item">A result item.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.QueryResultList.Clear">
            <summary>
            Remove all results.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.ReadOnlyQueryResultCollection">
            <summary>
            A read-only encapsulation of a QueryResultList.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.DateTimeParser.Parse(System.String,System.DateTime@)">
            <summary>
            Parses a dicom Date/Time string using the DateParser and TimeParser
            (TryParseExact) functions.  The Hour/Minute adjustment factor (as
            specified in Dicom for universal time adjustment) is accounted for 
            (and parsed) by this function.
            </summary>
            <param name="dicomDateTime">the dicom date/time string</param>
            <param name="dateTime">the date/time as a DateTime object</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.ListeningPort">
            <summary>
            Encapsulation of a listening port number.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ListeningPort.#ctor(System.Int32)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="listeningPort">The listening port as a 32-bit integer.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ListeningPort.ToInt">
            <summary>
            Gets the listening port as a 32-bit integer.
            </summary>
            <returns>The listening port as a 32-bit integer.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.ListeningPort.op_Implicit(ClearCanvas.Dicom.Network.ListeningPort)~System.Int32">
            <summary>
            Implicit cast to return the listen port as an integer for ease of use.
            </summary>
            <param name="lp">The ListeningPort object to be casted.</param>
            <returns>An integer representing the listening port.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.AETitle">
            <summary>
            Encapsulation of the AE Title DICOM tag.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.AETitle.#ctor(System.String)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="aeTitle">The AE Title as a string.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.AETitle.ToString">
            <summary>
            Retrieves the AE Title.
            </summary>
            <returns>The AE Title as a string.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.AETitle.op_Implicit(ClearCanvas.Dicom.AETitle)~System.String">
            <summary>
            Implicit cast to a String object, for ease of use.
            </summary>
            <param name="aet">The AETitle object to be casted.</param>
            <returns>A String representation of the AE Title object.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.SeriesCompletedEventArgs">
            <summary>
            Class is not yet implemented. Do not use.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.SendProgressUpdatedEventArgs">
            <summary>
            Argument type that encapsulates data pertinent to a
            the progress of sending objects (using C-STORE)
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.SendProgressUpdatedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="results">The object containing the results from the query.</param>
        </member>
        <member name="T:ClearCanvas.Dicom.PatientId">
            <summary>
            Encapsulates the DICOM Patient ID.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.PatientId.#ctor">
            <summary>
            Mandatory NHibernate constructor.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.PatientId.#ctor(System.String)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="patientId">A string representation of the Patient ID.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.PatientId.ToString">
            <summary>
            Gets a string representation of the Patient ID.
            </summary>
            <returns>String representation of Patient ID.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.PatientId.op_Implicit(ClearCanvas.Dicom.PatientId)~System.String">
            <summary>
            Implicit cast to a String object, for ease of use.
            </summary>
            <param name="pid">The AETitle object to be casted.</param>
            <returns>A String representation of the AE Title object.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.OffisConditionParser">
            <summary>
            Parses the condition code returned from the OFFIS library and determines a proper error message 
            as represented by a string.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.QueryCompletedEventArgs">
            <summary>
            Argument type that encapsulates data pertinent to a
            query having completed.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.QueryCompletedEventArgs.#ctor(ClearCanvas.Dicom.ReadOnlyQueryResultCollection)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="results">The object containing the results from the query.</param>
        </member>
        <member name="P:ClearCanvas.Dicom.Network.QueryCompletedEventArgs.Results">
            <summary>
            Retrieves the results from the query.
            </summary>
            <returns>A read-only collection containing every result from the C-FIND query.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.FileDicomImage">
            <summary>
            Representation of a DICOM image object that is stored on disk
            media.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.DicomImage">
            <summary>
            Representation of a DicomImage object.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomImage.GetPixelData">
            <summary>
            Obtains the pixel data for this image dataset.
            </summary>
            <returns>A byte array representing the pixel data. This array's interpretation
            should be subject to the various image-defining parameters such as Samples Per Pixel
            and Bits Stored.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomImage.GetPixelData(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,ClearCanvas.Dicom.PhotometricInterpretation,System.Int32,System.Int32,System.String)">
            <summary>
            Obtains the pixel data for this image dataset, given a set of
            image-defining parameters. This method allows for slight optimization if
            these parameters are already known, since the need to parse the
            image's dataset for these values is avoided.
            </summary>
            <param name="bitsAllocated">The Bits Allocated tag of the image.</param>
            <param name="rows">The Rows tag of the image.</param>
            <param name="columns">The Columns tag of the image.</param>
            <param name="samplesPerPixel">The Samples Per Pixel tag of the image.</param>
            <param name="bitsStored">The number of bits actually used in the storage of pixel information.</param>
            <param name="pixelRepresentation">The representation of pixels as signed or unsigned using 2's complement.</param>
            <param name="photometricInterpretation">The interpretation of the pixel values into different colour spaces.</param>
            <param name="planarConfiguration">For coloured pixels, the interpretation of the layout of storage, either by colour planes,
            or as RGB triplets.</param>
            <param name="transferSyntaxUid">Transfer Syntax of the image encoding.</param>
            <returns>A byte array representing the pixel data. This array's interpretation
            should be subject to the various image-defining parameters such as Samples Per Pixel
            and Bits Stored.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomImage.GetTag(ClearCanvas.Dicom.OffisWrapper.DcmTagKey,System.UInt16@,System.Boolean@)">
            <summary>
            One of several overloads that allows the client to obtain a particular tag from
            the image file's dataset. Each overload mirrors an overload of the findAndGetxxx()
            functions in the underlying OFFIS DICOM Toolkit.
            </summary>
            <param name="tag">The tag that will be obtained</param>
            <param name="val">The object that the value will be stored in.</param>
            <param name="tagExists">An indicator whether the tag exists in the dataset or not.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomImage.GetTagArray(ClearCanvas.Dicom.OffisWrapper.DcmTagKey,System.String@,System.Boolean@)">
            <summary>
            This method will obtain an entire tag, regardless of it's Value Multiplicity (VM)
            as a string.  This is useful, for example, in the case of the "Image Type" tag,
            where the individual values are not necessarily as useful as the unparsed tag.
            </summary>
            <param name="tag">The tag that will be obtained</param>
            <param name="valueArray">The object that the value will be stored in.</param>
            <param name="tagExists">An indicator whether the tag exists in the dataset or not.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomImage.LoadImageParameterSet">
            <summary>
            Loads the minmum set of image parameter tags that is
            necessary for rendering the pixel data to the display.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomImage.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing">True if this object is being disposed, false if it is being finalized</param>
        </member>
        <member name="P:ClearCanvas.Dicom.DicomImage.Dataset">
            <summary>
            The underlying DcmDataset object of this image.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.DicomImage.MetaInfo">
            <summary>
            The underlying DcmMetaInfo object of this image, that
            represents the meta-header describing the dataset. The DcmMetaInfo
            may not exist, as it typically only exists if the dataset is stored
            onto media, where the meta-header is used to describe the format
            of the storage.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.DicomImage.IsDatasetLoaded">
            <summary>
            Flag indicating whether the underlying dataset has been loaded into memory.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.DicomImage.IsImageParameterSetLoaded">
            <summary>
            Flag indicating whether or not the parameters that define an image for
            rendering has been loaded into memory.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.FileDicomImage.#ctor(System.String)">
            <summary>
            Construct this object with the filesystem path to the file.
            </summary>
            <param name="filename">Filesystem path to the location of the image file.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.FileDicomImage.Load">
            <summary>
            Loads the dataset from the filesystem into memory.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.FileDicomImage.Filename">
            <summary>
            The full filesystem path to this image file.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.DicomServer">
            <summary>
            This class's implementation is not yet complete. Use at your own risk.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomServer.#ctor(ClearCanvas.Dicom.Network.ApplicationEntity,System.String)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="ownAEParameters">The AE parameters of the DICOM server. That is,
            the user's AE parameters that will be passed to the server as the source
            of the DICOM commands, and will also become the destination for the receiving
            of DICOM data.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.DicomServer.SetGlobalConnectionTimeout(System.UInt16)">
            <summary>
            Set the overall connection timeout period in the underlying OFFIS DICOM
            library.
            </summary>
            <param name="timeout">Timeout period in seconds.</param>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomServer._findScpEvent">
            <summary>
            Fires when a C-FIND query has been received
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomServer._findScpProgressEvent">
            <summary>
            Fires when a C-FIND query has asked for an update
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomServer._storeScpBeginEvent">
            <summary>
            Fires when a new SOP Instance has arrived and is starting to be written to the local filesystem.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomServer._storeScpProgressEvent">
            <summary>
            Fires when more data of the new SOP Instance has arrived
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomServer._storeScpEndEvent">
            <summary>
            Fires when a new SOP Instance has been successfully written to the local filesystem.
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomServer._moveScpBeginEvent">
            <summary>
            Fires when a C-MOVE query has been received
            </summary>
        </member>
        <member name="E:ClearCanvas.Dicom.Network.DicomServer._moveScpProgressEvent">
            <summary>
            Fires when a C-MOVE query has asked for an update
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Uid">
            <summary>
            Wrapper class for UIDs used in the framework.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Uid.op_Implicit(ClearCanvas.Dicom.Uid)~System.String">
            <summary>
            Implicit cast to a String object, for ease of use.
            </summary>
            <param name="uid">The AETitle object to be casted.</param>
            <returns>A String representation of the AE Title object.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.DicomTag">
            <summary>
            Describes a DICOM tag and provides some static helper functions
            that return DicomTag objects representing tags without the use
            of string literals, but uses symbolic names instead.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomTag.#ctor(System.UInt16,System.UInt16)">
            <summary>
            Constructor with discrete Group and Element.
            </summary>
            <param name="group">Group Number of tag.</param>
            <param name="element">Element Number of tag.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomTag.#ctor(System.UInt32)">
            <summary>
            Constructor with Group and Element represented as a 32-bit integer.
            </summary>
            <param name="ID">The 32-bit representation of the Group and Element.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomTag.GetHashCode">
            <summary>
            Provides a hash code that's more natural by using the
            Group and Element number of the tag.
            </summary>
            <returns>The Group and Element number as a 32-bit integer.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomTag.ToString">
            <summary>
            Provides a human-readable representation of the tag.
            </summary>
            <returns>The string representation of the Group and Element.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.DicomTag.Equals(System.Object)">
            <summary>
            This override allows the comparison of two DicomTag objects
            for semantic equivalence. 
            </summary>
            <param name="obj">The other DicomTag object to compare this object to.</param>
            <returns></returns>
        </member>
        <member name="P:ClearCanvas.Dicom.DicomTag.Group">
            <summary>
            Gets the Group Number of the tag as a 16-bit integer.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.DicomTag.Element">
            <summary>
            Gets the Element Number of the tag as a 16-bit integer.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.GeneralDicomException">
            <summary>
            Application-level exceptions that are routed from lower-level DICOM library calls
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.GeneralDicomException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.GeneralDicomException.#ctor(System.String)">
            <summary>
            Constructor that takes a message string.
            </summary>
            <param name="message">Message that will be accessible to the user or client describing the
            nature of the exception.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.GeneralDicomException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor that takes in a message string and an inner exception.
            </summary>
            <param name="message">Message that explains the nature of the exception.</param>
            <param name="exception">The nested, or inner exception that is relevant.</param>
        </member>
        <member name="T:ClearCanvas.Dicom.NetworkDicomException">
            <summary>
            Application-level exceptions that are routed from the lower-level DICOM libary, specific to
            functionality related to networking, such as Query'ing and Retrieve'ing.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.NetworkDicomException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.NetworkDicomException.#ctor(System.String)">
            <summary>
            Constructor that takes a message string.
            </summary>
            <param name="message">Message that will be accessible to the user or client describing the
            nature of the exception.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.NetworkDicomException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor that takes in a message string and an inner exception.
            </summary>
            <param name="message">Message that explains the nature of the exception.</param>
            <param name="exception">The nested, or inner exception that is relevant.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.SocketManager.InitializeSockets">
            <summary>
            Initialize the Winsock library in Windows. In 
            non-Windows platforms, this function does nothing via a compiler define.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.SocketManager.DeinitializeSockets">
            <summary>
            Deinitialize the Winsock library in Windows. In
            non-Windows platforms, this function does nothing.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.QueryResultReceivedEventArgs">
            <summary>
            Argument type that encapsulates data pertinent to a
            query result having received.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.QueryResultReceivedEventArgs.#ctor(ClearCanvas.Dicom.QueryResult)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="result">The new result.</param>
        </member>
        <member name="P:ClearCanvas.Dicom.Network.QueryResultReceivedEventArgs.Result">
            <summary>
            Gets the query result object.
            </summary>
            <returns>The result object.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.HostName">
            <summary>
            Encapsulation of a hostname.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.HostName.#ctor(System.String)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="hostName">The Hostname as a string.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.HostName.ToString">
            <summary>
            Gets the Hostname as a string.
            </summary>
            <returns>The hostname in String form.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.HostName.op_Implicit(ClearCanvas.Dicom.Network.HostName)~System.String">
            <summary>
            Implicit cast to a String object, for ease of use.
            </summary>
            <param name="hn">The Hostname object to be casted.</param>
            <returns>A String representation of the Hostname object.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Dcm">
            <summary>
            A helper class that supplies various DICOM tags using a symbolic name rather than
            a string literal.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.StudyCompletedEventArgs">
            <summary>
            Class not yet implemented. Do not use.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.Network.SopInstanceReceivedEventArgs">
            <summary>
            Argument type that encapsulates data pertinent to a
            SOP Instance having been received.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Network.SopInstanceReceivedEventArgs.#ctor(System.String)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="fileName">The path and filename of the newly stored SOP Instance.</param>
        </member>
        <member name="P:ClearCanvas.Dicom.Network.SopInstanceReceivedEventArgs.SopFileName">
            <summary>
            Gets the path and file name of the newly stored SOP Instance.
            </summary>
            <returns>Path and file name of stored SOP Instance.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.DateRangeParser">
            <summary>
            Will parse a date range adhering to the dicom format.  For example:
            
            	DateRange				From (parsed)		To (parsed)			Range?
            ----------------------------------------------------------------------------
            	20070606				20070606			-					No
            	20070606-				20070606			-					Yes
            	-20070606				Beginning of time	20070606			Yes
            	20060101-20070606		20060101			20070606			Yes
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.DateRangeParser.Parse(System.String,System.Nullable{System.DateTime}@,System.Nullable{System.DateTime}@,System.Boolean@)">
            <summary>
            Will parse a date range adhering to the dicom date format, returning the dates as <see cref="T:System.DateTime"/> objects.
            </summary>
            <param name="dateRange">the string to be parsed</param>
            <param name="fromDate">the "from date", or null</param>
            <param name="toDate">the "to date" or null</param>
            <param name="isRange">whether or not the input value was actually a range.  If not, then the "from date" value should be taken 
            to be an exact value, not a range, depending on the application.</param>
            <exception cref="T:System.InvalidOperationException">if the input range is poorly formatted</exception>
        </member>
        <member name="M:ClearCanvas.Dicom.DateRangeParser.Parse(System.String,System.Int32@,System.Int32@,System.Boolean@)">
            <summary>
            Will parse a date range adhering to the dicom date format, returning the dates as integers.
            </summary>
            <param name="dateRange">the string to be parsed</param>
            <param name="fromDate">the "from date", or null</param>
            <param name="toDate">the "to date" or null</param>
            <param name="isRange">whether or not the input value was actually a range.  If not, then the "from date" value should be taken 
            to be an exact value, not a range, depending on the application.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.DateRangeParser.Parse(System.String,System.String@,System.String@,System.Boolean@)">
            <summary>
            Will parse a date range adhering to the dicom date format, returning the dates as strings.  In the case where the input
            dates are formatted according to the old Dicom Standard (yyyy.MM.dd), the resulting strings will be reformatted according
            to the current Dicom Standard.
            </summary>
            <param name="dateRange">the string to be parsed</param>
            <param name="fromDate">the "from date", or null</param>
            <param name="toDate">the "to date" or null</param>
            <param name="isRange">whether or not the input value was actually a range.  If not, then the "from date" value should be taken 
            to be an exact value, not a range, depending on the application.</param>
        </member>
        <member name="T:ClearCanvas.Dicom.TimeParser">
            <summary>
            The TimeParser class parses times that are formatted correctly according to Dicom.
            
            We use the TryParseExact function to parse the times because it is far more efficient
            than ParseExact since it does not throw exceptions.
            
            See http://blogs.msdn.com/ianhu/archive/2005/12/19/505702.aspx for a good profile
            comparision of the different Parse/Convert methods.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.TimeParser.Parse(System.String,System.DateTime@)">
            <summary>
            Attempts to parse the time string exactly, according to accepted Dicom time format(s).
            Will *not* throw an exception if the format is invalid (better for when performance is needed).
            </summary>
            <param name="timeString">the dicom time string</param>
            <param name="time">returns the time as a DateTime object</param>
            <returns>true on success, false otherwise</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Tests.DcmDataTest">
            <summary>
            Summary description for Test_DCMTKcs.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.PersonName">
            <summary>
            Encapsulates the DICOM Person's Name.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.PersonName.#ctor">
            <summary>
            Constructor for NHibernate.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.PersonName.#ctor(System.String)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="personsName">The Person's Name as a string.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.PersonName.ToString">
            <summary>
            Gets the Person's Name as a string.
            </summary>
            <returns>A string representation of the Person's Name.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.PersonName.op_Implicit(ClearCanvas.Dicom.PersonName)~System.String">
            <summary>
            Implicit cast to a String object, for ease of use.
            </summary>
        </member>
        <member name="T:ClearCanvas.Dicom.IDicomPropertySettable">
            <summary>
            Specifies an interface that allows an object to have
            DICOM properties set to specific values. An example where
            this interface may be used is in the loading of DICOM image
            files from disk, but where the header may be stored in a
            fast-access database. The database may use this interface
            to set all the properties of the loaded image, from the set
            of properties stored in the database, 
            while knowing nothing about the type of
            of the image object, other than that it implements this 
            interface.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:ClearCanvas.Dicom.ImageOrientationPatient" -->
        <member name="M:ClearCanvas.Dicom.ImageOrientationPatient.GetPrimaryRowDirection(System.Boolean)">
            <summary>
            Gets the primary direction, in terms of the Patient based coordinate system, of the first row of the Image (increasing x).
            </summary>
            <param name="opposingDirection">indicates the opposite direction to the primary direction should be returned.
            For example, if the primary direction is Anterior, then Posterior will be returned if this parameter is true.</param>
            <returns>the direction, in terms of the Patient based coordinate system</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.ImageOrientationPatient.GetPrimaryColumnDirection(System.Boolean)">
            <summary>
            Gets the primary direction, in terms of the Patient based coordinate system, of the first column of the Image (increasing y).
            </summary>
            <param name="opposingDirection">indicates the opposite direction to the primary direction should be returned.
            For example, if the primary direction is Anterior, then Posterior will be returned if this parameter is true.</param>
            <returns>the direction, in terms of the Patient based coordinate system</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.ImageOrientationPatient.GetSecondaryRowDirection(System.Boolean)">
            <summary>
            Gets the secondary direction, in terms of the Patient based coordinate system, of the first row of the Image (increasing x).
            </summary>
            <param name="opposingDirection">indicates the opposite direction to the secondary direction should be returned.
            For example, if the secondary direction is Anterior, then Posterior will be returned if this parameter is true.</param>
            <returns>the direction, in terms of the Patient based coordinate system</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.ImageOrientationPatient.GetSecondaryColumnDirection(System.Boolean)">
            <summary>
            Gets the secondary direction, in terms of the Patient based coordinate system, of the first column of the Image (increasing y).
            </summary>
            <param name="opposingDirection">indicates the opposite direction to the secondary direction should be returned.
            For example, if the secondary direction is Anterior, then Posterior will be returned if this parameter is true.</param>
            <returns>the direction, in terms of the Patient based coordinate system</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.ImageOrientationPatient.Recalculate">
            <summary>
            Recalculates the primary/secondary directions (in patient based system) for the first row and first column.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.ImageOrientationPatient.SetDirectionValue(System.Int32@,System.Double,System.Int32)">
            <summary>
            Sets one of the member primary/secondary direction variables.
            </summary>
            <param name="member">the member to set</param>
            <param name="cosineValue">the cosine value</param>
            <param name="cosineIndex">the index of the cosine value in the original direction cosine vector</param>
        </member>
        <member name="M:ClearCanvas.Dicom.ImageOrientationPatient.BubbleSortCosineIndices(System.Double[])">
            <summary>
            Bubble sorts an array of cosines in descending order (largest to smallest), ignoring the sign.
            This helps to determine the primary/secondary directions for the cosines.
            </summary>
            <param name="cosineArray">the array of cosines (row or column)</param>
            <returns>an array of indices into the input array (cosineArray), that when applied would sort the cosines appropriately.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.Accession">
            <summary>
            Encapsulation of the Accession Number DICOM tag.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.Accession.#ctor(System.String)">
            <summary>
            Mandatory constructor.
            </summary>
            <param name="accession">The Accession Number as a string.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.Accession.ToString">
            <summary>
            Retrieves the Accession Number.
            </summary>
            <returns>Accession Number as a string.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.Accession.op_Implicit(ClearCanvas.Dicom.Accession)~System.String">
            <summary>
            Implicit cast to a String object, for ease of use.
            </summary>
            <param name="acc">The Accession object to be casted.</param>
            <returns>A String representation of the Accession object.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.QueryResult">
            <summary>
            A single result from a C-FIND query, a collection of <see cref="T:ClearCanvas.Dicom.DicomTag">DicomTag</see>s.
            Since QueryResult implements IDictionary, it's possible to use an enumerator to extract
            every single tag in the result, as well as provide a key to extract a particular tag.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.QueryResult.Add(ClearCanvas.Dicom.DicomTag,System.String)">
            <summary>
            Add a new tag into the collection.
            </summary>
            <param name="key">The key of the tag.</param>
            <param name="value">The value of the tag.</param>
        </member>
        <member name="M:ClearCanvas.Dicom.QueryResult.Clear">
            <summary>
            Empties out the collection.
            </summary>
        </member>
        <member name="M:ClearCanvas.Dicom.QueryResult.ContainsTag(ClearCanvas.Dicom.DicomTag)">
            <summary>
            Determines whether the collection contains a particular tag.
            </summary>
            <param name="tag">The tag to check.</param>
            <returns>True - tag exists; False - tag does not exist.</returns>
        </member>
        <member name="M:ClearCanvas.Dicom.QueryResult.ToString">
            <summary>
            Returns string representation of this query result.
            </summary>
            <returns>Study Description if that is available, otherwise the Study Instance UID.</returns>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.StudyInstanceUid">
            <summary>
            Gets the Study Instance UID as a Uid object.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.PatientId">
            <summary>
            Gets the Patient ID as a PatientId object.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.PatientsName">
            <summary>
            Gets Patient's Name as a PatientsName object.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.ModalitiesInStudy">
            <summary>
            Gets Modalities In Study as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.StudyDescription">
            <summary>
            Gets Study Description as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.StudyDate">
            <summary>
            Gets Study Date as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.StudyTime">
            <summary>
            Gets Study Time as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.AccessionNumber">
            <summary>
            Gets Accession Number as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.Modality">
            <summary>
            Gets Modality as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.SeriesInstanceUid">
            <summary>
            Gets Series Instance UID as a Uid object.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.SeriesDescription">
            <summary>
            Gets Series Description as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.SeriesNumber">
            <summary>
            Gets Series Number as a string.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.NumberOfStudyRelatedInstances">
            <summary>
            Gets Number Of Study Related Instances as a number.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.NumberOfSeriesRelatedInstances">
            <summary>
            Gets Number of Series Related Instances as a number.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.DicomTags">
            <summary>
            Gets the whole collection of DICOM tags in this query result.
            </summary>
        </member>
        <member name="P:ClearCanvas.Dicom.QueryResult.Item(ClearCanvas.Dicom.DicomTag)">
            <summary>
            Indexer based on the DicomTag key to this collection.
            </summary>
            <param name="key">The key representing the tag the client wants to obtain.</param>
            <returns>The string representation of that value.</returns>
        </member>
        <member name="T:ClearCanvas.Dicom.QueryKey">
            <summary>
            A helper class. This class is identical in
            every respect to QueryResult, but the name. A new
            name has been given in order to have the correct
            semantic when a collection of tags is used to define
            a query or retrieve, rather than when used as a
            collection of query results.
            </summary>
        </member>
    </members>
</doc>
