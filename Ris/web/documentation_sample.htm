<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<head>
        <!--<link href="default.css" rel="stylesheet" type="text/css" />-->
	    <script src="jsx.js"></script>
	    <script src="jsml.js"></script>
	    <script src="ui.js"></script>
	    <script src="ris.js"></script>
		<script>
		    var data;
		    var errorProvider = new ErrorProvider();
	    
		    function initPage()
		    {
		        // if the Ris object is not defined, we are running in a plain old browser, so call setData manually
				if(!Ris)
				    setData(null);
		    }
		    
		    function setData(jsml)
		    {
			    data = JSML.parse(jsml) || {};
			    var myForm = $("myForm");
			    myForm.lastName.value = data.lastName || "";
			    myForm.firstName.value = data.firstName || "";
			    
			    data.relatives = data.relatives || [];
			    
			    // create relatives table
		        //var relTable = Table.createTable($("relativesTable"), ["name","relationship","doctor"]);
		        var relTable = Table.createTable($("relativesTable"), { editInPlace: true },
		             [
		                {
		                    cellType: "text",
		                    getValue: function(item) { return item.name; },
		                    setValue: function(item, value) { item.name = value; }
		                },
		                {
		                    cellType: "choice",
		                    choices: ["Mother", "Father", "Child", "Sibling"],
		                    getValue: function(item) { return item.relationship; },
		                    setValue: function(item, value) { item.relationship = value; }
		                },
		                {
		                    cellType: "lookup",
		                    getValue: function(item) { return item.doctor; },
		                    setValue: function(item, value) { item.doctor = value; },
		                    lookup: function(query) { return Ris.resolveStaffName(query); }
		                },
		                {
		                    cellType: "checkbox",
		                    getValue: function(item) { return item.isBlood; },
		                    setValue: function(item, value) { item.isBlood = value; }
		                }
		             ]);
		        relTable.rowCycleClassNames = ["row0", "row1"];
		        relTable.errorProvider = errorProvider;   // share validation with the rest of the form
		        
		        relTable.validateItem = function(sender, args)
		        {
		            var errors = [];
		            if(!args.item.name)
		                errors.add("Name is required");
		            if(!args.item.doctor)
		                errors.add("Doctor is required");
		                
		            args.error = errors.join("\n");
		        }
		        
		        relTable.bindItems(data.relatives);
		        
		        updateValidation();
		    }
		    
		    function getData()
		    {
			    var myForm = $("myForm");
		        data.lastName = myForm.lastName.value;
		        data.firstName =  myForm.firstName.value;
				return JSML.create(data, "data");
		    }

			function showValidation(show)
			{
			    errorProvider.setVisible(show);
			}
			
			function onAddRelative()
			{
			    data.relatives.add( {} );   // add an empty item
			}
			
			function onDeleteRelative()
			{
			    var checkedItems = $("relativesTable").getCheckedItems();
			    if(checkedItems.length > 0)
			    {
			        if(confirm("Deleted selected relatives?"))
			        {
			            checkedItems.each(function(item) { data.relatives.remove(item); });
			        }
			    }
			    else
			    {
			        alert("Nothing selected");
			    }
			}
			function onRelativesCheckAllNone()
			{
			    data.relatives.each(function(item) { $("relativesTable").setItemCheckState(item, $("relativesCheckAllNone").checked); });
			}
			function updateValidation()
			{
			    var myForm = $("myForm");
			    errorProvider.setError(myForm.lastName, myForm.lastName.value ? "" : "Last name is required");
			    errorProvider.setError(myForm.firstName, myForm.firstName.value ? "" : "First name is required");
			}
		</script>
	</head>
	<body onload="javascript: initPage()">
	
		<form id="myForm">
		<p>Personal Data</p>
		<p>
		    Last Name<input type="text" id="lastName" onkeyup="updateValidation()"/>
		    First Name<input type="text" id="firstName" onkeyup="updateValidation()"/>
		</p>
		<p></p>
		<p>Relatives</p>
		<p>
		    <input type="button" value="Add" onclick="javascript: onAddRelative()" />
		    <input type="button" value="Delete" onclick="javascript: onDeleteRelative()" />
		</p>
			<table id="relativesTable" border="1">
			  <tr>
			    <td><input id="relativesCheckAllNone" type="checkbox" onclick="javascript: onRelativesCheckAllNone()" />All/None</td>
				<td class="tableheading">Name</td>
				<td class="tableheading">Relationship</td>
				<td class="tableheading">Doctor</td>
				<td class="tableheading">Is Blood</td>
			  </tr>
			</table>
		</form>
	</body>
</html>