<html>
 <head>
  <title>Test Page for BiometryCalculator</title>
  <script src="../jsunit/app/jsUnitCore.js"></script>
  <script src="../jsx.js"></script>
  <script src="../biometrycalculator.js"></script>
 </head>
 <body>
  <script>
    /*global BiometryCalculator, assertEquals */
  
    function testCrlWithValidArgs() {
        assertEquals("CRL for 1 mm is 5.9", 5.9, BiometryCalculator.crlWeeks(1));
        assertEquals("CRL for 10 mm is 7.3", 7.3, BiometryCalculator.crlWeeks(10));
        assertEquals("CRL for 50 mm is 11.7", 11.7, BiometryCalculator.crlWeeks(50));
    }
    function testCrlWithInvalidArgs() {
        assertEquals("CRL for null is 0", 0.0, BiometryCalculator.crlWeeks(null));
    }

    function testBpdWithValidArgs() {
        assertEquals("BPD for 1 mm is 7.2", 7.2, BiometryCalculator.bpdWeeks(1));
        assertEquals("BPD for 10 mm is 9.5", 9.5, BiometryCalculator.bpdWeeks(10));
        assertEquals("BPD for 50 mm is 21.2", 21.2, BiometryCalculator.bpdWeeks(50));
    }
    function testBpdWithInvalidArgs() {
        assertEquals("BPD for null is 0", 0.0, BiometryCalculator.bpdWeeks(null));
    }
    function testCorrectedBpdWithValidArgs() {
        assertEquals("Corrected BPD for BPD = 1 mm, OFD = 1 mm is 0.9 mm", 0.9, BiometryCalculator.correctedBpd(1, 1));
        assertEquals("Corrected BPD for BPD = 10 mm, OFD = 10 mm is 8.9 mm", 8.9, BiometryCalculator.correctedBpd(10, 10));
        assertEquals("Corrected BPD for BPD = 50 mm, OFD = 50 mm is 44 mm", 44.5, BiometryCalculator.correctedBpd(50, 50));
    }
    function testCorrectedBpdWithoutOfdInvalidArgs() {
        assertEquals("Corrected BPD for BPD = 50 mm and without OFD is 50", 50, BiometryCalculator.correctedBpd(50, null));
    }
    function testCorrectedBpdWithInvalidArgs() {
        assertEquals("BPD for null is 0", 0, BiometryCalculator.correctedBpd(null, null));
    }

    function testAbdominalCircumferenceWithValidArgs() {
        assertEquals("Abdominal Circumference for A1 = 5 mm, A2 = 5 mm is 15.7", 15.7, BiometryCalculator.abdomenCircumference(5, 5));
    }
    function testAbdominalCircumferenceWithInvalidArgs() {
        assertEquals("Abdominal Circumference for A1 = null, A2 = 10 mm is 0", 0, BiometryCalculator.abdomenCircumference(null, 10));
        assertEquals("Abdominal Circumference for A1 = 10 mm, A2 = null is 0", 0, BiometryCalculator.abdomenCircumference(10, null));
    }
    function testAbdominalCircumferenceWeeksWithValidArgs() {
        assertEquals("Abdominal Circumference for A1 = 5 mm, A2 = 10 mm is 9.4", 9.4, BiometryCalculator.abdomenCircumferenceWeeks(5, 10));
        assertEquals("Abdominal Circumference for A1 = 10 mm, A2 = 20 mm is 11.3", 11.3, BiometryCalculator.abdomenCircumferenceWeeks(10, 20));
        assertEquals("Abdominal Circumference for A1 = 20 mm, A2 = 30 mm is 13.9", 13.9, BiometryCalculator.abdomenCircumferenceWeeks(20, 30));
    }
    function testAbdominalCircumferenceWeeksWithInvalidArgs() {
        assertEquals("Abdominal Circumference for null is 0", 0.0, BiometryCalculator.abdomenCircumferenceWeeks(null));
    }

    function testFemurWithValidArgs() {
        assertEquals("Femur for 1 mm is 9.8", 9.8, BiometryCalculator.femurWeeks(1));
        assertEquals("Femur for 10 mm is 12.6", 12.6, BiometryCalculator.femurWeeks(10));
        assertEquals("Femur for 50 mm is 27.0", 27.0, BiometryCalculator.femurWeeks(50));
    }
    function testFemurWithInvalidArgs() {
        assertEquals("Femur for null is 0", 0, BiometryCalculator.femurWeeks(null));
    }

    function testAverageWeeksWithValidArgs() {
        assertEquals("Average Weeks for BPD = 0, Abd Circ = 0, Femur = 0 is 0.0", 0.0, BiometryCalculator.averageWeeks(0, 0, 0));
        assertEquals("Average Weeks for BPD = 10, Abd Circ = 0, Femur = 0 is 10.0", 10.0, BiometryCalculator.averageWeeks(10, 0, 0));
        assertEquals("Average Weeks for BPD = 0, Abd Circ = 10, Femur = 0 is 10.0", 10.0, BiometryCalculator.averageWeeks(0, 10, 0));
        assertEquals("Average Weeks for BPD = 0, Abd Circ = 0, Femur = 10 is 10.0", 10.0, BiometryCalculator.averageWeeks(0, 0, 10));
        assertEquals("Average Weeks for BPD = 10, Abd Circ = 12, Femur = 0 is 11.0", 11.0, BiometryCalculator.averageWeeks(10, 12, 0));
        assertEquals("Average Weeks for BPD = 0, Abd Circ = 10, Femur = 12 is 11.0", 11.0, BiometryCalculator.averageWeeks(0, 10, 12));
        assertEquals("Average Weeks for BPD = 10, Abd Circ = 0, Femur = 12 is 11.0", 11.0, BiometryCalculator.averageWeeks(10, 0, 12));
        assertEquals("Average Weeks for BPD = 10, Abd Circ = 11, Femur = 12 is 11.0", 11.0, BiometryCalculator.averageWeeks(10, 11, 12));
    }

    function testEfwWithValidArgs() {
		// All expected values are calculated from eRIS.
	
		var acX1 = 12, acY1 = 12;
		var fl1 = 12;
		var bpd1 = 12, ofd1 = 12;
	
        assertEquals("EFW", 70, BiometryCalculator.efw(true, true, acX1, acY1, fl1, bpd1, ofd1));
        assertEquals("EFW", 40, BiometryCalculator.efw(true, false, acX1, acY1, fl1, bpd1, ofd1));  // NB: this value is expected to be 30 based on Dr. Toi's spreadsheet, but 40 in the eRIS
        assertEquals("EFW", 60, BiometryCalculator.efw(false, true, acX1, acY1, fl1, bpd1, ofd1));
        assertEquals("EFW", 0, BiometryCalculator.efw(false, false, acX1, acY1, fl1, bpd1, ofd1));

		var acX2 = 50, acY2 = 50;
		var fl2 = 50;
		var bpd2 = 50, ofd2 = 50;
	
		var ac2 = BiometryCalculator.abdomenCircumference(50, 50);
		var fl2 = 50;
		var bpdc2 = BiometryCalculator.correctedBpd(50, 50);
	
        assertEquals("EFW", 580, BiometryCalculator.efw(true, true, acX2, acY2, fl2, bpd2, ofd2));
        assertEquals("EFW", 340, BiometryCalculator.efw(true, false, acX2, acY2, fl2, bpd2, ofd2));
        assertEquals("EFW", 620, BiometryCalculator.efw(false, true, acX2, acY2, fl2, bpd2, ofd2));
        assertEquals("EFW", 0, BiometryCalculator.efw(false, false, acX2, acY2, fl2, bpd2, ofd2));

		var acX3 = 75, acY3 = 75;
		var fl3 = 75;
		var bpd3 = 75, ofd3 = 75;
	
		// These values are all 10 higher than values calculated via Dr. Toi's spreadsheet.
        assertEquals("EFW", 1720, BiometryCalculator.efw(true, true, acX3, acY3, fl3, bpd3, ofd3));
        assertEquals("EFW", 1130, BiometryCalculator.efw(true, false, acX3, acY3, fl3, bpd3, ofd3));
        assertEquals("EFW", 1960, BiometryCalculator.efw(false, true, acX3, acY3, fl3, bpd3, ofd3));
        assertEquals("EFW", 0, BiometryCalculator.efw(false, false, acX3, acY3, fl3, bpd3, ofd3));
	}
	</script>
 </body>
</html>
