<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Angio/Interventional Details</title>
	<link href="../../css/default.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript" src="../../js/jsx.js"></script>
	<script type="text/javascript" src="../../js/jsml.js"></script>
	<script type="text/javascript" src="../../js/ui.js"></script>
	<script type="text/javascript" src="../../js/ris.js"></script>
	<script type="text/javascript" src="../../js/preview.js"></script>
	<script type="text/javascript" src="../../js/layout.js"></script>
	<script type="text/javascript" >
		var data = {};
		var errorProvider = new ErrorProvider();

		var examLocations =
		{
			"MSH" : [
				"GE Essential",
				"GE Seno DS",
				"Mammo US - Toshiba 1",
				"Mammo US - Toshiba 2",
				"Mammo US - Toshiba 3",
				"Stereo Biopsy - S. Mammomat",
				"Not Applicable"
			],
			"TGH" : [
			],
			"TWH" : [
			],
			"PMH" : [
				"GE Essential",
				"GE Mammo 2000DS",
				"PMH Breast Ultrasound 1",
				"PMH Breast Ultrasound 2",
				"PMH Breast Ultrasound 3",
				"Siemens I",
				"Not Applicable"
			],
			"WCH" : [
				"W368B",
				"W371",
				"W375",
				"W376",
				"W377",
				"W397",
				"Not Applicable"
			]
		}

		function onBodyLoad()
		{
			try
			{
				scaleWidth();

				var startTime;
				var stopTime;
				var facility;

				if(Ris)
				{
					data = JSML.parse(Ris.getTag("Documentation")) || {};

					var mpps = Ris.getHealthcareContext();
					startTime = mpps.StartTime;
					stopTime = mpps.EndTime;
					facility = mpps.ModalityProcedureSteps[0].Procedure.PerformingFacility.Code;
									
					readOnly = Ris.getTag("ReadOnly") === "true" ? true : false;
					Field.show($("readOnlyHeader"), readOnly);
				}

				data.acquisition = data.acquisition || {};
				data.acquisition.startTime = data.acquisition.startTime || startTime;
				data.acquisition.stopTime = data.acquisition.stopTime || stopTime;
				data.acquisition.repeatReasons = data.acquisition.repeatReasons || {};

				initAcquisitionTable(facility);
			}
			catch(e)
			{
				var message = "Failed to load details page.  An exception occurred in the script. Error name: " + e.name + ". Error message: " + e.message;
				Field.setValue($("myForm"), message);
			}
		}

		function initAcquisitionTable(facility)
		{
			var acquisitionTable = Table.createTable($("acquisitionTable"), { editInPlace: true, flow: true, checkBoxes: false },
			[
				{  label: "Equipment/Device ID/Location",
					cellType: "choice",
					choices: examLocations[facility],
					getValue: function(item) { return item.equipment; },
					setValue: function(item, value) { item.equipment = value; },
					getError: function(item) { return null; }
				},
				{  label: "Radiation Dose",
					cellType: "text",
					size: 10,
					getValue: function(item) { return item.dose; },
					setValue: function(item, value) { item.dose = value; },
					getError: function(item) { return null; }
				}
			]);

			acquisitionTable.errorProvider = errorProvider;   // share errorProvider with the rest of the form
			acquisitionTable.bindItems([data.acquisition]);

			var additionalAcquisitionTable = Table.createTable($("additionalAcquisitionTable"), { editInPlace: true, flow: true, checkBoxes: false },
			[
				{	label: "Number of Digital Images",
					cellType: "text",
					getValue: function(item) { return item.numberDigitalImages; },
					setValue: function(item, value) { item.numberDigitalImages = value; },
					getError: function(item) { return null; }
				},
				{	label: "Number of Repeats",
					cellType: "text",
					getValue: function(item) { return item.numberRepeats; },
					setValue: function(item, value) { item.numberRepeats = value; },
					getError: function(item) { return null; }
				}
			]);

			additionalAcquisitionTable.errorProvider = errorProvider;   // share errorProvider with the rest of the form
			additionalAcquisitionTable.bindItems([data.acquisition]);

			var repeatReasonsTable = Table.createTable($("repeatReasonsTable"), { editInPlace: true, flow: true, checkBoxes: false },
			[
				new RepeatReasonCell("Artifacts", "artifacts"),
				new RepeatReasonCell("Equipment Failure", "equipmentFailure"),
				new RepeatReasonCell("Motion", "motion"),
				new RepeatReasonCell("Positioning", "positioning"),
				new RepeatReasonCell("Technique", "technique")
			]);

			repeatReasonsTable.errorProvider = errorProvider;   // share errorProvider with the rest of the form
			repeatReasonsTable.bindItems([data.acquisition]);
		}

		function RepeatReasonCell(label, prop)
		{
			this.label = label;
			this.cellType = "bool";
			this.prop = prop;
			this.getValue = function(item) { return item.repeatReasons[this.prop]; };
			this.setValue = function(item, value) { item.repeatReasons[this.prop] = value; };
			this.getError = function(item) { return null; };
		}

		//////////////////////////////////////////////////////////////////////////
		// RIS integration API
		function hasValidationErrors()
		{
			return errorProvider.hasErrors();
		}

		function showValidation(show)
		{
			errorProvider.setVisible(show);
		}

		function saveData()
		{
			data.capturePageUrl = window.location;
			Ris.setTag("Documentation", JSML.create(data, "data"));
			Ris.setTag("ExamLocation", data.acquisition.equipment);
		}
		//////////////////////////////////////////////////////////////////////////
	</script>
</head>
<body onload="javascript: onBodyLoad()" onresize="javascript: scaleWidth()">
	<form id="myForm">
		<div id="readOnlyHeader">Changes to this form will not be saved.</div>
		<p class="sectionheading">Exam Acquisition</p>
		<table id="acquisitionTable">
			<tr><td class="tableheading"></td></tr>
		</table>
		<table id="additionalAcquisitionTable">
			<tr><td class="tableheading"></td></tr>
		</table>
		<table id="repeatReasonsTable">
			<tr><td class="">Repeat Reasons</td></tr>
		</table>
	</form>         
</body>
</html>
