<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>Angio/Interventional Details</title>
	<link href="../../css/default.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript" SRC="../../js/SparrowScripts/datepicker/ss_datepicker_settings.js"></script>
	<script type="text/javascript" SRC="../../js/SparrowScripts/datepicker/ss_datepicker.js"></script>
	<script type="text/javascript" SRC="../../js/SparrowScripts/timepicker/ss_timepicker_settings.js"></script>
	<script type="text/javascript" SRC="../../js/SparrowScripts/timepicker/ss_timepicker.js"></script>
	<script type="text/javascript" src="../../js/jsx.js"></script>
	<script type="text/javascript" src="../../js/jsml.js"></script>
	<script type="text/javascript" src="../../js/ui.js"></script>
	<script type="text/javascript" src="../../js/ris.js"></script>
	<script type="text/javascript" src="../../js/layout.js"></script>
	<script type="text/javascript" src="../../js/preview.js"></script>
	<script type="text/javascript" >
		var data = {};
		var errorProvider = new ErrorProvider();

		var ivContrastTypes =
		[
			"air",
			"barium",
			"isovue",
			"Visipaque 270",
			"Visipaque 320",
			"Omnipaque",
			"water",
			"water soluble",
			"saline flush"
		]
		
		var examLocations =
		{
			"Angiography" : {
				"MSH" : [
					"ANGIO",
					"F1",
					"F2",
					"RPCU",
					"Not Applicable"
				],
				"TGH" : [
					"447H",
					"447I Bx CTR",
					"456 Integris",
					"458 Angiostar",
					"Patient Holding",
					"Not Applicable"
				],
				"TWH" : [
					"3F-539",
					"3F-542",
					"EW3-528",
					"Not Applicable"
				],
				"PMH" : [
				],
				"WCH" : [
					"W285",
				]
			},
			"Interventional" : {
				"MSH" : [
					"ANGIO",
					"F1",
					"F2",
					"RPCU",
					"Not Applicable"
				],
				"TGH" : [
					"158",
					"1ES448",
					"1ES449a",
					"1ES449c",
					"447H",
					"447I Bx CTR",
					"Not Applicable"
				],
				"TWH" : [
					"3-528 Polystar",
					"3F-536",
					"3F-539",
					"3F-542",
					"Not Applicable"
				],
				"PMH" : [
				],
				"WCH" : [
				]
			}
		}

		function onBodyLoad()
		{		   
			try
			{
				scaleWidth();

				var startTime;
				var stopTime;
				var facility;
				var modality;

				if(Ris)
				{
					data = JSML.parse(Ris.getTag("Documentation")) || {};

					var mpps = Ris.getHealthcareContext();
					startTime = mpps.StartTime;
					stopTime = mpps.EndTime;
					facility = mpps.ModalityProcedureSteps[0].Procedure.PerformingFacility.Code;
					modality = mpps.ModalityProcedureSteps[0].ModalityName;
					
					readOnly = Ris.getTag("ReadOnly") === "true" ? true : false;
					Field.show($("readOnlyHeader"), readOnly);
				}

				data.acquisition = data.acquisition || {};
				data.acquisition.startTime = data.acquisition.startTime || startTime;
				data.acquisition.stopTime = data.acquisition.stopTime || stopTime;

				data.ivAccess = data.ivAccess || [];
				data.ivContrast = data.ivContrast || [];
				
				initAcquisitionTable(facility, modality);

				initIVAccessTable();
				initIVContrastTable();
			}
			catch(e)
			{
				var message = "Failed to load details page.  An exception occurred in the script. Error name: " + e.name + ". Error message: " + e.message;
				Field.setValue($("myForm"), message);
			}
		}
		
		function initAcquisitionTable(facility, modality)
		{
			var table = Table.createTable($("acquisitionTable"), { editInPlace: true, flow: true, checkBoxes: false },
			[
				{  label: "Equipment/Device ID/Location",
					cellType: "choice",
					choices: examLocations[modality][facility],
					getValue: function(item) { return item.equipment; },
					setValue: function(item, value) { item.equipment = value; },
					getError: function(item) { return null; }
				},
				{  label: "Radiation Dose",
					cellType: "choice",
					size: 10,
					getValue: function(item) { return item.dose; },
					setValue: function(item, value) { item.dose = value; },
					getError: function(item) { return null; }
				}
			]);

			table.errorProvider = errorProvider;   // share errorProvider with the rest of the form
			table.bindItems([data.acquisition]);
		}
		
		function initIVAccessTable()
		{
			var ivAccessTable = Table.createTable($("ivAccessTable"), 
				{editInPlace: true, flow: true, checkBoxes: true },
				[
					{  label: "Type",
						cellType: "choice",
						choices: ["New", "Existing"],
						getValue: function(item) { return item.type; },
						setValue: function(item, value) { item.type = value; },
						getError: function(item) { return null; }
					},
					{  label: "Side",
						cellType: "choice",
						choices: ["Right", "Left"],
						getValue: function(item) { return item.side; },
						setValue: function(item, value) { item.side = value; },
						getError: function(item) { return null; }
					},
					{  label: "Site",
						cellType: "choice",
						choices: ["Antecubital Fossa", "Forearm", "Hand", "Wrist"],
						getValue: function(item) { return item.bodySite; },
						setValue: function(item, value) { item.bodySite = value; },
						getError: function(item) { return null; }
					},
					{  label: "Accessed By",
						cellType: "lookup",
						lookup: function(query) { return Ris.resolveStaffName(query); },
						getValue: function(item) { return item.staff; },
						setValue: function(item, value) { item.staff = value; },
						getError: function(item) { return null; }
					}
				]);
			
			ivAccessTable.errorProvider = errorProvider;
			ivAccessTable.bindItems(data.ivAccess);               
		}
		
		function onAddIVAccess()
		{
			data.ivAccess.add( {} );
		}

		function onDeleteIVAccess()
		{
			var checkedItems = $("ivAccessTable").getCheckedItems();
			if(checkedItems.length > 0)
			{
				if(confirm("Delete selected IV access documentation?"))
				{
						checkedItems.each(function(item) { data.ivAccess.remove(item); });
						$("ivAccessCheckAllNone").checked = false;
				}
			}
			else
			{
				alert("Nothing selected");
			}
		}

		function onIVAccessCheckAllNone()
		{
			data.ivAccess.each(function(item) { $("ivAccessTable").setItemCheckState(item, $("ivAccessCheckAllNone").checked); });
		}         

		function initIVContrastTable()
		{
				var ivContrastTable = Table.createTable($("ivContrastTable"), 
					{editInPlace: true, flow: true, checkBoxes: true },
					[
						{  label: "Type",
							cellType: "choice",
							choices: ivContrastTypes,
							getValue: function(item) { return item.type; },
							setValue: function(item, value) { item.type = value; },
							getError: function(item) { return null; }
						},
						{  label: "Amount",
							cellType: "text",
							size: 10,
							getValue: function(item) { return item.amount; },
							setValue: function(item, value) { item.amount = value; },
							getError: function(item) { return null; }
						},
						{  label: "Measurement",
							cellType: "text",
							size: 10,
							getValue: function(item) { return item.measurement; },
							setValue: function(item, value) { item.measurement = value; },
							getError: function(item) { return null; }
						},
						{  label: "Admin By",
							cellType: "lookup",
							lookup: function(query) { return Ris.resolveStaffName(query); },
							getValue: function(item) { return item.staff; },
							setValue: function(item, value) { item.staff = value; },
							getError: function(item) { return null; }
						},
						{  label: "Time",
							cellType: "datetime",
							getValue: function(item) { return item.time; },
							setValue: function(item, value) { item.time = value; },
							getError: function(item) { return null; }
						}
					]);
				
				ivContrastTable.errorProvider = errorProvider;
				ivContrastTable.bindItems(data.ivContrast);
		}
		
		function onAddIVContrast()
		{
			data.ivContrast.add( {} );
		}

		function onDeleteIVContrast()
		{
			var checkedItems = $("ivContrastTable").getCheckedItems();
			if(checkedItems.length > 0)
			{
				if(confirm("Delete selected IV contrasts documentation?"))
				{
						checkedItems.each(function(item) { data.ivContrast.remove(item); });
						$("ivContrastCheckAllNone").checked = false;
				}
			}
			else
			{
				alert("Nothing selected");
			}
		}

		function onIVContrastCheckAllNone()
		{
			data.ivContrast.each(function(item) { $("ivContrastTable").setItemCheckState(item, $("ivContrastCheckAllNone").checked); });
		}         

		//////////////////////////////////////////////////////////////////////////
		// RIS integration API
		function hasValidationErrors()
		{
			return errorProvider.hasErrors();
		}

		function showValidation(show)
		{
			errorProvider.setVisible(show);
		}

		function saveData()
		{
			data.capturePageUrl = window.location;
			Ris.setTag("Documentation", JSML.create(data, "data"));
			Ris.setTag("ExamLocation", data.acquisition.equipment);
		}
		//////////////////////////////////////////////////////////////////////////
	</script>
</head>
<body onload="javascript: onBodyLoad()" onresize="javascript: scaleWidth()">
	<form id="myForm">
		<div id="readOnlyHeader">Changes to this form will not be saved.</div>
		<p class="sectionheading">Exam Acquisition/Mpps</p>
		<table id="acquisitionTable" width="100%">
			<tr><td class="tableheading"></td></tr>
		</table>
		<p class="sectionheading">Contrast/Injections</p>
		<p class="sectionheading">IV - Access</p>
		<div class="addDeleteButtons">
			<input type="button" value="Add" onclick="javascript: onAddIVAccess()" />
			<input type="button" value="Delete" onclick="javascript: onDeleteIVAccess()" />
		</div>
		<table id="ivAccessTable" border="1" width="100%">
			<tr>
				<td colspan="2"><input id="ivAccessCheckAllNone" type="checkbox" onclick="javascript:onIVAccessCheckAllNone()">Select All/None</input></td>
			</tr>
		</table>
		<p class="sectionheading">IV - Contrast</p>
		<div class="addDeleteButtons">
			<input type="button" value="Add" onclick="javascript: onAddIVContrast()" />
			<input type="button" value="Delete" onclick="javascript: onDeleteIVContrast()" />
		</div>
		<table id="ivContrastTable" border="1" width="100%">
			<tr>
				<td colspan="2"><input id="ivContrastCheckAllNone" type="checkbox" onclick="javascript:onIVContrastCheckAllNone()">Select All/None</input></td>
			</tr>
		</table>
	</form>
</body>
</html>
