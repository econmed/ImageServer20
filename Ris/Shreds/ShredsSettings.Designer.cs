//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.Ris.Shreds {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "8.0.0.0")]
    internal sealed partial class ShredsSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static ShredsSettings defaultInstance = ((ShredsSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new ShredsSettings())));
        
        public static ShredsSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("24")]
        public int DefaultImageAvailabilityUpdateStrategyExpirationTimeInHours {
            get {
                return ((int)(this["DefaultImageAvailabilityUpdateStrategyExpirationTimeInHours"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int DefaultImageAvailabilityUpdateStrategyNextScheduledTimeForUnknownAvailabilityInMinutes {
            get {
                return ((int)(this["DefaultImageAvailabilityUpdateStrategyNextScheduledTimeForUnknownAvailabilityInMi" +
                    "nutes"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int DefaultImageAvailabilityUpdateStrategyNextScheduledTimeForZeroAvailabilityInMinutes {
            get {
                return ((int)(this["DefaultImageAvailabilityUpdateStrategyNextScheduledTimeForZeroAvailabilityInMinut" +
                    "es"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5")]
        public int DefaultImageAvailabilityUpdateStrategyNextScheduledTimeForPartialAvailabilityInMinutes {
            get {
                return ((int)(this["DefaultImageAvailabilityUpdateStrategyNextScheduledTimeForPartialAvailabilityInMi" +
                    "nutes"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("ImageAvailabilityScu")]
        public string ImageAvailabilityDicomCallingAETitle {
            get {
                return ((string)(this["ImageAvailabilityDicomCallingAETitle"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("serverAE")]
        public string ImageAvailabilityDicomServerAETitle {
            get {
                return ((string)(this["ImageAvailabilityDicomServerAETitle"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("serverHost")]
        public string ImageAvailabilityDicomServerHost {
            get {
                return ((string)(this["ImageAvailabilityDicomServerHost"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4006")]
        public int ImageAvailabilityDicomServerPort {
            get {
                return ((int)(this["ImageAvailabilityDicomServerPort"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20")]
        public int BatchSize {
            get {
                return ((int)(this["BatchSize"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("30")]
        public int SleepDurationInSeconds {
            get {
                return ((int)(this["SleepDurationInSeconds"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int ImageAvailabilityNextScheduledTimeForErrorInMinutes {
            get {
                return ((int)(this["ImageAvailabilityNextScheduledTimeForErrorInMinutes"]));
            }
        }
    }
}
